function PxLoaderImage(url, tags, priority) {
    var self = this, loader = null;
    this.img = new Image(), this.tags = tags, this.priority = priority;
    var onReadyStateChange = function() {
        "complete" === self.img.readyState && (removeEventHandlers(), loader.onLoad(self));
    }, onLoad = function() {
        removeEventHandlers(), loader.onLoad(self);
    }, onError = function() {
        removeEventHandlers(), loader.onError(self);
    }, removeEventHandlers = function() {
        self.unbind("load", onLoad), self.unbind("readystatechange", onReadyStateChange), 
        self.unbind("error", onError);
    };
    this.start = function(pxLoader) {
        loader = pxLoader, self.bind("load", onLoad), self.bind("readystatechange", onReadyStateChange), 
        self.bind("error", onError), self.img.src = url;
    }, this.checkStatus = function() {
        self.img.complete && (removeEventHandlers(), loader.onLoad(self));
    }, this.onTimeout = function() {
        removeEventHandlers(), self.img.complete ? loader.onLoad(self) : loader.onTimeout(self);
    }, this.getName = function() {
        return url;
    }, this.bind = function(eventName, eventHandler) {
        self.img.addEventListener ? self.img.addEventListener(eventName, eventHandler, !1) : self.img.attachEvent && self.img.attachEvent("on" + eventName, eventHandler);
    }, this.unbind = function(eventName, eventHandler) {
        self.img.removeEventListener ? self.img.removeEventListener(eventName, eventHandler, !1) : self.img.detachEvent && self.img.detachEvent("on" + eventName, eventHandler);
    };
}

function PxLoaderVideo(url, tags, priority) {
    var self = this, loader = null;
    this.readyEventName = "canplaythrough";
    try {
        this.vid = new Video();
    } catch (e) {
        this.vid = document.createElement("video");
    }
    this.tags = tags, this.priority = priority;
    var onReadyStateChange = function() {
        4 === self.vid.readyState && (removeEventHandlers(), loader.onLoad(self));
    }, onLoad = function() {
        removeEventHandlers(), loader.onLoad(self);
    }, onError = function() {
        removeEventHandlers(), loader.onError(self);
    }, removeEventHandlers = function() {
        self.unbind("load", onLoad), self.unbind(self.readyEventName, onReadyStateChange), 
        self.unbind("error", onError);
    };
    this.start = function(pxLoader) {
        loader = pxLoader, self.bind("load", onLoad), self.bind(self.readyEventName, onReadyStateChange), 
        self.bind("error", onError), self.bind("suspend", onLoad), self.vid.src = url, self.vid.load();
    }, this.checkStatus = function() {
        4 === self.vid.readyState && (removeEventHandlers(), loader.onLoad(self));
    }, this.onTimeout = function() {
        removeEventHandlers(), 4 !== self.vid.readyState ? loader.onLoad(self) : loader.onTimeout(self);
    }, this.getName = function() {
        return url;
    }, this.bind = function(eventName, eventHandler) {
        self.vid.addEventListener ? self.vid.addEventListener(eventName, eventHandler, !1) : self.vid.attachEvent && self.vid.attachEvent("on" + eventName, eventHandler);
    }, this.unbind = function(eventName, eventHandler) {
        self.vid.removeEventListener ? self.vid.removeEventListener(eventName, eventHandler, !1) : self.vid.detachEvent && self.vid.detachEvent("on" + eventName, eventHandler);
    };
}

function onYouTubePlayerAPIReady() {
    mejs.YouTubeApi.iFrameReady();
}

function onYouTubePlayerReady(id) {
    mejs.YouTubeApi.flashReady(id);
}

!function(window, undefined) {
    function isArraylike(obj) {
        var length = obj.length, type = jQuery.type(obj);
        return jQuery.isWindow(obj) ? !1 : 1 === obj.nodeType && length ? !0 : "array" === type || "function" !== type && (0 === length || "number" == typeof length && length > 0 && length - 1 in obj);
    }
    function createOptions(options) {
        var object = optionsCache[options] = {};
        return jQuery.each(options.match(core_rnotwhite) || [], function(_, flag) {
            object[flag] = !0;
        }), object;
    }
    function internalData(elem, name, data, pvt) {
        if (jQuery.acceptData(elem)) {
            var thisCache, ret, internalKey = jQuery.expando, getByName = "string" == typeof name, isNode = elem.nodeType, cache = isNode ? jQuery.cache : elem, id = isNode ? elem[internalKey] : elem[internalKey] && internalKey;
            if (id && cache[id] && (pvt || cache[id].data) || !getByName || data !== undefined) return id || (isNode ? elem[internalKey] = id = core_deletedIds.pop() || jQuery.guid++ : id = internalKey), 
            cache[id] || (cache[id] = {}, isNode || (cache[id].toJSON = jQuery.noop)), ("object" == typeof name || "function" == typeof name) && (pvt ? cache[id] = jQuery.extend(cache[id], name) : cache[id].data = jQuery.extend(cache[id].data, name)), 
            thisCache = cache[id], pvt || (thisCache.data || (thisCache.data = {}), thisCache = thisCache.data), 
            data !== undefined && (thisCache[jQuery.camelCase(name)] = data), getByName ? (ret = thisCache[name], 
            null == ret && (ret = thisCache[jQuery.camelCase(name)])) : ret = thisCache, ret;
        }
    }
    function internalRemoveData(elem, name, pvt) {
        if (jQuery.acceptData(elem)) {
            var i, l, thisCache, isNode = elem.nodeType, cache = isNode ? jQuery.cache : elem, id = isNode ? elem[jQuery.expando] : jQuery.expando;
            if (cache[id]) {
                if (name && (thisCache = pvt ? cache[id] : cache[id].data)) {
                    jQuery.isArray(name) ? name = name.concat(jQuery.map(name, jQuery.camelCase)) : name in thisCache ? name = [ name ] : (name = jQuery.camelCase(name), 
                    name = name in thisCache ? [ name ] : name.split(" "));
                    for (i = 0, l = name.length; l > i; i++) delete thisCache[name[i]];
                    if (!(pvt ? isEmptyDataObject : jQuery.isEmptyObject)(thisCache)) return;
                }
                (pvt || (delete cache[id].data, isEmptyDataObject(cache[id]))) && (isNode ? jQuery.cleanData([ elem ], !0) : jQuery.support.deleteExpando || cache != cache.window ? delete cache[id] : cache[id] = null);
            }
        }
    }
    function dataAttr(elem, key, data) {
        if (data === undefined && 1 === elem.nodeType) {
            var name = "data-" + key.replace(rmultiDash, "-$1").toLowerCase();
            if (data = elem.getAttribute(name), "string" == typeof data) {
                try {
                    data = "true" === data ? !0 : "false" === data ? !1 : "null" === data ? null : +data + "" === data ? +data : rbrace.test(data) ? jQuery.parseJSON(data) : data;
                } catch (e) {}
                jQuery.data(elem, key, data);
            } else data = undefined;
        }
        return data;
    }
    function isEmptyDataObject(obj) {
        var name;
        for (name in obj) if (("data" !== name || !jQuery.isEmptyObject(obj[name])) && "toJSON" !== name) return !1;
        return !0;
    }
    function returnTrue() {
        return !0;
    }
    function returnFalse() {
        return !1;
    }
    function sibling(cur, dir) {
        do cur = cur[dir]; while (cur && 1 !== cur.nodeType);
        return cur;
    }
    function winnow(elements, qualifier, keep) {
        if (qualifier = qualifier || 0, jQuery.isFunction(qualifier)) return jQuery.grep(elements, function(elem, i) {
            var retVal = !!qualifier.call(elem, i, elem);
            return retVal === keep;
        });
        if (qualifier.nodeType) return jQuery.grep(elements, function(elem) {
            return elem === qualifier === keep;
        });
        if ("string" == typeof qualifier) {
            var filtered = jQuery.grep(elements, function(elem) {
                return 1 === elem.nodeType;
            });
            if (isSimple.test(qualifier)) return jQuery.filter(qualifier, filtered, !keep);
            qualifier = jQuery.filter(qualifier, filtered);
        }
        return jQuery.grep(elements, function(elem) {
            return jQuery.inArray(elem, qualifier) >= 0 === keep;
        });
    }
    function createSafeFragment(document) {
        var list = nodeNames.split("|"), safeFrag = document.createDocumentFragment();
        if (safeFrag.createElement) for (;list.length; ) safeFrag.createElement(list.pop());
        return safeFrag;
    }
    function findOrAppend(elem, tag) {
        return elem.getElementsByTagName(tag)[0] || elem.appendChild(elem.ownerDocument.createElement(tag));
    }
    function disableScript(elem) {
        var attr = elem.getAttributeNode("type");
        return elem.type = (attr && attr.specified) + "/" + elem.type, elem;
    }
    function restoreScript(elem) {
        var match = rscriptTypeMasked.exec(elem.type);
        return match ? elem.type = match[1] : elem.removeAttribute("type"), elem;
    }
    function setGlobalEval(elems, refElements) {
        for (var elem, i = 0; null != (elem = elems[i]); i++) jQuery._data(elem, "globalEval", !refElements || jQuery._data(refElements[i], "globalEval"));
    }
    function cloneCopyEvent(src, dest) {
        if (1 === dest.nodeType && jQuery.hasData(src)) {
            var type, i, l, oldData = jQuery._data(src), curData = jQuery._data(dest, oldData), events = oldData.events;
            if (events) {
                delete curData.handle, curData.events = {};
                for (type in events) for (i = 0, l = events[type].length; l > i; i++) jQuery.event.add(dest, type, events[type][i]);
            }
            curData.data && (curData.data = jQuery.extend({}, curData.data));
        }
    }
    function fixCloneNodeIssues(src, dest) {
        var nodeName, e, data;
        if (1 === dest.nodeType) {
            if (nodeName = dest.nodeName.toLowerCase(), !jQuery.support.noCloneEvent && dest[jQuery.expando]) {
                data = jQuery._data(dest);
                for (e in data.events) jQuery.removeEvent(dest, e, data.handle);
                dest.removeAttribute(jQuery.expando);
            }
            "script" === nodeName && dest.text !== src.text ? (disableScript(dest).text = src.text, 
            restoreScript(dest)) : "object" === nodeName ? (dest.parentNode && (dest.outerHTML = src.outerHTML), 
            jQuery.support.html5Clone && src.innerHTML && !jQuery.trim(dest.innerHTML) && (dest.innerHTML = src.innerHTML)) : "input" === nodeName && manipulation_rcheckableType.test(src.type) ? (dest.defaultChecked = dest.checked = src.checked, 
            dest.value !== src.value && (dest.value = src.value)) : "option" === nodeName ? dest.defaultSelected = dest.selected = src.defaultSelected : ("input" === nodeName || "textarea" === nodeName) && (dest.defaultValue = src.defaultValue);
        }
    }
    function getAll(context, tag) {
        var elems, elem, i = 0, found = typeof context.getElementsByTagName !== core_strundefined ? context.getElementsByTagName(tag || "*") : typeof context.querySelectorAll !== core_strundefined ? context.querySelectorAll(tag || "*") : undefined;
        if (!found) for (found = [], elems = context.childNodes || context; null != (elem = elems[i]); i++) !tag || jQuery.nodeName(elem, tag) ? found.push(elem) : jQuery.merge(found, getAll(elem, tag));
        return tag === undefined || tag && jQuery.nodeName(context, tag) ? jQuery.merge([ context ], found) : found;
    }
    function fixDefaultChecked(elem) {
        manipulation_rcheckableType.test(elem.type) && (elem.defaultChecked = elem.checked);
    }
    function vendorPropName(style, name) {
        if (name in style) return name;
        for (var capName = name.charAt(0).toUpperCase() + name.slice(1), origName = name, i = cssPrefixes.length; i--; ) if (name = cssPrefixes[i] + capName, 
        name in style) return name;
        return origName;
    }
    function isHidden(elem, el) {
        return elem = el || elem, "none" === jQuery.css(elem, "display") || !jQuery.contains(elem.ownerDocument, elem);
    }
    function showHide(elements, show) {
        for (var display, elem, hidden, values = [], index = 0, length = elements.length; length > index; index++) elem = elements[index], 
        elem.style && (values[index] = jQuery._data(elem, "olddisplay"), display = elem.style.display, 
        show ? (values[index] || "none" !== display || (elem.style.display = ""), "" === elem.style.display && isHidden(elem) && (values[index] = jQuery._data(elem, "olddisplay", css_defaultDisplay(elem.nodeName)))) : values[index] || (hidden = isHidden(elem), 
        (display && "none" !== display || !hidden) && jQuery._data(elem, "olddisplay", hidden ? display : jQuery.css(elem, "display"))));
        for (index = 0; length > index; index++) elem = elements[index], elem.style && (show && "none" !== elem.style.display && "" !== elem.style.display || (elem.style.display = show ? values[index] || "" : "none"));
        return elements;
    }
    function setPositiveNumber(elem, value, subtract) {
        var matches = rnumsplit.exec(value);
        return matches ? Math.max(0, matches[1] - (subtract || 0)) + (matches[2] || "px") : value;
    }
    function augmentWidthOrHeight(elem, name, extra, isBorderBox, styles) {
        for (var i = extra === (isBorderBox ? "border" : "content") ? 4 : "width" === name ? 1 : 0, val = 0; 4 > i; i += 2) "margin" === extra && (val += jQuery.css(elem, extra + cssExpand[i], !0, styles)), 
        isBorderBox ? ("content" === extra && (val -= jQuery.css(elem, "padding" + cssExpand[i], !0, styles)), 
        "margin" !== extra && (val -= jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles))) : (val += jQuery.css(elem, "padding" + cssExpand[i], !0, styles), 
        "padding" !== extra && (val += jQuery.css(elem, "border" + cssExpand[i] + "Width", !0, styles)));
        return val;
    }
    function getWidthOrHeight(elem, name, extra) {
        var valueIsBorderBox = !0, val = "width" === name ? elem.offsetWidth : elem.offsetHeight, styles = getStyles(elem), isBorderBox = jQuery.support.boxSizing && "border-box" === jQuery.css(elem, "boxSizing", !1, styles);
        if (0 >= val || null == val) {
            if (val = curCSS(elem, name, styles), (0 > val || null == val) && (val = elem.style[name]), 
            rnumnonpx.test(val)) return val;
            valueIsBorderBox = isBorderBox && (jQuery.support.boxSizingReliable || val === elem.style[name]), 
            val = parseFloat(val) || 0;
        }
        return val + augmentWidthOrHeight(elem, name, extra || (isBorderBox ? "border" : "content"), valueIsBorderBox, styles) + "px";
    }
    function css_defaultDisplay(nodeName) {
        var doc = document, display = elemdisplay[nodeName];
        return display || (display = actualDisplay(nodeName, doc), "none" !== display && display || (iframe = (iframe || jQuery("<iframe frameborder='0' width='0' height='0'/>").css("cssText", "display:block !important")).appendTo(doc.documentElement), 
        doc = (iframe[0].contentWindow || iframe[0].contentDocument).document, doc.write("<!doctype html><html><body>"), 
        doc.close(), display = actualDisplay(nodeName, doc), iframe.detach()), elemdisplay[nodeName] = display), 
        display;
    }
    function actualDisplay(name, doc) {
        var elem = jQuery(doc.createElement(name)).appendTo(doc.body), display = jQuery.css(elem[0], "display");
        return elem.remove(), display;
    }
    function buildParams(prefix, obj, traditional, add) {
        var name;
        if (jQuery.isArray(obj)) jQuery.each(obj, function(i, v) {
            traditional || rbracket.test(prefix) ? add(prefix, v) : buildParams(prefix + "[" + ("object" == typeof v ? i : "") + "]", v, traditional, add);
        }); else if (traditional || "object" !== jQuery.type(obj)) add(prefix, obj); else for (name in obj) buildParams(prefix + "[" + name + "]", obj[name], traditional, add);
    }
    function addToPrefiltersOrTransports(structure) {
        return function(dataTypeExpression, func) {
            "string" != typeof dataTypeExpression && (func = dataTypeExpression, dataTypeExpression = "*");
            var dataType, i = 0, dataTypes = dataTypeExpression.toLowerCase().match(core_rnotwhite) || [];
            if (jQuery.isFunction(func)) for (;dataType = dataTypes[i++]; ) "+" === dataType[0] ? (dataType = dataType.slice(1) || "*", 
            (structure[dataType] = structure[dataType] || []).unshift(func)) : (structure[dataType] = structure[dataType] || []).push(func);
        };
    }
    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR) {
        function inspect(dataType) {
            var selected;
            return inspected[dataType] = !0, jQuery.each(structure[dataType] || [], function(_, prefilterOrFactory) {
                var dataTypeOrTransport = prefilterOrFactory(options, originalOptions, jqXHR);
                return "string" != typeof dataTypeOrTransport || seekingTransport || inspected[dataTypeOrTransport] ? seekingTransport ? !(selected = dataTypeOrTransport) : void 0 : (options.dataTypes.unshift(dataTypeOrTransport), 
                inspect(dataTypeOrTransport), !1);
            }), selected;
        }
        var inspected = {}, seekingTransport = structure === transports;
        return inspect(options.dataTypes[0]) || !inspected["*"] && inspect("*");
    }
    function ajaxExtend(target, src) {
        var deep, key, flatOptions = jQuery.ajaxSettings.flatOptions || {};
        for (key in src) src[key] !== undefined && ((flatOptions[key] ? target : deep || (deep = {}))[key] = src[key]);
        return deep && jQuery.extend(!0, target, deep), target;
    }
    function ajaxHandleResponses(s, jqXHR, responses) {
        var firstDataType, ct, finalDataType, type, contents = s.contents, dataTypes = s.dataTypes, responseFields = s.responseFields;
        for (type in responseFields) type in responses && (jqXHR[responseFields[type]] = responses[type]);
        for (;"*" === dataTypes[0]; ) dataTypes.shift(), ct === undefined && (ct = s.mimeType || jqXHR.getResponseHeader("Content-Type"));
        if (ct) for (type in contents) if (contents[type] && contents[type].test(ct)) {
            dataTypes.unshift(type);
            break;
        }
        if (dataTypes[0] in responses) finalDataType = dataTypes[0]; else {
            for (type in responses) {
                if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
                    finalDataType = type;
                    break;
                }
                firstDataType || (firstDataType = type);
            }
            finalDataType = finalDataType || firstDataType;
        }
        return finalDataType ? (finalDataType !== dataTypes[0] && dataTypes.unshift(finalDataType), 
        responses[finalDataType]) : void 0;
    }
    function ajaxConvert(s, response) {
        var conv2, current, conv, tmp, converters = {}, i = 0, dataTypes = s.dataTypes.slice(), prev = dataTypes[0];
        if (s.dataFilter && (response = s.dataFilter(response, s.dataType)), dataTypes[1]) for (conv in s.converters) converters[conv.toLowerCase()] = s.converters[conv];
        for (;current = dataTypes[++i]; ) if ("*" !== current) {
            if ("*" !== prev && prev !== current) {
                if (conv = converters[prev + " " + current] || converters["* " + current], !conv) for (conv2 in converters) if (tmp = conv2.split(" "), 
                tmp[1] === current && (conv = converters[prev + " " + tmp[0]] || converters["* " + tmp[0]])) {
                    conv === !0 ? conv = converters[conv2] : converters[conv2] !== !0 && (current = tmp[0], 
                    dataTypes.splice(i--, 0, current));
                    break;
                }
                if (conv !== !0) if (conv && s["throws"]) response = conv(response); else try {
                    response = conv(response);
                } catch (e) {
                    return {
                        state: "parsererror",
                        error: conv ? e : "No conversion from " + prev + " to " + current
                    };
                }
            }
            prev = current;
        }
        return {
            state: "success",
            data: response
        };
    }
    function createStandardXHR() {
        try {
            return new window.XMLHttpRequest();
        } catch (e) {}
    }
    function createActiveXHR() {
        try {
            return new window.ActiveXObject("Microsoft.XMLHTTP");
        } catch (e) {}
    }
    function createFxNow() {
        return setTimeout(function() {
            fxNow = undefined;
        }), fxNow = jQuery.now();
    }
    function createTweens(animation, props) {
        jQuery.each(props, function(prop, value) {
            for (var collection = (tweeners[prop] || []).concat(tweeners["*"]), index = 0, length = collection.length; length > index; index++) if (collection[index].call(animation, prop, value)) return;
        });
    }
    function Animation(elem, properties, options) {
        var result, stopped, index = 0, length = animationPrefilters.length, deferred = jQuery.Deferred().always(function() {
            delete tick.elem;
        }), tick = function() {
            if (stopped) return !1;
            for (var currentTime = fxNow || createFxNow(), remaining = Math.max(0, animation.startTime + animation.duration - currentTime), temp = remaining / animation.duration || 0, percent = 1 - temp, index = 0, length = animation.tweens.length; length > index; index++) animation.tweens[index].run(percent);
            return deferred.notifyWith(elem, [ animation, percent, remaining ]), 1 > percent && length ? remaining : (deferred.resolveWith(elem, [ animation ]), 
            !1);
        }, animation = deferred.promise({
            elem: elem,
            props: jQuery.extend({}, properties),
            opts: jQuery.extend(!0, {
                specialEasing: {}
            }, options),
            originalProperties: properties,
            originalOptions: options,
            startTime: fxNow || createFxNow(),
            duration: options.duration,
            tweens: [],
            createTween: function(prop, end) {
                var tween = jQuery.Tween(elem, animation.opts, prop, end, animation.opts.specialEasing[prop] || animation.opts.easing);
                return animation.tweens.push(tween), tween;
            },
            stop: function(gotoEnd) {
                var index = 0, length = gotoEnd ? animation.tweens.length : 0;
                if (stopped) return this;
                for (stopped = !0; length > index; index++) animation.tweens[index].run(1);
                return gotoEnd ? deferred.resolveWith(elem, [ animation, gotoEnd ]) : deferred.rejectWith(elem, [ animation, gotoEnd ]), 
                this;
            }
        }), props = animation.props;
        for (propFilter(props, animation.opts.specialEasing); length > index; index++) if (result = animationPrefilters[index].call(animation, elem, props, animation.opts)) return result;
        return createTweens(animation, props), jQuery.isFunction(animation.opts.start) && animation.opts.start.call(elem, animation), 
        jQuery.fx.timer(jQuery.extend(tick, {
            elem: elem,
            anim: animation,
            queue: animation.opts.queue
        })), animation.progress(animation.opts.progress).done(animation.opts.done, animation.opts.complete).fail(animation.opts.fail).always(animation.opts.always);
    }
    function propFilter(props, specialEasing) {
        var value, name, index, easing, hooks;
        for (index in props) if (name = jQuery.camelCase(index), easing = specialEasing[name], 
        value = props[index], jQuery.isArray(value) && (easing = value[1], value = props[index] = value[0]), 
        index !== name && (props[name] = value, delete props[index]), hooks = jQuery.cssHooks[name], 
        hooks && "expand" in hooks) {
            value = hooks.expand(value), delete props[name];
            for (index in value) index in props || (props[index] = value[index], specialEasing[index] = easing);
        } else specialEasing[name] = easing;
    }
    function defaultPrefilter(elem, props, opts) {
        var prop, index, length, value, dataShow, toggle, tween, hooks, oldfire, anim = this, style = elem.style, orig = {}, handled = [], hidden = elem.nodeType && isHidden(elem);
        opts.queue || (hooks = jQuery._queueHooks(elem, "fx"), null == hooks.unqueued && (hooks.unqueued = 0, 
        oldfire = hooks.empty.fire, hooks.empty.fire = function() {
            hooks.unqueued || oldfire();
        }), hooks.unqueued++, anim.always(function() {
            anim.always(function() {
                hooks.unqueued--, jQuery.queue(elem, "fx").length || hooks.empty.fire();
            });
        })), 1 === elem.nodeType && ("height" in props || "width" in props) && (opts.overflow = [ style.overflow, style.overflowX, style.overflowY ], 
        "inline" === jQuery.css(elem, "display") && "none" === jQuery.css(elem, "float") && (jQuery.support.inlineBlockNeedsLayout && "inline" !== css_defaultDisplay(elem.nodeName) ? style.zoom = 1 : style.display = "inline-block")), 
        opts.overflow && (style.overflow = "hidden", jQuery.support.shrinkWrapBlocks || anim.always(function() {
            style.overflow = opts.overflow[0], style.overflowX = opts.overflow[1], style.overflowY = opts.overflow[2];
        }));
        for (index in props) if (value = props[index], rfxtypes.exec(value)) {
            if (delete props[index], toggle = toggle || "toggle" === value, value === (hidden ? "hide" : "show")) continue;
            handled.push(index);
        }
        if (length = handled.length) {
            dataShow = jQuery._data(elem, "fxshow") || jQuery._data(elem, "fxshow", {}), "hidden" in dataShow && (hidden = dataShow.hidden), 
            toggle && (dataShow.hidden = !hidden), hidden ? jQuery(elem).show() : anim.done(function() {
                jQuery(elem).hide();
            }), anim.done(function() {
                var prop;
                jQuery._removeData(elem, "fxshow");
                for (prop in orig) jQuery.style(elem, prop, orig[prop]);
            });
            for (index = 0; length > index; index++) prop = handled[index], tween = anim.createTween(prop, hidden ? dataShow[prop] : 0), 
            orig[prop] = dataShow[prop] || jQuery.style(elem, prop), prop in dataShow || (dataShow[prop] = tween.start, 
            hidden && (tween.end = tween.start, tween.start = "width" === prop || "height" === prop ? 1 : 0));
        }
    }
    function Tween(elem, options, prop, end, easing) {
        return new Tween.prototype.init(elem, options, prop, end, easing);
    }
    function genFx(type, includeWidth) {
        var which, attrs = {
            height: type
        }, i = 0;
        for (includeWidth = includeWidth ? 1 : 0; 4 > i; i += 2 - includeWidth) which = cssExpand[i], 
        attrs["margin" + which] = attrs["padding" + which] = type;
        return includeWidth && (attrs.opacity = attrs.width = type), attrs;
    }
    function getWindow(elem) {
        return jQuery.isWindow(elem) ? elem : 9 === elem.nodeType ? elem.defaultView || elem.parentWindow : !1;
    }
    var readyList, rootjQuery, core_strundefined = typeof undefined, document = window.document, location = window.location, _jQuery = window.jQuery, _$ = window.$, class2type = {}, core_deletedIds = [], core_version = "1.9.1", core_concat = core_deletedIds.concat, core_push = core_deletedIds.push, core_slice = core_deletedIds.slice, core_indexOf = core_deletedIds.indexOf, core_toString = class2type.toString, core_hasOwn = class2type.hasOwnProperty, core_trim = core_version.trim, jQuery = function(selector, context) {
        return new jQuery.fn.init(selector, context, rootjQuery);
    }, core_pnum = /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source, core_rnotwhite = /\S+/g, rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, rquickExpr = /^(?:(<[\w\W]+>)[^>]*|#([\w-]*))$/, rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>|)$/, rvalidchars = /^[\],:{}\s]*$/, rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g, rvalidescape = /\\(?:["\\\/bfnrt]|u[\da-fA-F]{4})/g, rvalidtokens = /"[^"\\\r\n]*"|true|false|null|-?(?:\d+\.|)\d+(?:[eE][+-]?\d+|)/g, rmsPrefix = /^-ms-/, rdashAlpha = /-([\da-z])/gi, fcamelCase = function(all, letter) {
        return letter.toUpperCase();
    }, completed = function(event) {
        (document.addEventListener || "load" === event.type || "complete" === document.readyState) && (detach(), 
        jQuery.ready());
    }, detach = function() {
        document.addEventListener ? (document.removeEventListener("DOMContentLoaded", completed, !1), 
        window.removeEventListener("load", completed, !1)) : (document.detachEvent("onreadystatechange", completed), 
        window.detachEvent("onload", completed));
    };
    jQuery.fn = jQuery.prototype = {
        jquery: core_version,
        constructor: jQuery,
        init: function(selector, context, rootjQuery) {
            var match, elem;
            if (!selector) return this;
            if ("string" == typeof selector) {
                if (match = "<" === selector.charAt(0) && ">" === selector.charAt(selector.length - 1) && selector.length >= 3 ? [ null, selector, null ] : rquickExpr.exec(selector), 
                !match || !match[1] && context) return !context || context.jquery ? (context || rootjQuery).find(selector) : this.constructor(context).find(selector);
                if (match[1]) {
                    if (context = context instanceof jQuery ? context[0] : context, jQuery.merge(this, jQuery.parseHTML(match[1], context && context.nodeType ? context.ownerDocument || context : document, !0)), 
                    rsingleTag.test(match[1]) && jQuery.isPlainObject(context)) for (match in context) jQuery.isFunction(this[match]) ? this[match](context[match]) : this.attr(match, context[match]);
                    return this;
                }
                if (elem = document.getElementById(match[2]), elem && elem.parentNode) {
                    if (elem.id !== match[2]) return rootjQuery.find(selector);
                    this.length = 1, this[0] = elem;
                }
                return this.context = document, this.selector = selector, this;
            }
            return selector.nodeType ? (this.context = this[0] = selector, this.length = 1, 
            this) : jQuery.isFunction(selector) ? rootjQuery.ready(selector) : (selector.selector !== undefined && (this.selector = selector.selector, 
            this.context = selector.context), jQuery.makeArray(selector, this));
        },
        selector: "",
        length: 0,
        size: function() {
            return this.length;
        },
        toArray: function() {
            return core_slice.call(this);
        },
        get: function(num) {
            return null == num ? this.toArray() : 0 > num ? this[this.length + num] : this[num];
        },
        pushStack: function(elems) {
            var ret = jQuery.merge(this.constructor(), elems);
            return ret.prevObject = this, ret.context = this.context, ret;
        },
        each: function(callback, args) {
            return jQuery.each(this, callback, args);
        },
        ready: function(fn) {
            return jQuery.ready.promise().done(fn), this;
        },
        slice: function() {
            return this.pushStack(core_slice.apply(this, arguments));
        },
        first: function() {
            return this.eq(0);
        },
        last: function() {
            return this.eq(-1);
        },
        eq: function(i) {
            var len = this.length, j = +i + (0 > i ? len : 0);
            return this.pushStack(j >= 0 && len > j ? [ this[j] ] : []);
        },
        map: function(callback) {
            return this.pushStack(jQuery.map(this, function(elem, i) {
                return callback.call(elem, i, elem);
            }));
        },
        end: function() {
            return this.prevObject || this.constructor(null);
        },
        push: core_push,
        sort: [].sort,
        splice: [].splice
    }, jQuery.fn.init.prototype = jQuery.fn, jQuery.extend = jQuery.fn.extend = function() {
        var src, copyIsArray, copy, name, options, clone, target = arguments[0] || {}, i = 1, length = arguments.length, deep = !1;
        for ("boolean" == typeof target && (deep = target, target = arguments[1] || {}, 
        i = 2), "object" == typeof target || jQuery.isFunction(target) || (target = {}), 
        length === i && (target = this, --i); length > i; i++) if (null != (options = arguments[i])) for (name in options) src = target[name], 
        copy = options[name], target !== copy && (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy))) ? (copyIsArray ? (copyIsArray = !1, 
        clone = src && jQuery.isArray(src) ? src : []) : clone = src && jQuery.isPlainObject(src) ? src : {}, 
        target[name] = jQuery.extend(deep, clone, copy)) : copy !== undefined && (target[name] = copy));
        return target;
    }, jQuery.extend({
        noConflict: function(deep) {
            return window.$ === jQuery && (window.$ = _$), deep && window.jQuery === jQuery && (window.jQuery = _jQuery), 
            jQuery;
        },
        isReady: !1,
        readyWait: 1,
        holdReady: function(hold) {
            hold ? jQuery.readyWait++ : jQuery.ready(!0);
        },
        ready: function(wait) {
            if (wait === !0 ? !--jQuery.readyWait : !jQuery.isReady) {
                if (!document.body) return setTimeout(jQuery.ready);
                jQuery.isReady = !0, wait !== !0 && --jQuery.readyWait > 0 || (readyList.resolveWith(document, [ jQuery ]), 
                jQuery.fn.trigger && jQuery(document).trigger("ready").off("ready"));
            }
        },
        isFunction: function(obj) {
            return "function" === jQuery.type(obj);
        },
        isArray: Array.isArray || function(obj) {
            return "array" === jQuery.type(obj);
        },
        isWindow: function(obj) {
            return null != obj && obj == obj.window;
        },
        isNumeric: function(obj) {
            return !isNaN(parseFloat(obj)) && isFinite(obj);
        },
        type: function(obj) {
            return null == obj ? String(obj) : "object" == typeof obj || "function" == typeof obj ? class2type[core_toString.call(obj)] || "object" : typeof obj;
        },
        isPlainObject: function(obj) {
            if (!obj || "object" !== jQuery.type(obj) || obj.nodeType || jQuery.isWindow(obj)) return !1;
            try {
                if (obj.constructor && !core_hasOwn.call(obj, "constructor") && !core_hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) return !1;
            } catch (e) {
                return !1;
            }
            var key;
            for (key in obj) ;
            return key === undefined || core_hasOwn.call(obj, key);
        },
        isEmptyObject: function(obj) {
            var name;
            for (name in obj) return !1;
            return !0;
        },
        error: function(msg) {
            throw new Error(msg);
        },
        parseHTML: function(data, context, keepScripts) {
            if (!data || "string" != typeof data) return null;
            "boolean" == typeof context && (keepScripts = context, context = !1), context = context || document;
            var parsed = rsingleTag.exec(data), scripts = !keepScripts && [];
            return parsed ? [ context.createElement(parsed[1]) ] : (parsed = jQuery.buildFragment([ data ], context, scripts), 
            scripts && jQuery(scripts).remove(), jQuery.merge([], parsed.childNodes));
        },
        parseJSON: function(data) {
            return window.JSON && window.JSON.parse ? window.JSON.parse(data) : null === data ? data : "string" == typeof data && (data = jQuery.trim(data), 
            data && rvalidchars.test(data.replace(rvalidescape, "@").replace(rvalidtokens, "]").replace(rvalidbraces, ""))) ? new Function("return " + data)() : void jQuery.error("Invalid JSON: " + data);
        },
        parseXML: function(data) {
            var xml, tmp;
            if (!data || "string" != typeof data) return null;
            try {
                window.DOMParser ? (tmp = new DOMParser(), xml = tmp.parseFromString(data, "text/xml")) : (xml = new ActiveXObject("Microsoft.XMLDOM"), 
                xml.async = "false", xml.loadXML(data));
            } catch (e) {
                xml = undefined;
            }
            return xml && xml.documentElement && !xml.getElementsByTagName("parsererror").length || jQuery.error("Invalid XML: " + data), 
            xml;
        },
        noop: function() {},
        globalEval: function(data) {
            data && jQuery.trim(data) && (window.execScript || function(data) {
                window.eval.call(window, data);
            })(data);
        },
        camelCase: function(string) {
            return string.replace(rmsPrefix, "ms-").replace(rdashAlpha, fcamelCase);
        },
        nodeName: function(elem, name) {
            return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();
        },
        each: function(obj, callback, args) {
            var value, i = 0, length = obj.length, isArray = isArraylike(obj);
            if (args) {
                if (isArray) for (;length > i && (value = callback.apply(obj[i], args), value !== !1); i++) ; else for (i in obj) if (value = callback.apply(obj[i], args), 
                value === !1) break;
            } else if (isArray) for (;length > i && (value = callback.call(obj[i], i, obj[i]), 
            value !== !1); i++) ; else for (i in obj) if (value = callback.call(obj[i], i, obj[i]), 
            value === !1) break;
            return obj;
        },
        trim: core_trim && !core_trim.call("﻿ ") ? function(text) {
            return null == text ? "" : core_trim.call(text);
        } : function(text) {
            return null == text ? "" : (text + "").replace(rtrim, "");
        },
        makeArray: function(arr, results) {
            var ret = results || [];
            return null != arr && (isArraylike(Object(arr)) ? jQuery.merge(ret, "string" == typeof arr ? [ arr ] : arr) : core_push.call(ret, arr)), 
            ret;
        },
        inArray: function(elem, arr, i) {
            var len;
            if (arr) {
                if (core_indexOf) return core_indexOf.call(arr, elem, i);
                for (len = arr.length, i = i ? 0 > i ? Math.max(0, len + i) : i : 0; len > i; i++) if (i in arr && arr[i] === elem) return i;
            }
            return -1;
        },
        merge: function(first, second) {
            var l = second.length, i = first.length, j = 0;
            if ("number" == typeof l) for (;l > j; j++) first[i++] = second[j]; else for (;second[j] !== undefined; ) first[i++] = second[j++];
            return first.length = i, first;
        },
        grep: function(elems, callback, inv) {
            var retVal, ret = [], i = 0, length = elems.length;
            for (inv = !!inv; length > i; i++) retVal = !!callback(elems[i], i), inv !== retVal && ret.push(elems[i]);
            return ret;
        },
        map: function(elems, callback, arg) {
            var value, i = 0, length = elems.length, isArray = isArraylike(elems), ret = [];
            if (isArray) for (;length > i; i++) value = callback(elems[i], i, arg), null != value && (ret[ret.length] = value); else for (i in elems) value = callback(elems[i], i, arg), 
            null != value && (ret[ret.length] = value);
            return core_concat.apply([], ret);
        },
        guid: 1,
        proxy: function(fn, context) {
            var args, proxy, tmp;
            return "string" == typeof context && (tmp = fn[context], context = fn, fn = tmp), 
            jQuery.isFunction(fn) ? (args = core_slice.call(arguments, 2), proxy = function() {
                return fn.apply(context || this, args.concat(core_slice.call(arguments)));
            }, proxy.guid = fn.guid = fn.guid || jQuery.guid++, proxy) : undefined;
        },
        access: function(elems, fn, key, value, chainable, emptyGet, raw) {
            var i = 0, length = elems.length, bulk = null == key;
            if ("object" === jQuery.type(key)) {
                chainable = !0;
                for (i in key) jQuery.access(elems, fn, i, key[i], !0, emptyGet, raw);
            } else if (value !== undefined && (chainable = !0, jQuery.isFunction(value) || (raw = !0), 
            bulk && (raw ? (fn.call(elems, value), fn = null) : (bulk = fn, fn = function(elem, key, value) {
                return bulk.call(jQuery(elem), value);
            })), fn)) for (;length > i; i++) fn(elems[i], key, raw ? value : value.call(elems[i], i, fn(elems[i], key)));
            return chainable ? elems : bulk ? fn.call(elems) : length ? fn(elems[0], key) : emptyGet;
        },
        now: function() {
            return new Date().getTime();
        }
    }), jQuery.ready.promise = function(obj) {
        if (!readyList) if (readyList = jQuery.Deferred(), "complete" === document.readyState) setTimeout(jQuery.ready); else if (document.addEventListener) document.addEventListener("DOMContentLoaded", completed, !1), 
        window.addEventListener("load", completed, !1); else {
            document.attachEvent("onreadystatechange", completed), window.attachEvent("onload", completed);
            var top = !1;
            try {
                top = null == window.frameElement && document.documentElement;
            } catch (e) {}
            top && top.doScroll && !function doScrollCheck() {
                if (!jQuery.isReady) {
                    try {
                        top.doScroll("left");
                    } catch (e) {
                        return setTimeout(doScrollCheck, 50);
                    }
                    detach(), jQuery.ready();
                }
            }();
        }
        return readyList.promise(obj);
    }, jQuery.each("Boolean Number String Function Array Date RegExp Object Error".split(" "), function(i, name) {
        class2type["[object " + name + "]"] = name.toLowerCase();
    }), rootjQuery = jQuery(document);
    var optionsCache = {};
    jQuery.Callbacks = function(options) {
        options = "string" == typeof options ? optionsCache[options] || createOptions(options) : jQuery.extend({}, options);
        var firing, memory, fired, firingLength, firingIndex, firingStart, list = [], stack = !options.once && [], fire = function(data) {
            for (memory = options.memory && data, fired = !0, firingIndex = firingStart || 0, 
            firingStart = 0, firingLength = list.length, firing = !0; list && firingLength > firingIndex; firingIndex++) if (list[firingIndex].apply(data[0], data[1]) === !1 && options.stopOnFalse) {
                memory = !1;
                break;
            }
            firing = !1, list && (stack ? stack.length && fire(stack.shift()) : memory ? list = [] : self.disable());
        }, self = {
            add: function() {
                if (list) {
                    var start = list.length;
                    !function add(args) {
                        jQuery.each(args, function(_, arg) {
                            var type = jQuery.type(arg);
                            "function" === type ? options.unique && self.has(arg) || list.push(arg) : arg && arg.length && "string" !== type && add(arg);
                        });
                    }(arguments), firing ? firingLength = list.length : memory && (firingStart = start, 
                    fire(memory));
                }
                return this;
            },
            remove: function() {
                return list && jQuery.each(arguments, function(_, arg) {
                    for (var index; (index = jQuery.inArray(arg, list, index)) > -1; ) list.splice(index, 1), 
                    firing && (firingLength >= index && firingLength--, firingIndex >= index && firingIndex--);
                }), this;
            },
            has: function(fn) {
                return fn ? jQuery.inArray(fn, list) > -1 : !(!list || !list.length);
            },
            empty: function() {
                return list = [], this;
            },
            disable: function() {
                return list = stack = memory = undefined, this;
            },
            disabled: function() {
                return !list;
            },
            lock: function() {
                return stack = undefined, memory || self.disable(), this;
            },
            locked: function() {
                return !stack;
            },
            fireWith: function(context, args) {
                return args = args || [], args = [ context, args.slice ? args.slice() : args ], 
                !list || fired && !stack || (firing ? stack.push(args) : fire(args)), this;
            },
            fire: function() {
                return self.fireWith(this, arguments), this;
            },
            fired: function() {
                return !!fired;
            }
        };
        return self;
    }, jQuery.extend({
        Deferred: function(func) {
            var tuples = [ [ "resolve", "done", jQuery.Callbacks("once memory"), "resolved" ], [ "reject", "fail", jQuery.Callbacks("once memory"), "rejected" ], [ "notify", "progress", jQuery.Callbacks("memory") ] ], state = "pending", promise = {
                state: function() {
                    return state;
                },
                always: function() {
                    return deferred.done(arguments).fail(arguments), this;
                },
                then: function() {
                    var fns = arguments;
                    return jQuery.Deferred(function(newDefer) {
                        jQuery.each(tuples, function(i, tuple) {
                            var action = tuple[0], fn = jQuery.isFunction(fns[i]) && fns[i];
                            deferred[tuple[1]](function() {
                                var returned = fn && fn.apply(this, arguments);
                                returned && jQuery.isFunction(returned.promise) ? returned.promise().done(newDefer.resolve).fail(newDefer.reject).progress(newDefer.notify) : newDefer[action + "With"](this === promise ? newDefer.promise() : this, fn ? [ returned ] : arguments);
                            });
                        }), fns = null;
                    }).promise();
                },
                promise: function(obj) {
                    return null != obj ? jQuery.extend(obj, promise) : promise;
                }
            }, deferred = {};
            return promise.pipe = promise.then, jQuery.each(tuples, function(i, tuple) {
                var list = tuple[2], stateString = tuple[3];
                promise[tuple[1]] = list.add, stateString && list.add(function() {
                    state = stateString;
                }, tuples[1 ^ i][2].disable, tuples[2][2].lock), deferred[tuple[0]] = function() {
                    return deferred[tuple[0] + "With"](this === deferred ? promise : this, arguments), 
                    this;
                }, deferred[tuple[0] + "With"] = list.fireWith;
            }), promise.promise(deferred), func && func.call(deferred, deferred), deferred;
        },
        when: function(subordinate) {
            var progressValues, progressContexts, resolveContexts, i = 0, resolveValues = core_slice.call(arguments), length = resolveValues.length, remaining = 1 !== length || subordinate && jQuery.isFunction(subordinate.promise) ? length : 0, deferred = 1 === remaining ? subordinate : jQuery.Deferred(), updateFunc = function(i, contexts, values) {
                return function(value) {
                    contexts[i] = this, values[i] = arguments.length > 1 ? core_slice.call(arguments) : value, 
                    values === progressValues ? deferred.notifyWith(contexts, values) : --remaining || deferred.resolveWith(contexts, values);
                };
            };
            if (length > 1) for (progressValues = new Array(length), progressContexts = new Array(length), 
            resolveContexts = new Array(length); length > i; i++) resolveValues[i] && jQuery.isFunction(resolveValues[i].promise) ? resolveValues[i].promise().done(updateFunc(i, resolveContexts, resolveValues)).fail(deferred.reject).progress(updateFunc(i, progressContexts, progressValues)) : --remaining;
            return remaining || deferred.resolveWith(resolveContexts, resolveValues), deferred.promise();
        }
    }), jQuery.support = function() {
        var support, all, a, input, select, fragment, opt, eventName, isSupported, i, div = document.createElement("div");
        if (div.setAttribute("className", "t"), div.innerHTML = "  <link/><table></table><a href='/a'>a</a><input type='checkbox'/>", 
        all = div.getElementsByTagName("*"), a = div.getElementsByTagName("a")[0], !all || !a || !all.length) return {};
        select = document.createElement("select"), opt = select.appendChild(document.createElement("option")), 
        input = div.getElementsByTagName("input")[0], a.style.cssText = "top:1px;float:left;opacity:.5", 
        support = {
            getSetAttribute: "t" !== div.className,
            leadingWhitespace: 3 === div.firstChild.nodeType,
            tbody: !div.getElementsByTagName("tbody").length,
            htmlSerialize: !!div.getElementsByTagName("link").length,
            style: /top/.test(a.getAttribute("style")),
            hrefNormalized: "/a" === a.getAttribute("href"),
            opacity: /^0.5/.test(a.style.opacity),
            cssFloat: !!a.style.cssFloat,
            checkOn: !!input.value,
            optSelected: opt.selected,
            enctype: !!document.createElement("form").enctype,
            html5Clone: "<:nav></:nav>" !== document.createElement("nav").cloneNode(!0).outerHTML,
            boxModel: "CSS1Compat" === document.compatMode,
            deleteExpando: !0,
            noCloneEvent: !0,
            inlineBlockNeedsLayout: !1,
            shrinkWrapBlocks: !1,
            reliableMarginRight: !0,
            boxSizingReliable: !0,
            pixelPosition: !1
        }, input.checked = !0, support.noCloneChecked = input.cloneNode(!0).checked, select.disabled = !0, 
        support.optDisabled = !opt.disabled;
        try {
            delete div.test;
        } catch (e) {
            support.deleteExpando = !1;
        }
        input = document.createElement("input"), input.setAttribute("value", ""), support.input = "" === input.getAttribute("value"), 
        input.value = "t", input.setAttribute("type", "radio"), support.radioValue = "t" === input.value, 
        input.setAttribute("checked", "t"), input.setAttribute("name", "t"), fragment = document.createDocumentFragment(), 
        fragment.appendChild(input), support.appendChecked = input.checked, support.checkClone = fragment.cloneNode(!0).cloneNode(!0).lastChild.checked, 
        div.attachEvent && (div.attachEvent("onclick", function() {
            support.noCloneEvent = !1;
        }), div.cloneNode(!0).click());
        for (i in {
            submit: !0,
            change: !0,
            focusin: !0
        }) div.setAttribute(eventName = "on" + i, "t"), support[i + "Bubbles"] = eventName in window || div.attributes[eventName].expando === !1;
        return div.style.backgroundClip = "content-box", div.cloneNode(!0).style.backgroundClip = "", 
        support.clearCloneStyle = "content-box" === div.style.backgroundClip, jQuery(function() {
            var container, marginDiv, tds, divReset = "padding:0;margin:0;border:0;display:block;box-sizing:content-box;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;", body = document.getElementsByTagName("body")[0];
            body && (container = document.createElement("div"), container.style.cssText = "border:0;width:0;height:0;position:absolute;top:0;left:-9999px;margin-top:1px", 
            body.appendChild(container).appendChild(div), div.innerHTML = "<table><tr><td></td><td>t</td></tr></table>", 
            tds = div.getElementsByTagName("td"), tds[0].style.cssText = "padding:0;margin:0;border:0;display:none", 
            isSupported = 0 === tds[0].offsetHeight, tds[0].style.display = "", tds[1].style.display = "none", 
            support.reliableHiddenOffsets = isSupported && 0 === tds[0].offsetHeight, div.innerHTML = "", 
            div.style.cssText = "box-sizing:border-box;-moz-box-sizing:border-box;-webkit-box-sizing:border-box;padding:1px;border:1px;display:block;width:4px;margin-top:1%;position:absolute;top:1%;", 
            support.boxSizing = 4 === div.offsetWidth, support.doesNotIncludeMarginInBodyOffset = 1 !== body.offsetTop, 
            window.getComputedStyle && (support.pixelPosition = "1%" !== (window.getComputedStyle(div, null) || {}).top, 
            support.boxSizingReliable = "4px" === (window.getComputedStyle(div, null) || {
                width: "4px"
            }).width, marginDiv = div.appendChild(document.createElement("div")), marginDiv.style.cssText = div.style.cssText = divReset, 
            marginDiv.style.marginRight = marginDiv.style.width = "0", div.style.width = "1px", 
            support.reliableMarginRight = !parseFloat((window.getComputedStyle(marginDiv, null) || {}).marginRight)), 
            typeof div.style.zoom !== core_strundefined && (div.innerHTML = "", div.style.cssText = divReset + "width:1px;padding:1px;display:inline;zoom:1", 
            support.inlineBlockNeedsLayout = 3 === div.offsetWidth, div.style.display = "block", 
            div.innerHTML = "<div></div>", div.firstChild.style.width = "5px", support.shrinkWrapBlocks = 3 !== div.offsetWidth, 
            support.inlineBlockNeedsLayout && (body.style.zoom = 1)), body.removeChild(container), 
            container = div = tds = marginDiv = null);
        }), all = select = fragment = opt = a = input = null, support;
    }();
    var rbrace = /(?:\{[\s\S]*\}|\[[\s\S]*\])$/, rmultiDash = /([A-Z])/g;
    jQuery.extend({
        cache: {},
        expando: "jQuery" + (core_version + Math.random()).replace(/\D/g, ""),
        noData: {
            embed: !0,
            object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            applet: !0
        },
        hasData: function(elem) {
            return elem = elem.nodeType ? jQuery.cache[elem[jQuery.expando]] : elem[jQuery.expando], 
            !!elem && !isEmptyDataObject(elem);
        },
        data: function(elem, name, data) {
            return internalData(elem, name, data);
        },
        removeData: function(elem, name) {
            return internalRemoveData(elem, name);
        },
        _data: function(elem, name, data) {
            return internalData(elem, name, data, !0);
        },
        _removeData: function(elem, name) {
            return internalRemoveData(elem, name, !0);
        },
        acceptData: function(elem) {
            if (elem.nodeType && 1 !== elem.nodeType && 9 !== elem.nodeType) return !1;
            var noData = elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()];
            return !noData || noData !== !0 && elem.getAttribute("classid") === noData;
        }
    }), jQuery.fn.extend({
        data: function(key, value) {
            var attrs, name, elem = this[0], i = 0, data = null;
            if (key === undefined) {
                if (this.length && (data = jQuery.data(elem), 1 === elem.nodeType && !jQuery._data(elem, "parsedAttrs"))) {
                    for (attrs = elem.attributes; i < attrs.length; i++) name = attrs[i].name, name.indexOf("data-") || (name = jQuery.camelCase(name.slice(5)), 
                    dataAttr(elem, name, data[name]));
                    jQuery._data(elem, "parsedAttrs", !0);
                }
                return data;
            }
            return "object" == typeof key ? this.each(function() {
                jQuery.data(this, key);
            }) : jQuery.access(this, function(value) {
                return value === undefined ? elem ? dataAttr(elem, key, jQuery.data(elem, key)) : null : void this.each(function() {
                    jQuery.data(this, key, value);
                });
            }, null, value, arguments.length > 1, null, !0);
        },
        removeData: function(key) {
            return this.each(function() {
                jQuery.removeData(this, key);
            });
        }
    }), jQuery.extend({
        queue: function(elem, type, data) {
            var queue;
            return elem ? (type = (type || "fx") + "queue", queue = jQuery._data(elem, type), 
            data && (!queue || jQuery.isArray(data) ? queue = jQuery._data(elem, type, jQuery.makeArray(data)) : queue.push(data)), 
            queue || []) : void 0;
        },
        dequeue: function(elem, type) {
            type = type || "fx";
            var queue = jQuery.queue(elem, type), startLength = queue.length, fn = queue.shift(), hooks = jQuery._queueHooks(elem, type), next = function() {
                jQuery.dequeue(elem, type);
            };
            "inprogress" === fn && (fn = queue.shift(), startLength--), hooks.cur = fn, fn && ("fx" === type && queue.unshift("inprogress"), 
            delete hooks.stop, fn.call(elem, next, hooks)), !startLength && hooks && hooks.empty.fire();
        },
        _queueHooks: function(elem, type) {
            var key = type + "queueHooks";
            return jQuery._data(elem, key) || jQuery._data(elem, key, {
                empty: jQuery.Callbacks("once memory").add(function() {
                    jQuery._removeData(elem, type + "queue"), jQuery._removeData(elem, key);
                })
            });
        }
    }), jQuery.fn.extend({
        queue: function(type, data) {
            var setter = 2;
            return "string" != typeof type && (data = type, type = "fx", setter--), arguments.length < setter ? jQuery.queue(this[0], type) : data === undefined ? this : this.each(function() {
                var queue = jQuery.queue(this, type, data);
                jQuery._queueHooks(this, type), "fx" === type && "inprogress" !== queue[0] && jQuery.dequeue(this, type);
            });
        },
        dequeue: function(type) {
            return this.each(function() {
                jQuery.dequeue(this, type);
            });
        },
        delay: function(time, type) {
            return time = jQuery.fx ? jQuery.fx.speeds[time] || time : time, type = type || "fx", 
            this.queue(type, function(next, hooks) {
                var timeout = setTimeout(next, time);
                hooks.stop = function() {
                    clearTimeout(timeout);
                };
            });
        },
        clearQueue: function(type) {
            return this.queue(type || "fx", []);
        },
        promise: function(type, obj) {
            var tmp, count = 1, defer = jQuery.Deferred(), elements = this, i = this.length, resolve = function() {
                --count || defer.resolveWith(elements, [ elements ]);
            };
            for ("string" != typeof type && (obj = type, type = undefined), type = type || "fx"; i--; ) tmp = jQuery._data(elements[i], type + "queueHooks"), 
            tmp && tmp.empty && (count++, tmp.empty.add(resolve));
            return resolve(), defer.promise(obj);
        }
    });
    var nodeHook, boolHook, rclass = /[\t\r\n]/g, rreturn = /\r/g, rfocusable = /^(?:input|select|textarea|button|object)$/i, rclickable = /^(?:a|area)$/i, rboolean = /^(?:checked|selected|autofocus|autoplay|async|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped)$/i, ruseDefault = /^(?:checked|selected)$/i, getSetAttribute = jQuery.support.getSetAttribute, getSetInput = jQuery.support.input;
    jQuery.fn.extend({
        attr: function(name, value) {
            return jQuery.access(this, jQuery.attr, name, value, arguments.length > 1);
        },
        removeAttr: function(name) {
            return this.each(function() {
                jQuery.removeAttr(this, name);
            });
        },
        prop: function(name, value) {
            return jQuery.access(this, jQuery.prop, name, value, arguments.length > 1);
        },
        removeProp: function(name) {
            return name = jQuery.propFix[name] || name, this.each(function() {
                try {
                    this[name] = undefined, delete this[name];
                } catch (e) {}
            });
        },
        addClass: function(value) {
            var classes, elem, cur, clazz, j, i = 0, len = this.length, proceed = "string" == typeof value && value;
            if (jQuery.isFunction(value)) return this.each(function(j) {
                jQuery(this).addClass(value.call(this, j, this.className));
            });
            if (proceed) for (classes = (value || "").match(core_rnotwhite) || []; len > i; i++) if (elem = this[i], 
            cur = 1 === elem.nodeType && (elem.className ? (" " + elem.className + " ").replace(rclass, " ") : " ")) {
                for (j = 0; clazz = classes[j++]; ) cur.indexOf(" " + clazz + " ") < 0 && (cur += clazz + " ");
                elem.className = jQuery.trim(cur);
            }
            return this;
        },
        removeClass: function(value) {
            var classes, elem, cur, clazz, j, i = 0, len = this.length, proceed = 0 === arguments.length || "string" == typeof value && value;
            if (jQuery.isFunction(value)) return this.each(function(j) {
                jQuery(this).removeClass(value.call(this, j, this.className));
            });
            if (proceed) for (classes = (value || "").match(core_rnotwhite) || []; len > i; i++) if (elem = this[i], 
            cur = 1 === elem.nodeType && (elem.className ? (" " + elem.className + " ").replace(rclass, " ") : "")) {
                for (j = 0; clazz = classes[j++]; ) for (;cur.indexOf(" " + clazz + " ") >= 0; ) cur = cur.replace(" " + clazz + " ", " ");
                elem.className = value ? jQuery.trim(cur) : "";
            }
            return this;
        },
        toggleClass: function(value, stateVal) {
            var type = typeof value, isBool = "boolean" == typeof stateVal;
            return this.each(jQuery.isFunction(value) ? function(i) {
                jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal);
            } : function() {
                if ("string" === type) for (var className, i = 0, self = jQuery(this), state = stateVal, classNames = value.match(core_rnotwhite) || []; className = classNames[i++]; ) state = isBool ? state : !self.hasClass(className), 
                self[state ? "addClass" : "removeClass"](className); else (type === core_strundefined || "boolean" === type) && (this.className && jQuery._data(this, "__className__", this.className), 
                this.className = this.className || value === !1 ? "" : jQuery._data(this, "__className__") || "");
            });
        },
        hasClass: function(selector) {
            for (var className = " " + selector + " ", i = 0, l = this.length; l > i; i++) if (1 === this[i].nodeType && (" " + this[i].className + " ").replace(rclass, " ").indexOf(className) >= 0) return !0;
            return !1;
        },
        val: function(value) {
            var ret, hooks, isFunction, elem = this[0];
            {
                if (arguments.length) return isFunction = jQuery.isFunction(value), this.each(function(i) {
                    var val, self = jQuery(this);
                    1 === this.nodeType && (val = isFunction ? value.call(this, i, self.val()) : value, 
                    null == val ? val = "" : "number" == typeof val ? val += "" : jQuery.isArray(val) && (val = jQuery.map(val, function(value) {
                        return null == value ? "" : value + "";
                    })), hooks = jQuery.valHooks[this.type] || jQuery.valHooks[this.nodeName.toLowerCase()], 
                    hooks && "set" in hooks && hooks.set(this, val, "value") !== undefined || (this.value = val));
                });
                if (elem) return hooks = jQuery.valHooks[elem.type] || jQuery.valHooks[elem.nodeName.toLowerCase()], 
                hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined ? ret : (ret = elem.value, 
                "string" == typeof ret ? ret.replace(rreturn, "") : null == ret ? "" : ret);
            }
        }
    }), jQuery.extend({
        valHooks: {
            option: {
                get: function(elem) {
                    var val = elem.attributes.value;
                    return !val || val.specified ? elem.value : elem.text;
                }
            },
            select: {
                get: function(elem) {
                    for (var value, option, options = elem.options, index = elem.selectedIndex, one = "select-one" === elem.type || 0 > index, values = one ? null : [], max = one ? index + 1 : options.length, i = 0 > index ? max : one ? index : 0; max > i; i++) if (option = options[i], 
                    !(!option.selected && i !== index || (jQuery.support.optDisabled ? option.disabled : null !== option.getAttribute("disabled")) || option.parentNode.disabled && jQuery.nodeName(option.parentNode, "optgroup"))) {
                        if (value = jQuery(option).val(), one) return value;
                        values.push(value);
                    }
                    return values;
                },
                set: function(elem, value) {
                    var values = jQuery.makeArray(value);
                    return jQuery(elem).find("option").each(function() {
                        this.selected = jQuery.inArray(jQuery(this).val(), values) >= 0;
                    }), values.length || (elem.selectedIndex = -1), values;
                }
            }
        },
        attr: function(elem, name, value) {
            var hooks, notxml, ret, nType = elem.nodeType;
            if (elem && 3 !== nType && 8 !== nType && 2 !== nType) return typeof elem.getAttribute === core_strundefined ? jQuery.prop(elem, name, value) : (notxml = 1 !== nType || !jQuery.isXMLDoc(elem), 
            notxml && (name = name.toLowerCase(), hooks = jQuery.attrHooks[name] || (rboolean.test(name) ? boolHook : nodeHook)), 
            value === undefined ? hooks && notxml && "get" in hooks && null !== (ret = hooks.get(elem, name)) ? ret : (typeof elem.getAttribute !== core_strundefined && (ret = elem.getAttribute(name)), 
            null == ret ? undefined : ret) : null !== value ? hooks && notxml && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined ? ret : (elem.setAttribute(name, value + ""), 
            value) : void jQuery.removeAttr(elem, name));
        },
        removeAttr: function(elem, value) {
            var name, propName, i = 0, attrNames = value && value.match(core_rnotwhite);
            if (attrNames && 1 === elem.nodeType) for (;name = attrNames[i++]; ) propName = jQuery.propFix[name] || name, 
            rboolean.test(name) ? !getSetAttribute && ruseDefault.test(name) ? elem[jQuery.camelCase("default-" + name)] = elem[propName] = !1 : elem[propName] = !1 : jQuery.attr(elem, name, ""), 
            elem.removeAttribute(getSetAttribute ? name : propName);
        },
        attrHooks: {
            type: {
                set: function(elem, value) {
                    if (!jQuery.support.radioValue && "radio" === value && jQuery.nodeName(elem, "input")) {
                        var val = elem.value;
                        return elem.setAttribute("type", value), val && (elem.value = val), value;
                    }
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function(elem, name, value) {
            var ret, hooks, notxml, nType = elem.nodeType;
            if (elem && 3 !== nType && 8 !== nType && 2 !== nType) return notxml = 1 !== nType || !jQuery.isXMLDoc(elem), 
            notxml && (name = jQuery.propFix[name] || name, hooks = jQuery.propHooks[name]), 
            value !== undefined ? hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined ? ret : elem[name] = value : hooks && "get" in hooks && null !== (ret = hooks.get(elem, name)) ? ret : elem[name];
        },
        propHooks: {
            tabIndex: {
                get: function(elem) {
                    var attributeNode = elem.getAttributeNode("tabindex");
                    return attributeNode && attributeNode.specified ? parseInt(attributeNode.value, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ? 0 : undefined;
                }
            }
        }
    }), boolHook = {
        get: function(elem, name) {
            var prop = jQuery.prop(elem, name), attr = "boolean" == typeof prop && elem.getAttribute(name), detail = "boolean" == typeof prop ? getSetInput && getSetAttribute ? null != attr : ruseDefault.test(name) ? elem[jQuery.camelCase("default-" + name)] : !!attr : elem.getAttributeNode(name);
            return detail && detail.value !== !1 ? name.toLowerCase() : undefined;
        },
        set: function(elem, value, name) {
            return value === !1 ? jQuery.removeAttr(elem, name) : getSetInput && getSetAttribute || !ruseDefault.test(name) ? elem.setAttribute(!getSetAttribute && jQuery.propFix[name] || name, name) : elem[jQuery.camelCase("default-" + name)] = elem[name] = !0, 
            name;
        }
    }, getSetInput && getSetAttribute || (jQuery.attrHooks.value = {
        get: function(elem, name) {
            var ret = elem.getAttributeNode(name);
            return jQuery.nodeName(elem, "input") ? elem.defaultValue : ret && ret.specified ? ret.value : undefined;
        },
        set: function(elem, value, name) {
            return jQuery.nodeName(elem, "input") ? void (elem.defaultValue = value) : nodeHook && nodeHook.set(elem, value, name);
        }
    }), getSetAttribute || (nodeHook = jQuery.valHooks.button = {
        get: function(elem, name) {
            var ret = elem.getAttributeNode(name);
            return ret && ("id" === name || "name" === name || "coords" === name ? "" !== ret.value : ret.specified) ? ret.value : undefined;
        },
        set: function(elem, value, name) {
            var ret = elem.getAttributeNode(name);
            return ret || elem.setAttributeNode(ret = elem.ownerDocument.createAttribute(name)), 
            ret.value = value += "", "value" === name || value === elem.getAttribute(name) ? value : undefined;
        }
    }, jQuery.attrHooks.contenteditable = {
        get: nodeHook.get,
        set: function(elem, value, name) {
            nodeHook.set(elem, "" === value ? !1 : value, name);
        }
    }, jQuery.each([ "width", "height" ], function(i, name) {
        jQuery.attrHooks[name] = jQuery.extend(jQuery.attrHooks[name], {
            set: function(elem, value) {
                return "" === value ? (elem.setAttribute(name, "auto"), value) : void 0;
            }
        });
    })), jQuery.support.hrefNormalized || (jQuery.each([ "href", "src", "width", "height" ], function(i, name) {
        jQuery.attrHooks[name] = jQuery.extend(jQuery.attrHooks[name], {
            get: function(elem) {
                var ret = elem.getAttribute(name, 2);
                return null == ret ? undefined : ret;
            }
        });
    }), jQuery.each([ "href", "src" ], function(i, name) {
        jQuery.propHooks[name] = {
            get: function(elem) {
                return elem.getAttribute(name, 4);
            }
        };
    })), jQuery.support.style || (jQuery.attrHooks.style = {
        get: function(elem) {
            return elem.style.cssText || undefined;
        },
        set: function(elem, value) {
            return elem.style.cssText = value + "";
        }
    }), jQuery.support.optSelected || (jQuery.propHooks.selected = jQuery.extend(jQuery.propHooks.selected, {
        get: function(elem) {
            var parent = elem.parentNode;
            return parent && (parent.selectedIndex, parent.parentNode && parent.parentNode.selectedIndex), 
            null;
        }
    })), jQuery.support.enctype || (jQuery.propFix.enctype = "encoding"), jQuery.support.checkOn || jQuery.each([ "radio", "checkbox" ], function() {
        jQuery.valHooks[this] = {
            get: function(elem) {
                return null === elem.getAttribute("value") ? "on" : elem.value;
            }
        };
    }), jQuery.each([ "radio", "checkbox" ], function() {
        jQuery.valHooks[this] = jQuery.extend(jQuery.valHooks[this], {
            set: function(elem, value) {
                return jQuery.isArray(value) ? elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0 : void 0;
            }
        });
    });
    var rformElems = /^(?:input|select|textarea)$/i, rkeyEvent = /^key/, rmouseEvent = /^(?:mouse|contextmenu)|click/, rfocusMorph = /^(?:focusinfocus|focusoutblur)$/, rtypenamespace = /^([^.]*)(?:\.(.+)|)$/;
    jQuery.event = {
        global: {},
        add: function(elem, types, handler, data, selector) {
            var tmp, events, t, handleObjIn, special, eventHandle, handleObj, handlers, type, namespaces, origType, elemData = jQuery._data(elem);
            if (elemData) {
                for (handler.handler && (handleObjIn = handler, handler = handleObjIn.handler, selector = handleObjIn.selector), 
                handler.guid || (handler.guid = jQuery.guid++), (events = elemData.events) || (events = elemData.events = {}), 
                (eventHandle = elemData.handle) || (eventHandle = elemData.handle = function(e) {
                    return typeof jQuery === core_strundefined || e && jQuery.event.triggered === e.type ? undefined : jQuery.event.dispatch.apply(eventHandle.elem, arguments);
                }, eventHandle.elem = elem), types = (types || "").match(core_rnotwhite) || [ "" ], 
                t = types.length; t--; ) tmp = rtypenamespace.exec(types[t]) || [], type = origType = tmp[1], 
                namespaces = (tmp[2] || "").split(".").sort(), special = jQuery.event.special[type] || {}, 
                type = (selector ? special.delegateType : special.bindType) || type, special = jQuery.event.special[type] || {}, 
                handleObj = jQuery.extend({
                    type: type,
                    origType: origType,
                    data: data,
                    handler: handler,
                    guid: handler.guid,
                    selector: selector,
                    needsContext: selector && jQuery.expr.match.needsContext.test(selector),
                    namespace: namespaces.join(".")
                }, handleObjIn), (handlers = events[type]) || (handlers = events[type] = [], handlers.delegateCount = 0, 
                special.setup && special.setup.call(elem, data, namespaces, eventHandle) !== !1 || (elem.addEventListener ? elem.addEventListener(type, eventHandle, !1) : elem.attachEvent && elem.attachEvent("on" + type, eventHandle))), 
                special.add && (special.add.call(elem, handleObj), handleObj.handler.guid || (handleObj.handler.guid = handler.guid)), 
                selector ? handlers.splice(handlers.delegateCount++, 0, handleObj) : handlers.push(handleObj), 
                jQuery.event.global[type] = !0;
                elem = null;
            }
        },
        remove: function(elem, types, handler, selector, mappedTypes) {
            var j, handleObj, tmp, origCount, t, events, special, handlers, type, namespaces, origType, elemData = jQuery.hasData(elem) && jQuery._data(elem);
            if (elemData && (events = elemData.events)) {
                for (types = (types || "").match(core_rnotwhite) || [ "" ], t = types.length; t--; ) if (tmp = rtypenamespace.exec(types[t]) || [], 
                type = origType = tmp[1], namespaces = (tmp[2] || "").split(".").sort(), type) {
                    for (special = jQuery.event.special[type] || {}, type = (selector ? special.delegateType : special.bindType) || type, 
                    handlers = events[type] || [], tmp = tmp[2] && new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)"), 
                    origCount = j = handlers.length; j--; ) handleObj = handlers[j], !mappedTypes && origType !== handleObj.origType || handler && handler.guid !== handleObj.guid || tmp && !tmp.test(handleObj.namespace) || selector && selector !== handleObj.selector && ("**" !== selector || !handleObj.selector) || (handlers.splice(j, 1), 
                    handleObj.selector && handlers.delegateCount--, special.remove && special.remove.call(elem, handleObj));
                    origCount && !handlers.length && (special.teardown && special.teardown.call(elem, namespaces, elemData.handle) !== !1 || jQuery.removeEvent(elem, type, elemData.handle), 
                    delete events[type]);
                } else for (type in events) jQuery.event.remove(elem, type + types[t], handler, selector, !0);
                jQuery.isEmptyObject(events) && (delete elemData.handle, jQuery._removeData(elem, "events"));
            }
        },
        trigger: function(event, data, elem, onlyHandlers) {
            var handle, ontype, cur, bubbleType, special, tmp, i, eventPath = [ elem || document ], type = core_hasOwn.call(event, "type") ? event.type : event, namespaces = core_hasOwn.call(event, "namespace") ? event.namespace.split(".") : [];
            if (cur = tmp = elem = elem || document, 3 !== elem.nodeType && 8 !== elem.nodeType && !rfocusMorph.test(type + jQuery.event.triggered) && (type.indexOf(".") >= 0 && (namespaces = type.split("."), 
            type = namespaces.shift(), namespaces.sort()), ontype = type.indexOf(":") < 0 && "on" + type, 
            event = event[jQuery.expando] ? event : new jQuery.Event(type, "object" == typeof event && event), 
            event.isTrigger = !0, event.namespace = namespaces.join("."), event.namespace_re = event.namespace ? new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.|)") + "(\\.|$)") : null, 
            event.result = undefined, event.target || (event.target = elem), data = null == data ? [ event ] : jQuery.makeArray(data, [ event ]), 
            special = jQuery.event.special[type] || {}, onlyHandlers || !special.trigger || special.trigger.apply(elem, data) !== !1)) {
                if (!onlyHandlers && !special.noBubble && !jQuery.isWindow(elem)) {
                    for (bubbleType = special.delegateType || type, rfocusMorph.test(bubbleType + type) || (cur = cur.parentNode); cur; cur = cur.parentNode) eventPath.push(cur), 
                    tmp = cur;
                    tmp === (elem.ownerDocument || document) && eventPath.push(tmp.defaultView || tmp.parentWindow || window);
                }
                for (i = 0; (cur = eventPath[i++]) && !event.isPropagationStopped(); ) event.type = i > 1 ? bubbleType : special.bindType || type, 
                handle = (jQuery._data(cur, "events") || {})[event.type] && jQuery._data(cur, "handle"), 
                handle && handle.apply(cur, data), handle = ontype && cur[ontype], handle && jQuery.acceptData(cur) && handle.apply && handle.apply(cur, data) === !1 && event.preventDefault();
                if (event.type = type, !(onlyHandlers || event.isDefaultPrevented() || special._default && special._default.apply(elem.ownerDocument, data) !== !1 || "click" === type && jQuery.nodeName(elem, "a") || !jQuery.acceptData(elem) || !ontype || !elem[type] || jQuery.isWindow(elem))) {
                    tmp = elem[ontype], tmp && (elem[ontype] = null), jQuery.event.triggered = type;
                    try {
                        elem[type]();
                    } catch (e) {}
                    jQuery.event.triggered = undefined, tmp && (elem[ontype] = tmp);
                }
                return event.result;
            }
        },
        dispatch: function(event) {
            event = jQuery.event.fix(event);
            var i, ret, handleObj, matched, j, handlerQueue = [], args = core_slice.call(arguments), handlers = (jQuery._data(this, "events") || {})[event.type] || [], special = jQuery.event.special[event.type] || {};
            if (args[0] = event, event.delegateTarget = this, !special.preDispatch || special.preDispatch.call(this, event) !== !1) {
                for (handlerQueue = jQuery.event.handlers.call(this, event, handlers), i = 0; (matched = handlerQueue[i++]) && !event.isPropagationStopped(); ) for (event.currentTarget = matched.elem, 
                j = 0; (handleObj = matched.handlers[j++]) && !event.isImmediatePropagationStopped(); ) (!event.namespace_re || event.namespace_re.test(handleObj.namespace)) && (event.handleObj = handleObj, 
                event.data = handleObj.data, ret = ((jQuery.event.special[handleObj.origType] || {}).handle || handleObj.handler).apply(matched.elem, args), 
                ret !== undefined && (event.result = ret) === !1 && (event.preventDefault(), event.stopPropagation()));
                return special.postDispatch && special.postDispatch.call(this, event), event.result;
            }
        },
        handlers: function(event, handlers) {
            var sel, handleObj, matches, i, handlerQueue = [], delegateCount = handlers.delegateCount, cur = event.target;
            if (delegateCount && cur.nodeType && (!event.button || "click" !== event.type)) for (;cur != this; cur = cur.parentNode || this) if (1 === cur.nodeType && (cur.disabled !== !0 || "click" !== event.type)) {
                for (matches = [], i = 0; delegateCount > i; i++) handleObj = handlers[i], sel = handleObj.selector + " ", 
                matches[sel] === undefined && (matches[sel] = handleObj.needsContext ? jQuery(sel, this).index(cur) >= 0 : jQuery.find(sel, this, null, [ cur ]).length), 
                matches[sel] && matches.push(handleObj);
                matches.length && handlerQueue.push({
                    elem: cur,
                    handlers: matches
                });
            }
            return delegateCount < handlers.length && handlerQueue.push({
                elem: this,
                handlers: handlers.slice(delegateCount)
            }), handlerQueue;
        },
        fix: function(event) {
            if (event[jQuery.expando]) return event;
            var i, prop, copy, type = event.type, originalEvent = event, fixHook = this.fixHooks[type];
            for (fixHook || (this.fixHooks[type] = fixHook = rmouseEvent.test(type) ? this.mouseHooks : rkeyEvent.test(type) ? this.keyHooks : {}), 
            copy = fixHook.props ? this.props.concat(fixHook.props) : this.props, event = new jQuery.Event(originalEvent), 
            i = copy.length; i--; ) prop = copy[i], event[prop] = originalEvent[prop];
            return event.target || (event.target = originalEvent.srcElement || document), 3 === event.target.nodeType && (event.target = event.target.parentNode), 
            event.metaKey = !!event.metaKey, fixHook.filter ? fixHook.filter(event, originalEvent) : event;
        },
        props: "altKey bubbles cancelable ctrlKey currentTarget eventPhase metaKey relatedTarget shiftKey target timeStamp view which".split(" "),
        fixHooks: {},
        keyHooks: {
            props: "char charCode key keyCode".split(" "),
            filter: function(event, original) {
                return null == event.which && (event.which = null != original.charCode ? original.charCode : original.keyCode), 
                event;
            }
        },
        mouseHooks: {
            props: "button buttons clientX clientY fromElement offsetX offsetY pageX pageY screenX screenY toElement".split(" "),
            filter: function(event, original) {
                var body, eventDoc, doc, button = original.button, fromElement = original.fromElement;
                return null == event.pageX && null != original.clientX && (eventDoc = event.target.ownerDocument || document, 
                doc = eventDoc.documentElement, body = eventDoc.body, event.pageX = original.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0), 
                event.pageY = original.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)), 
                !event.relatedTarget && fromElement && (event.relatedTarget = fromElement === event.target ? original.toElement : fromElement), 
                event.which || button === undefined || (event.which = 1 & button ? 1 : 2 & button ? 3 : 4 & button ? 2 : 0), 
                event;
            }
        },
        special: {
            load: {
                noBubble: !0
            },
            click: {
                trigger: function() {
                    return jQuery.nodeName(this, "input") && "checkbox" === this.type && this.click ? (this.click(), 
                    !1) : void 0;
                }
            },
            focus: {
                trigger: function() {
                    if (this !== document.activeElement && this.focus) try {
                        return this.focus(), !1;
                    } catch (e) {}
                },
                delegateType: "focusin"
            },
            blur: {
                trigger: function() {
                    return this === document.activeElement && this.blur ? (this.blur(), !1) : void 0;
                },
                delegateType: "focusout"
            },
            beforeunload: {
                postDispatch: function(event) {
                    event.result !== undefined && (event.originalEvent.returnValue = event.result);
                }
            }
        },
        simulate: function(type, elem, event, bubble) {
            var e = jQuery.extend(new jQuery.Event(), event, {
                type: type,
                isSimulated: !0,
                originalEvent: {}
            });
            bubble ? jQuery.event.trigger(e, null, elem) : jQuery.event.dispatch.call(elem, e), 
            e.isDefaultPrevented() && event.preventDefault();
        }
    }, jQuery.removeEvent = document.removeEventListener ? function(elem, type, handle) {
        elem.removeEventListener && elem.removeEventListener(type, handle, !1);
    } : function(elem, type, handle) {
        var name = "on" + type;
        elem.detachEvent && (typeof elem[name] === core_strundefined && (elem[name] = null), 
        elem.detachEvent(name, handle));
    }, jQuery.Event = function(src, props) {
        return this instanceof jQuery.Event ? (src && src.type ? (this.originalEvent = src, 
        this.type = src.type, this.isDefaultPrevented = src.defaultPrevented || src.returnValue === !1 || src.getPreventDefault && src.getPreventDefault() ? returnTrue : returnFalse) : this.type = src, 
        props && jQuery.extend(this, props), this.timeStamp = src && src.timeStamp || jQuery.now(), 
        void (this[jQuery.expando] = !0)) : new jQuery.Event(src, props);
    }, jQuery.Event.prototype = {
        isDefaultPrevented: returnFalse,
        isPropagationStopped: returnFalse,
        isImmediatePropagationStopped: returnFalse,
        preventDefault: function() {
            var e = this.originalEvent;
            this.isDefaultPrevented = returnTrue, e && (e.preventDefault ? e.preventDefault() : e.returnValue = !1);
        },
        stopPropagation: function() {
            var e = this.originalEvent;
            this.isPropagationStopped = returnTrue, e && (e.stopPropagation && e.stopPropagation(), 
            e.cancelBubble = !0);
        },
        stopImmediatePropagation: function() {
            this.isImmediatePropagationStopped = returnTrue, this.stopPropagation();
        }
    }, jQuery.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function(orig, fix) {
        jQuery.event.special[orig] = {
            delegateType: fix,
            bindType: fix,
            handle: function(event) {
                var ret, target = this, related = event.relatedTarget, handleObj = event.handleObj;
                return (!related || related !== target && !jQuery.contains(target, related)) && (event.type = handleObj.origType, 
                ret = handleObj.handler.apply(this, arguments), event.type = fix), ret;
            }
        };
    }), jQuery.support.submitBubbles || (jQuery.event.special.submit = {
        setup: function() {
            return jQuery.nodeName(this, "form") ? !1 : void jQuery.event.add(this, "click._submit keypress._submit", function(e) {
                var elem = e.target, form = jQuery.nodeName(elem, "input") || jQuery.nodeName(elem, "button") ? elem.form : undefined;
                form && !jQuery._data(form, "submitBubbles") && (jQuery.event.add(form, "submit._submit", function(event) {
                    event._submit_bubble = !0;
                }), jQuery._data(form, "submitBubbles", !0));
            });
        },
        postDispatch: function(event) {
            event._submit_bubble && (delete event._submit_bubble, this.parentNode && !event.isTrigger && jQuery.event.simulate("submit", this.parentNode, event, !0));
        },
        teardown: function() {
            return jQuery.nodeName(this, "form") ? !1 : void jQuery.event.remove(this, "._submit");
        }
    }), jQuery.support.changeBubbles || (jQuery.event.special.change = {
        setup: function() {
            return rformElems.test(this.nodeName) ? (("checkbox" === this.type || "radio" === this.type) && (jQuery.event.add(this, "propertychange._change", function(event) {
                "checked" === event.originalEvent.propertyName && (this._just_changed = !0);
            }), jQuery.event.add(this, "click._change", function(event) {
                this._just_changed && !event.isTrigger && (this._just_changed = !1), jQuery.event.simulate("change", this, event, !0);
            })), !1) : void jQuery.event.add(this, "beforeactivate._change", function(e) {
                var elem = e.target;
                rformElems.test(elem.nodeName) && !jQuery._data(elem, "changeBubbles") && (jQuery.event.add(elem, "change._change", function(event) {
                    !this.parentNode || event.isSimulated || event.isTrigger || jQuery.event.simulate("change", this.parentNode, event, !0);
                }), jQuery._data(elem, "changeBubbles", !0));
            });
        },
        handle: function(event) {
            var elem = event.target;
            return this !== elem || event.isSimulated || event.isTrigger || "radio" !== elem.type && "checkbox" !== elem.type ? event.handleObj.handler.apply(this, arguments) : void 0;
        },
        teardown: function() {
            return jQuery.event.remove(this, "._change"), !rformElems.test(this.nodeName);
        }
    }), jQuery.support.focusinBubbles || jQuery.each({
        focus: "focusin",
        blur: "focusout"
    }, function(orig, fix) {
        var attaches = 0, handler = function(event) {
            jQuery.event.simulate(fix, event.target, jQuery.event.fix(event), !0);
        };
        jQuery.event.special[fix] = {
            setup: function() {
                0 === attaches++ && document.addEventListener(orig, handler, !0);
            },
            teardown: function() {
                0 === --attaches && document.removeEventListener(orig, handler, !0);
            }
        };
    }), jQuery.fn.extend({
        on: function(types, selector, data, fn, one) {
            var type, origFn;
            if ("object" == typeof types) {
                "string" != typeof selector && (data = data || selector, selector = undefined);
                for (type in types) this.on(type, selector, data, types[type], one);
                return this;
            }
            if (null == data && null == fn ? (fn = selector, data = selector = undefined) : null == fn && ("string" == typeof selector ? (fn = data, 
            data = undefined) : (fn = data, data = selector, selector = undefined)), fn === !1) fn = returnFalse; else if (!fn) return this;
            return 1 === one && (origFn = fn, fn = function(event) {
                return jQuery().off(event), origFn.apply(this, arguments);
            }, fn.guid = origFn.guid || (origFn.guid = jQuery.guid++)), this.each(function() {
                jQuery.event.add(this, types, fn, data, selector);
            });
        },
        one: function(types, selector, data, fn) {
            return this.on(types, selector, data, fn, 1);
        },
        off: function(types, selector, fn) {
            var handleObj, type;
            if (types && types.preventDefault && types.handleObj) return handleObj = types.handleObj, 
            jQuery(types.delegateTarget).off(handleObj.namespace ? handleObj.origType + "." + handleObj.namespace : handleObj.origType, handleObj.selector, handleObj.handler), 
            this;
            if ("object" == typeof types) {
                for (type in types) this.off(type, selector, types[type]);
                return this;
            }
            return (selector === !1 || "function" == typeof selector) && (fn = selector, selector = undefined), 
            fn === !1 && (fn = returnFalse), this.each(function() {
                jQuery.event.remove(this, types, fn, selector);
            });
        },
        bind: function(types, data, fn) {
            return this.on(types, null, data, fn);
        },
        unbind: function(types, fn) {
            return this.off(types, null, fn);
        },
        delegate: function(selector, types, data, fn) {
            return this.on(types, selector, data, fn);
        },
        undelegate: function(selector, types, fn) {
            return 1 === arguments.length ? this.off(selector, "**") : this.off(types, selector || "**", fn);
        },
        trigger: function(type, data) {
            return this.each(function() {
                jQuery.event.trigger(type, data, this);
            });
        },
        triggerHandler: function(type, data) {
            var elem = this[0];
            return elem ? jQuery.event.trigger(type, data, elem, !0) : void 0;
        }
    }), function(window, undefined) {
        function isNative(fn) {
            return rnative.test(fn + "");
        }
        function createCache() {
            var cache, keys = [];
            return cache = function(key, value) {
                return keys.push(key += " ") > Expr.cacheLength && delete cache[keys.shift()], cache[key] = value;
            };
        }
        function markFunction(fn) {
            return fn[expando] = !0, fn;
        }
        function assert(fn) {
            var div = document.createElement("div");
            try {
                return fn(div);
            } catch (e) {
                return !1;
            } finally {
                div = null;
            }
        }
        function Sizzle(selector, context, results, seed) {
            var match, elem, m, nodeType, i, groups, old, nid, newContext, newSelector;
            if ((context ? context.ownerDocument || context : preferredDoc) !== document && setDocument(context), 
            context = context || document, results = results || [], !selector || "string" != typeof selector) return results;
            if (1 !== (nodeType = context.nodeType) && 9 !== nodeType) return [];
            if (!documentIsXML && !seed) {
                if (match = rquickExpr.exec(selector)) if (m = match[1]) {
                    if (9 === nodeType) {
                        if (elem = context.getElementById(m), !elem || !elem.parentNode) return results;
                        if (elem.id === m) return results.push(elem), results;
                    } else if (context.ownerDocument && (elem = context.ownerDocument.getElementById(m)) && contains(context, elem) && elem.id === m) return results.push(elem), 
                    results;
                } else {
                    if (match[2]) return push.apply(results, slice.call(context.getElementsByTagName(selector), 0)), 
                    results;
                    if ((m = match[3]) && support.getByClassName && context.getElementsByClassName) return push.apply(results, slice.call(context.getElementsByClassName(m), 0)), 
                    results;
                }
                if (support.qsa && !rbuggyQSA.test(selector)) {
                    if (old = !0, nid = expando, newContext = context, newSelector = 9 === nodeType && selector, 
                    1 === nodeType && "object" !== context.nodeName.toLowerCase()) {
                        for (groups = tokenize(selector), (old = context.getAttribute("id")) ? nid = old.replace(rescape, "\\$&") : context.setAttribute("id", nid), 
                        nid = "[id='" + nid + "'] ", i = groups.length; i--; ) groups[i] = nid + toSelector(groups[i]);
                        newContext = rsibling.test(selector) && context.parentNode || context, newSelector = groups.join(",");
                    }
                    if (newSelector) try {
                        return push.apply(results, slice.call(newContext.querySelectorAll(newSelector), 0)), 
                        results;
                    } catch (qsaError) {} finally {
                        old || context.removeAttribute("id");
                    }
                }
            }
            return select(selector.replace(rtrim, "$1"), context, results, seed);
        }
        function siblingCheck(a, b) {
            var cur = b && a, diff = cur && (~b.sourceIndex || MAX_NEGATIVE) - (~a.sourceIndex || MAX_NEGATIVE);
            if (diff) return diff;
            if (cur) for (;cur = cur.nextSibling; ) if (cur === b) return -1;
            return a ? 1 : -1;
        }
        function createInputPseudo(type) {
            return function(elem) {
                var name = elem.nodeName.toLowerCase();
                return "input" === name && elem.type === type;
            };
        }
        function createButtonPseudo(type) {
            return function(elem) {
                var name = elem.nodeName.toLowerCase();
                return ("input" === name || "button" === name) && elem.type === type;
            };
        }
        function createPositionalPseudo(fn) {
            return markFunction(function(argument) {
                return argument = +argument, markFunction(function(seed, matches) {
                    for (var j, matchIndexes = fn([], seed.length, argument), i = matchIndexes.length; i--; ) seed[j = matchIndexes[i]] && (seed[j] = !(matches[j] = seed[j]));
                });
            });
        }
        function tokenize(selector, parseOnly) {
            var matched, match, tokens, type, soFar, groups, preFilters, cached = tokenCache[selector + " "];
            if (cached) return parseOnly ? 0 : cached.slice(0);
            for (soFar = selector, groups = [], preFilters = Expr.preFilter; soFar; ) {
                (!matched || (match = rcomma.exec(soFar))) && (match && (soFar = soFar.slice(match[0].length) || soFar), 
                groups.push(tokens = [])), matched = !1, (match = rcombinators.exec(soFar)) && (matched = match.shift(), 
                tokens.push({
                    value: matched,
                    type: match[0].replace(rtrim, " ")
                }), soFar = soFar.slice(matched.length));
                for (type in Expr.filter) !(match = matchExpr[type].exec(soFar)) || preFilters[type] && !(match = preFilters[type](match)) || (matched = match.shift(), 
                tokens.push({
                    value: matched,
                    type: type,
                    matches: match
                }), soFar = soFar.slice(matched.length));
                if (!matched) break;
            }
            return parseOnly ? soFar.length : soFar ? Sizzle.error(selector) : tokenCache(selector, groups).slice(0);
        }
        function toSelector(tokens) {
            for (var i = 0, len = tokens.length, selector = ""; len > i; i++) selector += tokens[i].value;
            return selector;
        }
        function addCombinator(matcher, combinator, base) {
            var dir = combinator.dir, checkNonElements = base && "parentNode" === dir, doneName = done++;
            return combinator.first ? function(elem, context, xml) {
                for (;elem = elem[dir]; ) if (1 === elem.nodeType || checkNonElements) return matcher(elem, context, xml);
            } : function(elem, context, xml) {
                var data, cache, outerCache, dirkey = dirruns + " " + doneName;
                if (xml) {
                    for (;elem = elem[dir]; ) if ((1 === elem.nodeType || checkNonElements) && matcher(elem, context, xml)) return !0;
                } else for (;elem = elem[dir]; ) if (1 === elem.nodeType || checkNonElements) if (outerCache = elem[expando] || (elem[expando] = {}), 
                (cache = outerCache[dir]) && cache[0] === dirkey) {
                    if ((data = cache[1]) === !0 || data === cachedruns) return data === !0;
                } else if (cache = outerCache[dir] = [ dirkey ], cache[1] = matcher(elem, context, xml) || cachedruns, 
                cache[1] === !0) return !0;
            };
        }
        function elementMatcher(matchers) {
            return matchers.length > 1 ? function(elem, context, xml) {
                for (var i = matchers.length; i--; ) if (!matchers[i](elem, context, xml)) return !1;
                return !0;
            } : matchers[0];
        }
        function condense(unmatched, map, filter, context, xml) {
            for (var elem, newUnmatched = [], i = 0, len = unmatched.length, mapped = null != map; len > i; i++) (elem = unmatched[i]) && (!filter || filter(elem, context, xml)) && (newUnmatched.push(elem), 
            mapped && map.push(i));
            return newUnmatched;
        }
        function setMatcher(preFilter, selector, matcher, postFilter, postFinder, postSelector) {
            return postFilter && !postFilter[expando] && (postFilter = setMatcher(postFilter)), 
            postFinder && !postFinder[expando] && (postFinder = setMatcher(postFinder, postSelector)), 
            markFunction(function(seed, results, context, xml) {
                var temp, i, elem, preMap = [], postMap = [], preexisting = results.length, elems = seed || multipleContexts(selector || "*", context.nodeType ? [ context ] : context, []), matcherIn = !preFilter || !seed && selector ? elems : condense(elems, preMap, preFilter, context, xml), matcherOut = matcher ? postFinder || (seed ? preFilter : preexisting || postFilter) ? [] : results : matcherIn;
                if (matcher && matcher(matcherIn, matcherOut, context, xml), postFilter) for (temp = condense(matcherOut, postMap), 
                postFilter(temp, [], context, xml), i = temp.length; i--; ) (elem = temp[i]) && (matcherOut[postMap[i]] = !(matcherIn[postMap[i]] = elem));
                if (seed) {
                    if (postFinder || preFilter) {
                        if (postFinder) {
                            for (temp = [], i = matcherOut.length; i--; ) (elem = matcherOut[i]) && temp.push(matcherIn[i] = elem);
                            postFinder(null, matcherOut = [], temp, xml);
                        }
                        for (i = matcherOut.length; i--; ) (elem = matcherOut[i]) && (temp = postFinder ? indexOf.call(seed, elem) : preMap[i]) > -1 && (seed[temp] = !(results[temp] = elem));
                    }
                } else matcherOut = condense(matcherOut === results ? matcherOut.splice(preexisting, matcherOut.length) : matcherOut), 
                postFinder ? postFinder(null, results, matcherOut, xml) : push.apply(results, matcherOut);
            });
        }
        function matcherFromTokens(tokens) {
            for (var checkContext, matcher, j, len = tokens.length, leadingRelative = Expr.relative[tokens[0].type], implicitRelative = leadingRelative || Expr.relative[" "], i = leadingRelative ? 1 : 0, matchContext = addCombinator(function(elem) {
                return elem === checkContext;
            }, implicitRelative, !0), matchAnyContext = addCombinator(function(elem) {
                return indexOf.call(checkContext, elem) > -1;
            }, implicitRelative, !0), matchers = [ function(elem, context, xml) {
                return !leadingRelative && (xml || context !== outermostContext) || ((checkContext = context).nodeType ? matchContext(elem, context, xml) : matchAnyContext(elem, context, xml));
            } ]; len > i; i++) if (matcher = Expr.relative[tokens[i].type]) matchers = [ addCombinator(elementMatcher(matchers), matcher) ]; else {
                if (matcher = Expr.filter[tokens[i].type].apply(null, tokens[i].matches), matcher[expando]) {
                    for (j = ++i; len > j && !Expr.relative[tokens[j].type]; j++) ;
                    return setMatcher(i > 1 && elementMatcher(matchers), i > 1 && toSelector(tokens.slice(0, i - 1)).replace(rtrim, "$1"), matcher, j > i && matcherFromTokens(tokens.slice(i, j)), len > j && matcherFromTokens(tokens = tokens.slice(j)), len > j && toSelector(tokens));
                }
                matchers.push(matcher);
            }
            return elementMatcher(matchers);
        }
        function matcherFromGroupMatchers(elementMatchers, setMatchers) {
            var matcherCachedRuns = 0, bySet = setMatchers.length > 0, byElement = elementMatchers.length > 0, superMatcher = function(seed, context, xml, results, expandContext) {
                var elem, j, matcher, setMatched = [], matchedCount = 0, i = "0", unmatched = seed && [], outermost = null != expandContext, contextBackup = outermostContext, elems = seed || byElement && Expr.find.TAG("*", expandContext && context.parentNode || context), dirrunsUnique = dirruns += null == contextBackup ? 1 : Math.random() || .1;
                for (outermost && (outermostContext = context !== document && context, cachedruns = matcherCachedRuns); null != (elem = elems[i]); i++) {
                    if (byElement && elem) {
                        for (j = 0; matcher = elementMatchers[j++]; ) if (matcher(elem, context, xml)) {
                            results.push(elem);
                            break;
                        }
                        outermost && (dirruns = dirrunsUnique, cachedruns = ++matcherCachedRuns);
                    }
                    bySet && ((elem = !matcher && elem) && matchedCount--, seed && unmatched.push(elem));
                }
                if (matchedCount += i, bySet && i !== matchedCount) {
                    for (j = 0; matcher = setMatchers[j++]; ) matcher(unmatched, setMatched, context, xml);
                    if (seed) {
                        if (matchedCount > 0) for (;i--; ) unmatched[i] || setMatched[i] || (setMatched[i] = pop.call(results));
                        setMatched = condense(setMatched);
                    }
                    push.apply(results, setMatched), outermost && !seed && setMatched.length > 0 && matchedCount + setMatchers.length > 1 && Sizzle.uniqueSort(results);
                }
                return outermost && (dirruns = dirrunsUnique, outermostContext = contextBackup), 
                unmatched;
            };
            return bySet ? markFunction(superMatcher) : superMatcher;
        }
        function multipleContexts(selector, contexts, results) {
            for (var i = 0, len = contexts.length; len > i; i++) Sizzle(selector, contexts[i], results);
            return results;
        }
        function select(selector, context, results, seed) {
            var i, tokens, token, type, find, match = tokenize(selector);
            if (!seed && 1 === match.length) {
                if (tokens = match[0] = match[0].slice(0), tokens.length > 2 && "ID" === (token = tokens[0]).type && 9 === context.nodeType && !documentIsXML && Expr.relative[tokens[1].type]) {
                    if (context = Expr.find.ID(token.matches[0].replace(runescape, funescape), context)[0], 
                    !context) return results;
                    selector = selector.slice(tokens.shift().value.length);
                }
                for (i = matchExpr.needsContext.test(selector) ? 0 : tokens.length; i-- && (token = tokens[i], 
                !Expr.relative[type = token.type]); ) if ((find = Expr.find[type]) && (seed = find(token.matches[0].replace(runescape, funescape), rsibling.test(tokens[0].type) && context.parentNode || context))) {
                    if (tokens.splice(i, 1), selector = seed.length && toSelector(tokens), !selector) return push.apply(results, slice.call(seed, 0)), 
                    results;
                    break;
                }
            }
            return compile(selector, match)(seed, context, documentIsXML, results, rsibling.test(selector)), 
            results;
        }
        function setFilters() {}
        var i, cachedruns, Expr, getText, isXML, compile, hasDuplicate, outermostContext, setDocument, document, docElem, documentIsXML, rbuggyQSA, rbuggyMatches, matches, contains, sortOrder, expando = "sizzle" + -new Date(), preferredDoc = window.document, support = {}, dirruns = 0, done = 0, classCache = createCache(), tokenCache = createCache(), compilerCache = createCache(), strundefined = typeof undefined, MAX_NEGATIVE = 1 << 31, arr = [], pop = arr.pop, push = arr.push, slice = arr.slice, indexOf = arr.indexOf || function(elem) {
            for (var i = 0, len = this.length; len > i; i++) if (this[i] === elem) return i;
            return -1;
        }, whitespace = "[\\x20\\t\\r\\n\\f]", characterEncoding = "(?:\\\\.|[\\w-]|[^\\x00-\\xa0])+", identifier = characterEncoding.replace("w", "w#"), operators = "([*^$|!~]?=)", attributes = "\\[" + whitespace + "*(" + characterEncoding + ")" + whitespace + "*(?:" + operators + whitespace + "*(?:(['\"])((?:\\\\.|[^\\\\])*?)\\3|(" + identifier + ")|)|)" + whitespace + "*\\]", pseudos = ":(" + characterEncoding + ")(?:\\(((['\"])((?:\\\\.|[^\\\\])*?)\\3|((?:\\\\.|[^\\\\()[\\]]|" + attributes.replace(3, 8) + ")*)|.*)\\)|)", rtrim = new RegExp("^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g"), rcomma = new RegExp("^" + whitespace + "*," + whitespace + "*"), rcombinators = new RegExp("^" + whitespace + "*([\\x20\\t\\r\\n\\f>+~])" + whitespace + "*"), rpseudo = new RegExp(pseudos), ridentifier = new RegExp("^" + identifier + "$"), matchExpr = {
            ID: new RegExp("^#(" + characterEncoding + ")"),
            CLASS: new RegExp("^\\.(" + characterEncoding + ")"),
            NAME: new RegExp("^\\[name=['\"]?(" + characterEncoding + ")['\"]?\\]"),
            TAG: new RegExp("^(" + characterEncoding.replace("w", "w*") + ")"),
            ATTR: new RegExp("^" + attributes),
            PSEUDO: new RegExp("^" + pseudos),
            CHILD: new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace + "*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace + "*(\\d+)|))" + whitespace + "*\\)|)", "i"),
            needsContext: new RegExp("^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" + whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i")
        }, rsibling = /[\x20\t\r\n\f]*[+~]/, rnative = /^[^{]+\{\s*\[native code/, rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/, rinputs = /^(?:input|select|textarea|button)$/i, rheader = /^h\d$/i, rescape = /'|\\/g, rattributeQuotes = /\=[\x20\t\r\n\f]*([^'"\]]*)[\x20\t\r\n\f]*\]/g, runescape = /\\([\da-fA-F]{1,6}[\x20\t\r\n\f]?|.)/g, funescape = function(_, escaped) {
            var high = "0x" + escaped - 65536;
            return high !== high ? escaped : 0 > high ? String.fromCharCode(high + 65536) : String.fromCharCode(high >> 10 | 55296, 1023 & high | 56320);
        };
        try {
            slice.call(preferredDoc.documentElement.childNodes, 0)[0].nodeType;
        } catch (e) {
            slice = function(i) {
                for (var elem, results = []; elem = this[i++]; ) results.push(elem);
                return results;
            };
        }
        isXML = Sizzle.isXML = function(elem) {
            var documentElement = elem && (elem.ownerDocument || elem).documentElement;
            return documentElement ? "HTML" !== documentElement.nodeName : !1;
        }, setDocument = Sizzle.setDocument = function(node) {
            var doc = node ? node.ownerDocument || node : preferredDoc;
            return doc !== document && 9 === doc.nodeType && doc.documentElement ? (document = doc, 
            docElem = doc.documentElement, documentIsXML = isXML(doc), support.tagNameNoComments = assert(function(div) {
                return div.appendChild(doc.createComment("")), !div.getElementsByTagName("*").length;
            }), support.attributes = assert(function(div) {
                div.innerHTML = "<select></select>";
                var type = typeof div.lastChild.getAttribute("multiple");
                return "boolean" !== type && "string" !== type;
            }), support.getByClassName = assert(function(div) {
                return div.innerHTML = "<div class='hidden e'></div><div class='hidden'></div>", 
                div.getElementsByClassName && div.getElementsByClassName("e").length ? (div.lastChild.className = "e", 
                2 === div.getElementsByClassName("e").length) : !1;
            }), support.getByName = assert(function(div) {
                div.id = expando + 0, div.innerHTML = "<a name='" + expando + "'></a><div name='" + expando + "'></div>", 
                docElem.insertBefore(div, docElem.firstChild);
                var pass = doc.getElementsByName && doc.getElementsByName(expando).length === 2 + doc.getElementsByName(expando + 0).length;
                return support.getIdNotName = !doc.getElementById(expando), docElem.removeChild(div), 
                pass;
            }), Expr.attrHandle = assert(function(div) {
                return div.innerHTML = "<a href='#'></a>", div.firstChild && typeof div.firstChild.getAttribute !== strundefined && "#" === div.firstChild.getAttribute("href");
            }) ? {} : {
                href: function(elem) {
                    return elem.getAttribute("href", 2);
                },
                type: function(elem) {
                    return elem.getAttribute("type");
                }
            }, support.getIdNotName ? (Expr.find.ID = function(id, context) {
                if (typeof context.getElementById !== strundefined && !documentIsXML) {
                    var m = context.getElementById(id);
                    return m && m.parentNode ? [ m ] : [];
                }
            }, Expr.filter.ID = function(id) {
                var attrId = id.replace(runescape, funescape);
                return function(elem) {
                    return elem.getAttribute("id") === attrId;
                };
            }) : (Expr.find.ID = function(id, context) {
                if (typeof context.getElementById !== strundefined && !documentIsXML) {
                    var m = context.getElementById(id);
                    return m ? m.id === id || typeof m.getAttributeNode !== strundefined && m.getAttributeNode("id").value === id ? [ m ] : undefined : [];
                }
            }, Expr.filter.ID = function(id) {
                var attrId = id.replace(runescape, funescape);
                return function(elem) {
                    var node = typeof elem.getAttributeNode !== strundefined && elem.getAttributeNode("id");
                    return node && node.value === attrId;
                };
            }), Expr.find.TAG = support.tagNameNoComments ? function(tag, context) {
                return typeof context.getElementsByTagName !== strundefined ? context.getElementsByTagName(tag) : void 0;
            } : function(tag, context) {
                var elem, tmp = [], i = 0, results = context.getElementsByTagName(tag);
                if ("*" === tag) {
                    for (;elem = results[i++]; ) 1 === elem.nodeType && tmp.push(elem);
                    return tmp;
                }
                return results;
            }, Expr.find.NAME = support.getByName && function(tag, context) {
                return typeof context.getElementsByName !== strundefined ? context.getElementsByName(name) : void 0;
            }, Expr.find.CLASS = support.getByClassName && function(className, context) {
                return typeof context.getElementsByClassName === strundefined || documentIsXML ? void 0 : context.getElementsByClassName(className);
            }, rbuggyMatches = [], rbuggyQSA = [ ":focus" ], (support.qsa = isNative(doc.querySelectorAll)) && (assert(function(div) {
                div.innerHTML = "<select><option selected=''></option></select>", div.querySelectorAll("[selected]").length || rbuggyQSA.push("\\[" + whitespace + "*(?:checked|disabled|ismap|multiple|readonly|selected|value)"), 
                div.querySelectorAll(":checked").length || rbuggyQSA.push(":checked");
            }), assert(function(div) {
                div.innerHTML = "<input type='hidden' i=''/>", div.querySelectorAll("[i^='']").length && rbuggyQSA.push("[*^$]=" + whitespace + "*(?:\"\"|'')"), 
                div.querySelectorAll(":enabled").length || rbuggyQSA.push(":enabled", ":disabled"), 
                div.querySelectorAll("*,:x"), rbuggyQSA.push(",.*:");
            })), (support.matchesSelector = isNative(matches = docElem.matchesSelector || docElem.mozMatchesSelector || docElem.webkitMatchesSelector || docElem.oMatchesSelector || docElem.msMatchesSelector)) && assert(function(div) {
                support.disconnectedMatch = matches.call(div, "div"), matches.call(div, "[s!='']:x"), 
                rbuggyMatches.push("!=", pseudos);
            }), rbuggyQSA = new RegExp(rbuggyQSA.join("|")), rbuggyMatches = new RegExp(rbuggyMatches.join("|")), 
            contains = isNative(docElem.contains) || docElem.compareDocumentPosition ? function(a, b) {
                var adown = 9 === a.nodeType ? a.documentElement : a, bup = b && b.parentNode;
                return a === bup || !(!bup || 1 !== bup.nodeType || !(adown.contains ? adown.contains(bup) : a.compareDocumentPosition && 16 & a.compareDocumentPosition(bup)));
            } : function(a, b) {
                if (b) for (;b = b.parentNode; ) if (b === a) return !0;
                return !1;
            }, sortOrder = docElem.compareDocumentPosition ? function(a, b) {
                var compare;
                return a === b ? (hasDuplicate = !0, 0) : (compare = b.compareDocumentPosition && a.compareDocumentPosition && a.compareDocumentPosition(b)) ? 1 & compare || a.parentNode && 11 === a.parentNode.nodeType ? a === doc || contains(preferredDoc, a) ? -1 : b === doc || contains(preferredDoc, b) ? 1 : 0 : 4 & compare ? -1 : 1 : a.compareDocumentPosition ? -1 : 1;
            } : function(a, b) {
                var cur, i = 0, aup = a.parentNode, bup = b.parentNode, ap = [ a ], bp = [ b ];
                if (a === b) return hasDuplicate = !0, 0;
                if (!aup || !bup) return a === doc ? -1 : b === doc ? 1 : aup ? -1 : bup ? 1 : 0;
                if (aup === bup) return siblingCheck(a, b);
                for (cur = a; cur = cur.parentNode; ) ap.unshift(cur);
                for (cur = b; cur = cur.parentNode; ) bp.unshift(cur);
                for (;ap[i] === bp[i]; ) i++;
                return i ? siblingCheck(ap[i], bp[i]) : ap[i] === preferredDoc ? -1 : bp[i] === preferredDoc ? 1 : 0;
            }, hasDuplicate = !1, [ 0, 0 ].sort(sortOrder), support.detectDuplicates = hasDuplicate, 
            document) : document;
        }, Sizzle.matches = function(expr, elements) {
            return Sizzle(expr, null, null, elements);
        }, Sizzle.matchesSelector = function(elem, expr) {
            if ((elem.ownerDocument || elem) !== document && setDocument(elem), expr = expr.replace(rattributeQuotes, "='$1']"), 
            !(!support.matchesSelector || documentIsXML || rbuggyMatches && rbuggyMatches.test(expr) || rbuggyQSA.test(expr))) try {
                var ret = matches.call(elem, expr);
                if (ret || support.disconnectedMatch || elem.document && 11 !== elem.document.nodeType) return ret;
            } catch (e) {}
            return Sizzle(expr, document, null, [ elem ]).length > 0;
        }, Sizzle.contains = function(context, elem) {
            return (context.ownerDocument || context) !== document && setDocument(context), 
            contains(context, elem);
        }, Sizzle.attr = function(elem, name) {
            var val;
            return (elem.ownerDocument || elem) !== document && setDocument(elem), documentIsXML || (name = name.toLowerCase()), 
            (val = Expr.attrHandle[name]) ? val(elem) : documentIsXML || support.attributes ? elem.getAttribute(name) : ((val = elem.getAttributeNode(name)) || elem.getAttribute(name)) && elem[name] === !0 ? name : val && val.specified ? val.value : null;
        }, Sizzle.error = function(msg) {
            throw new Error("Syntax error, unrecognized expression: " + msg);
        }, Sizzle.uniqueSort = function(results) {
            var elem, duplicates = [], i = 1, j = 0;
            if (hasDuplicate = !support.detectDuplicates, results.sort(sortOrder), hasDuplicate) {
                for (;elem = results[i]; i++) elem === results[i - 1] && (j = duplicates.push(i));
                for (;j--; ) results.splice(duplicates[j], 1);
            }
            return results;
        }, getText = Sizzle.getText = function(elem) {
            var node, ret = "", i = 0, nodeType = elem.nodeType;
            if (nodeType) {
                if (1 === nodeType || 9 === nodeType || 11 === nodeType) {
                    if ("string" == typeof elem.textContent) return elem.textContent;
                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) ret += getText(elem);
                } else if (3 === nodeType || 4 === nodeType) return elem.nodeValue;
            } else for (;node = elem[i]; i++) ret += getText(node);
            return ret;
        }, Expr = Sizzle.selectors = {
            cacheLength: 50,
            createPseudo: markFunction,
            match: matchExpr,
            find: {},
            relative: {
                ">": {
                    dir: "parentNode",
                    first: !0
                },
                " ": {
                    dir: "parentNode"
                },
                "+": {
                    dir: "previousSibling",
                    first: !0
                },
                "~": {
                    dir: "previousSibling"
                }
            },
            preFilter: {
                ATTR: function(match) {
                    return match[1] = match[1].replace(runescape, funescape), match[3] = (match[4] || match[5] || "").replace(runescape, funescape), 
                    "~=" === match[2] && (match[3] = " " + match[3] + " "), match.slice(0, 4);
                },
                CHILD: function(match) {
                    return match[1] = match[1].toLowerCase(), "nth" === match[1].slice(0, 3) ? (match[3] || Sizzle.error(match[0]), 
                    match[4] = +(match[4] ? match[5] + (match[6] || 1) : 2 * ("even" === match[3] || "odd" === match[3])), 
                    match[5] = +(match[7] + match[8] || "odd" === match[3])) : match[3] && Sizzle.error(match[0]), 
                    match;
                },
                PSEUDO: function(match) {
                    var excess, unquoted = !match[5] && match[2];
                    return matchExpr.CHILD.test(match[0]) ? null : (match[4] ? match[2] = match[4] : unquoted && rpseudo.test(unquoted) && (excess = tokenize(unquoted, !0)) && (excess = unquoted.indexOf(")", unquoted.length - excess) - unquoted.length) && (match[0] = match[0].slice(0, excess), 
                    match[2] = unquoted.slice(0, excess)), match.slice(0, 3));
                }
            },
            filter: {
                TAG: function(nodeName) {
                    return "*" === nodeName ? function() {
                        return !0;
                    } : (nodeName = nodeName.replace(runescape, funescape).toLowerCase(), function(elem) {
                        return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
                    });
                },
                CLASS: function(className) {
                    var pattern = classCache[className + " "];
                    return pattern || (pattern = new RegExp("(^|" + whitespace + ")" + className + "(" + whitespace + "|$)")) && classCache(className, function(elem) {
                        return pattern.test(elem.className || typeof elem.getAttribute !== strundefined && elem.getAttribute("class") || "");
                    });
                },
                ATTR: function(name, operator, check) {
                    return function(elem) {
                        var result = Sizzle.attr(elem, name);
                        return null == result ? "!=" === operator : operator ? (result += "", "=" === operator ? result === check : "!=" === operator ? result !== check : "^=" === operator ? check && 0 === result.indexOf(check) : "*=" === operator ? check && result.indexOf(check) > -1 : "$=" === operator ? check && result.slice(-check.length) === check : "~=" === operator ? (" " + result + " ").indexOf(check) > -1 : "|=" === operator ? result === check || result.slice(0, check.length + 1) === check + "-" : !1) : !0;
                    };
                },
                CHILD: function(type, what, argument, first, last) {
                    var simple = "nth" !== type.slice(0, 3), forward = "last" !== type.slice(-4), ofType = "of-type" === what;
                    return 1 === first && 0 === last ? function(elem) {
                        return !!elem.parentNode;
                    } : function(elem, context, xml) {
                        var cache, outerCache, node, diff, nodeIndex, start, dir = simple !== forward ? "nextSibling" : "previousSibling", parent = elem.parentNode, name = ofType && elem.nodeName.toLowerCase(), useCache = !xml && !ofType;
                        if (parent) {
                            if (simple) {
                                for (;dir; ) {
                                    for (node = elem; node = node[dir]; ) if (ofType ? node.nodeName.toLowerCase() === name : 1 === node.nodeType) return !1;
                                    start = dir = "only" === type && !start && "nextSibling";
                                }
                                return !0;
                            }
                            if (start = [ forward ? parent.firstChild : parent.lastChild ], forward && useCache) {
                                for (outerCache = parent[expando] || (parent[expando] = {}), cache = outerCache[type] || [], 
                                nodeIndex = cache[0] === dirruns && cache[1], diff = cache[0] === dirruns && cache[2], 
                                node = nodeIndex && parent.childNodes[nodeIndex]; node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop(); ) if (1 === node.nodeType && ++diff && node === elem) {
                                    outerCache[type] = [ dirruns, nodeIndex, diff ];
                                    break;
                                }
                            } else if (useCache && (cache = (elem[expando] || (elem[expando] = {}))[type]) && cache[0] === dirruns) diff = cache[1]; else for (;(node = ++nodeIndex && node && node[dir] || (diff = nodeIndex = 0) || start.pop()) && ((ofType ? node.nodeName.toLowerCase() !== name : 1 !== node.nodeType) || !++diff || (useCache && ((node[expando] || (node[expando] = {}))[type] = [ dirruns, diff ]), 
                            node !== elem)); ) ;
                            return diff -= last, diff === first || diff % first === 0 && diff / first >= 0;
                        }
                    };
                },
                PSEUDO: function(pseudo, argument) {
                    var args, fn = Expr.pseudos[pseudo] || Expr.setFilters[pseudo.toLowerCase()] || Sizzle.error("unsupported pseudo: " + pseudo);
                    return fn[expando] ? fn(argument) : fn.length > 1 ? (args = [ pseudo, pseudo, "", argument ], 
                    Expr.setFilters.hasOwnProperty(pseudo.toLowerCase()) ? markFunction(function(seed, matches) {
                        for (var idx, matched = fn(seed, argument), i = matched.length; i--; ) idx = indexOf.call(seed, matched[i]), 
                        seed[idx] = !(matches[idx] = matched[i]);
                    }) : function(elem) {
                        return fn(elem, 0, args);
                    }) : fn;
                }
            },
            pseudos: {
                not: markFunction(function(selector) {
                    var input = [], results = [], matcher = compile(selector.replace(rtrim, "$1"));
                    return matcher[expando] ? markFunction(function(seed, matches, context, xml) {
                        for (var elem, unmatched = matcher(seed, null, xml, []), i = seed.length; i--; ) (elem = unmatched[i]) && (seed[i] = !(matches[i] = elem));
                    }) : function(elem, context, xml) {
                        return input[0] = elem, matcher(input, null, xml, results), !results.pop();
                    };
                }),
                has: markFunction(function(selector) {
                    return function(elem) {
                        return Sizzle(selector, elem).length > 0;
                    };
                }),
                contains: markFunction(function(text) {
                    return function(elem) {
                        return (elem.textContent || elem.innerText || getText(elem)).indexOf(text) > -1;
                    };
                }),
                lang: markFunction(function(lang) {
                    return ridentifier.test(lang || "") || Sizzle.error("unsupported lang: " + lang), 
                    lang = lang.replace(runescape, funescape).toLowerCase(), function(elem) {
                        var elemLang;
                        do if (elemLang = documentIsXML ? elem.getAttribute("xml:lang") || elem.getAttribute("lang") : elem.lang) return elemLang = elemLang.toLowerCase(), 
                        elemLang === lang || 0 === elemLang.indexOf(lang + "-"); while ((elem = elem.parentNode) && 1 === elem.nodeType);
                        return !1;
                    };
                }),
                target: function(elem) {
                    var hash = window.location && window.location.hash;
                    return hash && hash.slice(1) === elem.id;
                },
                root: function(elem) {
                    return elem === docElem;
                },
                focus: function(elem) {
                    return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
                },
                enabled: function(elem) {
                    return elem.disabled === !1;
                },
                disabled: function(elem) {
                    return elem.disabled === !0;
                },
                checked: function(elem) {
                    var nodeName = elem.nodeName.toLowerCase();
                    return "input" === nodeName && !!elem.checked || "option" === nodeName && !!elem.selected;
                },
                selected: function(elem) {
                    return elem.parentNode && elem.parentNode.selectedIndex, elem.selected === !0;
                },
                empty: function(elem) {
                    for (elem = elem.firstChild; elem; elem = elem.nextSibling) if (elem.nodeName > "@" || 3 === elem.nodeType || 4 === elem.nodeType) return !1;
                    return !0;
                },
                parent: function(elem) {
                    return !Expr.pseudos.empty(elem);
                },
                header: function(elem) {
                    return rheader.test(elem.nodeName);
                },
                input: function(elem) {
                    return rinputs.test(elem.nodeName);
                },
                button: function(elem) {
                    var name = elem.nodeName.toLowerCase();
                    return "input" === name && "button" === elem.type || "button" === name;
                },
                text: function(elem) {
                    var attr;
                    return "input" === elem.nodeName.toLowerCase() && "text" === elem.type && (null == (attr = elem.getAttribute("type")) || attr.toLowerCase() === elem.type);
                },
                first: createPositionalPseudo(function() {
                    return [ 0 ];
                }),
                last: createPositionalPseudo(function(matchIndexes, length) {
                    return [ length - 1 ];
                }),
                eq: createPositionalPseudo(function(matchIndexes, length, argument) {
                    return [ 0 > argument ? argument + length : argument ];
                }),
                even: createPositionalPseudo(function(matchIndexes, length) {
                    for (var i = 0; length > i; i += 2) matchIndexes.push(i);
                    return matchIndexes;
                }),
                odd: createPositionalPseudo(function(matchIndexes, length) {
                    for (var i = 1; length > i; i += 2) matchIndexes.push(i);
                    return matchIndexes;
                }),
                lt: createPositionalPseudo(function(matchIndexes, length, argument) {
                    for (var i = 0 > argument ? argument + length : argument; --i >= 0; ) matchIndexes.push(i);
                    return matchIndexes;
                }),
                gt: createPositionalPseudo(function(matchIndexes, length, argument) {
                    for (var i = 0 > argument ? argument + length : argument; ++i < length; ) matchIndexes.push(i);
                    return matchIndexes;
                })
            }
        };
        for (i in {
            radio: !0,
            checkbox: !0,
            file: !0,
            password: !0,
            image: !0
        }) Expr.pseudos[i] = createInputPseudo(i);
        for (i in {
            submit: !0,
            reset: !0
        }) Expr.pseudos[i] = createButtonPseudo(i);
        compile = Sizzle.compile = function(selector, group) {
            var i, setMatchers = [], elementMatchers = [], cached = compilerCache[selector + " "];
            if (!cached) {
                for (group || (group = tokenize(selector)), i = group.length; i--; ) cached = matcherFromTokens(group[i]), 
                cached[expando] ? setMatchers.push(cached) : elementMatchers.push(cached);
                cached = compilerCache(selector, matcherFromGroupMatchers(elementMatchers, setMatchers));
            }
            return cached;
        }, Expr.pseudos.nth = Expr.pseudos.eq, Expr.filters = setFilters.prototype = Expr.pseudos, 
        Expr.setFilters = new setFilters(), setDocument(), Sizzle.attr = jQuery.attr, jQuery.find = Sizzle, 
        jQuery.expr = Sizzle.selectors, jQuery.expr[":"] = jQuery.expr.pseudos, jQuery.unique = Sizzle.uniqueSort, 
        jQuery.text = Sizzle.getText, jQuery.isXMLDoc = Sizzle.isXML, jQuery.contains = Sizzle.contains;
    }(window);
    var runtil = /Until$/, rparentsprev = /^(?:parents|prev(?:Until|All))/, isSimple = /^.[^:#\[\.,]*$/, rneedsContext = jQuery.expr.match.needsContext, guaranteedUnique = {
        children: !0,
        contents: !0,
        next: !0,
        prev: !0
    };
    jQuery.fn.extend({
        find: function(selector) {
            var i, ret, self, len = this.length;
            if ("string" != typeof selector) return self = this, this.pushStack(jQuery(selector).filter(function() {
                for (i = 0; len > i; i++) if (jQuery.contains(self[i], this)) return !0;
            }));
            for (ret = [], i = 0; len > i; i++) jQuery.find(selector, this[i], ret);
            return ret = this.pushStack(len > 1 ? jQuery.unique(ret) : ret), ret.selector = (this.selector ? this.selector + " " : "") + selector, 
            ret;
        },
        has: function(target) {
            var i, targets = jQuery(target, this), len = targets.length;
            return this.filter(function() {
                for (i = 0; len > i; i++) if (jQuery.contains(this, targets[i])) return !0;
            });
        },
        not: function(selector) {
            return this.pushStack(winnow(this, selector, !1));
        },
        filter: function(selector) {
            return this.pushStack(winnow(this, selector, !0));
        },
        is: function(selector) {
            return !!selector && ("string" == typeof selector ? rneedsContext.test(selector) ? jQuery(selector, this.context).index(this[0]) >= 0 : jQuery.filter(selector, this).length > 0 : this.filter(selector).length > 0);
        },
        closest: function(selectors, context) {
            for (var cur, i = 0, l = this.length, ret = [], pos = rneedsContext.test(selectors) || "string" != typeof selectors ? jQuery(selectors, context || this.context) : 0; l > i; i++) for (cur = this[i]; cur && cur.ownerDocument && cur !== context && 11 !== cur.nodeType; ) {
                if (pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors)) {
                    ret.push(cur);
                    break;
                }
                cur = cur.parentNode;
            }
            return this.pushStack(ret.length > 1 ? jQuery.unique(ret) : ret);
        },
        index: function(elem) {
            return elem ? "string" == typeof elem ? jQuery.inArray(this[0], jQuery(elem)) : jQuery.inArray(elem.jquery ? elem[0] : elem, this) : this[0] && this[0].parentNode ? this.first().prevAll().length : -1;
        },
        add: function(selector, context) {
            var set = "string" == typeof selector ? jQuery(selector, context) : jQuery.makeArray(selector && selector.nodeType ? [ selector ] : selector), all = jQuery.merge(this.get(), set);
            return this.pushStack(jQuery.unique(all));
        },
        addBack: function(selector) {
            return this.add(null == selector ? this.prevObject : this.prevObject.filter(selector));
        }
    }), jQuery.fn.andSelf = jQuery.fn.addBack, jQuery.each({
        parent: function(elem) {
            var parent = elem.parentNode;
            return parent && 11 !== parent.nodeType ? parent : null;
        },
        parents: function(elem) {
            return jQuery.dir(elem, "parentNode");
        },
        parentsUntil: function(elem, i, until) {
            return jQuery.dir(elem, "parentNode", until);
        },
        next: function(elem) {
            return sibling(elem, "nextSibling");
        },
        prev: function(elem) {
            return sibling(elem, "previousSibling");
        },
        nextAll: function(elem) {
            return jQuery.dir(elem, "nextSibling");
        },
        prevAll: function(elem) {
            return jQuery.dir(elem, "previousSibling");
        },
        nextUntil: function(elem, i, until) {
            return jQuery.dir(elem, "nextSibling", until);
        },
        prevUntil: function(elem, i, until) {
            return jQuery.dir(elem, "previousSibling", until);
        },
        siblings: function(elem) {
            return jQuery.sibling((elem.parentNode || {}).firstChild, elem);
        },
        children: function(elem) {
            return jQuery.sibling(elem.firstChild);
        },
        contents: function(elem) {
            return jQuery.nodeName(elem, "iframe") ? elem.contentDocument || elem.contentWindow.document : jQuery.merge([], elem.childNodes);
        }
    }, function(name, fn) {
        jQuery.fn[name] = function(until, selector) {
            var ret = jQuery.map(this, fn, until);
            return runtil.test(name) || (selector = until), selector && "string" == typeof selector && (ret = jQuery.filter(selector, ret)), 
            ret = this.length > 1 && !guaranteedUnique[name] ? jQuery.unique(ret) : ret, this.length > 1 && rparentsprev.test(name) && (ret = ret.reverse()), 
            this.pushStack(ret);
        };
    }), jQuery.extend({
        filter: function(expr, elems, not) {
            return not && (expr = ":not(" + expr + ")"), 1 === elems.length ? jQuery.find.matchesSelector(elems[0], expr) ? [ elems[0] ] : [] : jQuery.find.matches(expr, elems);
        },
        dir: function(elem, dir, until) {
            for (var matched = [], cur = elem[dir]; cur && 9 !== cur.nodeType && (until === undefined || 1 !== cur.nodeType || !jQuery(cur).is(until)); ) 1 === cur.nodeType && matched.push(cur), 
            cur = cur[dir];
            return matched;
        },
        sibling: function(n, elem) {
            for (var r = []; n; n = n.nextSibling) 1 === n.nodeType && n !== elem && r.push(n);
            return r;
        }
    });
    var nodeNames = "abbr|article|aside|audio|bdi|canvas|data|datalist|details|figcaption|figure|footer|header|hgroup|mark|meter|nav|output|progress|section|summary|time|video", rinlinejQuery = / jQuery\d+="(?:null|\d+)"/g, rnoshimcache = new RegExp("<(?:" + nodeNames + ")[\\s/>]", "i"), rleadingWhitespace = /^\s+/, rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/gi, rtagName = /<([\w:]+)/, rtbody = /<tbody/i, rhtml = /<|&#?\w+;/, rnoInnerhtml = /<(?:script|style|link)/i, manipulation_rcheckableType = /^(?:checkbox|radio)$/i, rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i, rscriptType = /^$|\/(?:java|ecma)script/i, rscriptTypeMasked = /^true\/(.*)/, rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g, wrapMap = {
        option: [ 1, "<select multiple='multiple'>", "</select>" ],
        legend: [ 1, "<fieldset>", "</fieldset>" ],
        area: [ 1, "<map>", "</map>" ],
        param: [ 1, "<object>", "</object>" ],
        thead: [ 1, "<table>", "</table>" ],
        tr: [ 2, "<table><tbody>", "</tbody></table>" ],
        col: [ 2, "<table><tbody></tbody><colgroup>", "</colgroup></table>" ],
        td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],
        _default: jQuery.support.htmlSerialize ? [ 0, "", "" ] : [ 1, "X<div>", "</div>" ]
    }, safeFragment = createSafeFragment(document), fragmentDiv = safeFragment.appendChild(document.createElement("div"));
    wrapMap.optgroup = wrapMap.option, wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead, 
    wrapMap.th = wrapMap.td, jQuery.fn.extend({
        text: function(value) {
            return jQuery.access(this, function(value) {
                return value === undefined ? jQuery.text(this) : this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(value));
            }, null, value, arguments.length);
        },
        wrapAll: function(html) {
            if (jQuery.isFunction(html)) return this.each(function(i) {
                jQuery(this).wrapAll(html.call(this, i));
            });
            if (this[0]) {
                var wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(!0);
                this[0].parentNode && wrap.insertBefore(this[0]), wrap.map(function() {
                    for (var elem = this; elem.firstChild && 1 === elem.firstChild.nodeType; ) elem = elem.firstChild;
                    return elem;
                }).append(this);
            }
            return this;
        },
        wrapInner: function(html) {
            return this.each(jQuery.isFunction(html) ? function(i) {
                jQuery(this).wrapInner(html.call(this, i));
            } : function() {
                var self = jQuery(this), contents = self.contents();
                contents.length ? contents.wrapAll(html) : self.append(html);
            });
        },
        wrap: function(html) {
            var isFunction = jQuery.isFunction(html);
            return this.each(function(i) {
                jQuery(this).wrapAll(isFunction ? html.call(this, i) : html);
            });
        },
        unwrap: function() {
            return this.parent().each(function() {
                jQuery.nodeName(this, "body") || jQuery(this).replaceWith(this.childNodes);
            }).end();
        },
        append: function() {
            return this.domManip(arguments, !0, function(elem) {
                (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) && this.appendChild(elem);
            });
        },
        prepend: function() {
            return this.domManip(arguments, !0, function(elem) {
                (1 === this.nodeType || 11 === this.nodeType || 9 === this.nodeType) && this.insertBefore(elem, this.firstChild);
            });
        },
        before: function() {
            return this.domManip(arguments, !1, function(elem) {
                this.parentNode && this.parentNode.insertBefore(elem, this);
            });
        },
        after: function() {
            return this.domManip(arguments, !1, function(elem) {
                this.parentNode && this.parentNode.insertBefore(elem, this.nextSibling);
            });
        },
        remove: function(selector, keepData) {
            for (var elem, i = 0; null != (elem = this[i]); i++) (!selector || jQuery.filter(selector, [ elem ]).length > 0) && (keepData || 1 !== elem.nodeType || jQuery.cleanData(getAll(elem)), 
            elem.parentNode && (keepData && jQuery.contains(elem.ownerDocument, elem) && setGlobalEval(getAll(elem, "script")), 
            elem.parentNode.removeChild(elem)));
            return this;
        },
        empty: function() {
            for (var elem, i = 0; null != (elem = this[i]); i++) {
                for (1 === elem.nodeType && jQuery.cleanData(getAll(elem, !1)); elem.firstChild; ) elem.removeChild(elem.firstChild);
                elem.options && jQuery.nodeName(elem, "select") && (elem.options.length = 0);
            }
            return this;
        },
        clone: function(dataAndEvents, deepDataAndEvents) {
            return dataAndEvents = null == dataAndEvents ? !1 : dataAndEvents, deepDataAndEvents = null == deepDataAndEvents ? dataAndEvents : deepDataAndEvents, 
            this.map(function() {
                return jQuery.clone(this, dataAndEvents, deepDataAndEvents);
            });
        },
        html: function(value) {
            return jQuery.access(this, function(value) {
                var elem = this[0] || {}, i = 0, l = this.length;
                if (value === undefined) return 1 === elem.nodeType ? elem.innerHTML.replace(rinlinejQuery, "") : undefined;
                if (!("string" != typeof value || rnoInnerhtml.test(value) || !jQuery.support.htmlSerialize && rnoshimcache.test(value) || !jQuery.support.leadingWhitespace && rleadingWhitespace.test(value) || wrapMap[(rtagName.exec(value) || [ "", "" ])[1].toLowerCase()])) {
                    value = value.replace(rxhtmlTag, "<$1></$2>");
                    try {
                        for (;l > i; i++) elem = this[i] || {}, 1 === elem.nodeType && (jQuery.cleanData(getAll(elem, !1)), 
                        elem.innerHTML = value);
                        elem = 0;
                    } catch (e) {}
                }
                elem && this.empty().append(value);
            }, null, value, arguments.length);
        },
        replaceWith: function(value) {
            var isFunc = jQuery.isFunction(value);
            return isFunc || "string" == typeof value || (value = jQuery(value).not(this).detach()), 
            this.domManip([ value ], !0, function(elem) {
                var next = this.nextSibling, parent = this.parentNode;
                parent && (jQuery(this).remove(), parent.insertBefore(elem, next));
            });
        },
        detach: function(selector) {
            return this.remove(selector, !0);
        },
        domManip: function(args, table, callback) {
            args = core_concat.apply([], args);
            var first, node, hasScripts, scripts, doc, fragment, i = 0, l = this.length, set = this, iNoClone = l - 1, value = args[0], isFunction = jQuery.isFunction(value);
            if (isFunction || !(1 >= l || "string" != typeof value || jQuery.support.checkClone) && rchecked.test(value)) return this.each(function(index) {
                var self = set.eq(index);
                isFunction && (args[0] = value.call(this, index, table ? self.html() : undefined)), 
                self.domManip(args, table, callback);
            });
            if (l && (fragment = jQuery.buildFragment(args, this[0].ownerDocument, !1, this), 
            first = fragment.firstChild, 1 === fragment.childNodes.length && (fragment = first), 
            first)) {
                for (table = table && jQuery.nodeName(first, "tr"), scripts = jQuery.map(getAll(fragment, "script"), disableScript), 
                hasScripts = scripts.length; l > i; i++) node = fragment, i !== iNoClone && (node = jQuery.clone(node, !0, !0), 
                hasScripts && jQuery.merge(scripts, getAll(node, "script"))), callback.call(table && jQuery.nodeName(this[i], "table") ? findOrAppend(this[i], "tbody") : this[i], node, i);
                if (hasScripts) for (doc = scripts[scripts.length - 1].ownerDocument, jQuery.map(scripts, restoreScript), 
                i = 0; hasScripts > i; i++) node = scripts[i], rscriptType.test(node.type || "") && !jQuery._data(node, "globalEval") && jQuery.contains(doc, node) && (node.src ? jQuery.ajax({
                    url: node.src,
                    type: "GET",
                    dataType: "script",
                    async: !1,
                    global: !1,
                    "throws": !0
                }) : jQuery.globalEval((node.text || node.textContent || node.innerHTML || "").replace(rcleanScript, "")));
                fragment = first = null;
            }
            return this;
        }
    }), jQuery.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(name, original) {
        jQuery.fn[name] = function(selector) {
            for (var elems, i = 0, ret = [], insert = jQuery(selector), last = insert.length - 1; last >= i; i++) elems = i === last ? this : this.clone(!0), 
            jQuery(insert[i])[original](elems), core_push.apply(ret, elems.get());
            return this.pushStack(ret);
        };
    }), jQuery.extend({
        clone: function(elem, dataAndEvents, deepDataAndEvents) {
            var destElements, node, clone, i, srcElements, inPage = jQuery.contains(elem.ownerDocument, elem);
            if (jQuery.support.html5Clone || jQuery.isXMLDoc(elem) || !rnoshimcache.test("<" + elem.nodeName + ">") ? clone = elem.cloneNode(!0) : (fragmentDiv.innerHTML = elem.outerHTML, 
            fragmentDiv.removeChild(clone = fragmentDiv.firstChild)), !(jQuery.support.noCloneEvent && jQuery.support.noCloneChecked || 1 !== elem.nodeType && 11 !== elem.nodeType || jQuery.isXMLDoc(elem))) for (destElements = getAll(clone), 
            srcElements = getAll(elem), i = 0; null != (node = srcElements[i]); ++i) destElements[i] && fixCloneNodeIssues(node, destElements[i]);
            if (dataAndEvents) if (deepDataAndEvents) for (srcElements = srcElements || getAll(elem), 
            destElements = destElements || getAll(clone), i = 0; null != (node = srcElements[i]); i++) cloneCopyEvent(node, destElements[i]); else cloneCopyEvent(elem, clone);
            return destElements = getAll(clone, "script"), destElements.length > 0 && setGlobalEval(destElements, !inPage && getAll(elem, "script")), 
            destElements = srcElements = node = null, clone;
        },
        buildFragment: function(elems, context, scripts, selection) {
            for (var j, elem, contains, tmp, tag, tbody, wrap, l = elems.length, safe = createSafeFragment(context), nodes = [], i = 0; l > i; i++) if (elem = elems[i], 
            elem || 0 === elem) if ("object" === jQuery.type(elem)) jQuery.merge(nodes, elem.nodeType ? [ elem ] : elem); else if (rhtml.test(elem)) {
                for (tmp = tmp || safe.appendChild(context.createElement("div")), tag = (rtagName.exec(elem) || [ "", "" ])[1].toLowerCase(), 
                wrap = wrapMap[tag] || wrapMap._default, tmp.innerHTML = wrap[1] + elem.replace(rxhtmlTag, "<$1></$2>") + wrap[2], 
                j = wrap[0]; j--; ) tmp = tmp.lastChild;
                if (!jQuery.support.leadingWhitespace && rleadingWhitespace.test(elem) && nodes.push(context.createTextNode(rleadingWhitespace.exec(elem)[0])), 
                !jQuery.support.tbody) for (elem = "table" !== tag || rtbody.test(elem) ? "<table>" !== wrap[1] || rtbody.test(elem) ? 0 : tmp : tmp.firstChild, 
                j = elem && elem.childNodes.length; j--; ) jQuery.nodeName(tbody = elem.childNodes[j], "tbody") && !tbody.childNodes.length && elem.removeChild(tbody);
                for (jQuery.merge(nodes, tmp.childNodes), tmp.textContent = ""; tmp.firstChild; ) tmp.removeChild(tmp.firstChild);
                tmp = safe.lastChild;
            } else nodes.push(context.createTextNode(elem));
            for (tmp && safe.removeChild(tmp), jQuery.support.appendChecked || jQuery.grep(getAll(nodes, "input"), fixDefaultChecked), 
            i = 0; elem = nodes[i++]; ) if ((!selection || -1 === jQuery.inArray(elem, selection)) && (contains = jQuery.contains(elem.ownerDocument, elem), 
            tmp = getAll(safe.appendChild(elem), "script"), contains && setGlobalEval(tmp), 
            scripts)) for (j = 0; elem = tmp[j++]; ) rscriptType.test(elem.type || "") && scripts.push(elem);
            return tmp = null, safe;
        },
        cleanData: function(elems, acceptData) {
            for (var elem, type, id, data, i = 0, internalKey = jQuery.expando, cache = jQuery.cache, deleteExpando = jQuery.support.deleteExpando, special = jQuery.event.special; null != (elem = elems[i]); i++) if ((acceptData || jQuery.acceptData(elem)) && (id = elem[internalKey], 
            data = id && cache[id])) {
                if (data.events) for (type in data.events) special[type] ? jQuery.event.remove(elem, type) : jQuery.removeEvent(elem, type, data.handle);
                cache[id] && (delete cache[id], deleteExpando ? delete elem[internalKey] : typeof elem.removeAttribute !== core_strundefined ? elem.removeAttribute(internalKey) : elem[internalKey] = null, 
                core_deletedIds.push(id));
            }
        }
    });
    var iframe, getStyles, curCSS, ralpha = /alpha\([^)]*\)/i, ropacity = /opacity\s*=\s*([^)]*)/, rposition = /^(top|right|bottom|left)$/, rdisplayswap = /^(none|table(?!-c[ea]).+)/, rmargin = /^margin/, rnumsplit = new RegExp("^(" + core_pnum + ")(.*)$", "i"), rnumnonpx = new RegExp("^(" + core_pnum + ")(?!px)[a-z%]+$", "i"), rrelNum = new RegExp("^([+-])=(" + core_pnum + ")", "i"), elemdisplay = {
        BODY: "block"
    }, cssShow = {
        position: "absolute",
        visibility: "hidden",
        display: "block"
    }, cssNormalTransform = {
        letterSpacing: 0,
        fontWeight: 400
    }, cssExpand = [ "Top", "Right", "Bottom", "Left" ], cssPrefixes = [ "Webkit", "O", "Moz", "ms" ];
    jQuery.fn.extend({
        css: function(name, value) {
            return jQuery.access(this, function(elem, name, value) {
                var len, styles, map = {}, i = 0;
                if (jQuery.isArray(name)) {
                    for (styles = getStyles(elem), len = name.length; len > i; i++) map[name[i]] = jQuery.css(elem, name[i], !1, styles);
                    return map;
                }
                return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name);
            }, name, value, arguments.length > 1);
        },
        show: function() {
            return showHide(this, !0);
        },
        hide: function() {
            return showHide(this);
        },
        toggle: function(state) {
            var bool = "boolean" == typeof state;
            return this.each(function() {
                (bool ? state : isHidden(this)) ? jQuery(this).show() : jQuery(this).hide();
            });
        }
    }), jQuery.extend({
        cssHooks: {
            opacity: {
                get: function(elem, computed) {
                    if (computed) {
                        var ret = curCSS(elem, "opacity");
                        return "" === ret ? "1" : ret;
                    }
                }
            }
        },
        cssNumber: {
            columnCount: !0,
            fillOpacity: !0,
            fontWeight: !0,
            lineHeight: !0,
            opacity: !0,
            orphans: !0,
            widows: !0,
            zIndex: !0,
            zoom: !0
        },
        cssProps: {
            "float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(elem, name, value, extra) {
            if (elem && 3 !== elem.nodeType && 8 !== elem.nodeType && elem.style) {
                var ret, type, hooks, origName = jQuery.camelCase(name), style = elem.style;
                if (name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(style, origName)), 
                hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName], value === undefined) return hooks && "get" in hooks && (ret = hooks.get(elem, !1, extra)) !== undefined ? ret : style[name];
                if (type = typeof value, "string" === type && (ret = rrelNum.exec(value)) && (value = (ret[1] + 1) * ret[2] + parseFloat(jQuery.css(elem, name)), 
                type = "number"), !(null == value || "number" === type && isNaN(value) || ("number" !== type || jQuery.cssNumber[origName] || (value += "px"), 
                jQuery.support.clearCloneStyle || "" !== value || 0 !== name.indexOf("background") || (style[name] = "inherit"), 
                hooks && "set" in hooks && (value = hooks.set(elem, value, extra)) === undefined))) try {
                    style[name] = value;
                } catch (e) {}
            }
        },
        css: function(elem, name, extra, styles) {
            var num, val, hooks, origName = jQuery.camelCase(name);
            return name = jQuery.cssProps[origName] || (jQuery.cssProps[origName] = vendorPropName(elem.style, origName)), 
            hooks = jQuery.cssHooks[name] || jQuery.cssHooks[origName], hooks && "get" in hooks && (val = hooks.get(elem, !0, extra)), 
            val === undefined && (val = curCSS(elem, name, styles)), "normal" === val && name in cssNormalTransform && (val = cssNormalTransform[name]), 
            "" === extra || extra ? (num = parseFloat(val), extra === !0 || jQuery.isNumeric(num) ? num || 0 : val) : val;
        },
        swap: function(elem, options, callback, args) {
            var ret, name, old = {};
            for (name in options) old[name] = elem.style[name], elem.style[name] = options[name];
            ret = callback.apply(elem, args || []);
            for (name in options) elem.style[name] = old[name];
            return ret;
        }
    }), window.getComputedStyle ? (getStyles = function(elem) {
        return window.getComputedStyle(elem, null);
    }, curCSS = function(elem, name, _computed) {
        var width, minWidth, maxWidth, computed = _computed || getStyles(elem), ret = computed ? computed.getPropertyValue(name) || computed[name] : undefined, style = elem.style;
        return computed && ("" !== ret || jQuery.contains(elem.ownerDocument, elem) || (ret = jQuery.style(elem, name)), 
        rnumnonpx.test(ret) && rmargin.test(name) && (width = style.width, minWidth = style.minWidth, 
        maxWidth = style.maxWidth, style.minWidth = style.maxWidth = style.width = ret, 
        ret = computed.width, style.width = width, style.minWidth = minWidth, style.maxWidth = maxWidth)), 
        ret;
    }) : document.documentElement.currentStyle && (getStyles = function(elem) {
        return elem.currentStyle;
    }, curCSS = function(elem, name, _computed) {
        var left, rs, rsLeft, computed = _computed || getStyles(elem), ret = computed ? computed[name] : undefined, style = elem.style;
        return null == ret && style && style[name] && (ret = style[name]), rnumnonpx.test(ret) && !rposition.test(name) && (left = style.left, 
        rs = elem.runtimeStyle, rsLeft = rs && rs.left, rsLeft && (rs.left = elem.currentStyle.left), 
        style.left = "fontSize" === name ? "1em" : ret, ret = style.pixelLeft + "px", style.left = left, 
        rsLeft && (rs.left = rsLeft)), "" === ret ? "auto" : ret;
    }), jQuery.each([ "height", "width" ], function(i, name) {
        jQuery.cssHooks[name] = {
            get: function(elem, computed, extra) {
                return computed ? 0 === elem.offsetWidth && rdisplayswap.test(jQuery.css(elem, "display")) ? jQuery.swap(elem, cssShow, function() {
                    return getWidthOrHeight(elem, name, extra);
                }) : getWidthOrHeight(elem, name, extra) : void 0;
            },
            set: function(elem, value, extra) {
                var styles = extra && getStyles(elem);
                return setPositiveNumber(elem, value, extra ? augmentWidthOrHeight(elem, name, extra, jQuery.support.boxSizing && "border-box" === jQuery.css(elem, "boxSizing", !1, styles), styles) : 0);
            }
        };
    }), jQuery.support.opacity || (jQuery.cssHooks.opacity = {
        get: function(elem, computed) {
            return ropacity.test((computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "") ? .01 * parseFloat(RegExp.$1) + "" : computed ? "1" : "";
        },
        set: function(elem, value) {
            var style = elem.style, currentStyle = elem.currentStyle, opacity = jQuery.isNumeric(value) ? "alpha(opacity=" + 100 * value + ")" : "", filter = currentStyle && currentStyle.filter || style.filter || "";
            style.zoom = 1, (value >= 1 || "" === value) && "" === jQuery.trim(filter.replace(ralpha, "")) && style.removeAttribute && (style.removeAttribute("filter"), 
            "" === value || currentStyle && !currentStyle.filter) || (style.filter = ralpha.test(filter) ? filter.replace(ralpha, opacity) : filter + " " + opacity);
        }
    }), jQuery(function() {
        jQuery.support.reliableMarginRight || (jQuery.cssHooks.marginRight = {
            get: function(elem, computed) {
                return computed ? jQuery.swap(elem, {
                    display: "inline-block"
                }, curCSS, [ elem, "marginRight" ]) : void 0;
            }
        }), !jQuery.support.pixelPosition && jQuery.fn.position && jQuery.each([ "top", "left" ], function(i, prop) {
            jQuery.cssHooks[prop] = {
                get: function(elem, computed) {
                    return computed ? (computed = curCSS(elem, prop), rnumnonpx.test(computed) ? jQuery(elem).position()[prop] + "px" : computed) : void 0;
                }
            };
        });
    }), jQuery.expr && jQuery.expr.filters && (jQuery.expr.filters.hidden = function(elem) {
        return elem.offsetWidth <= 0 && elem.offsetHeight <= 0 || !jQuery.support.reliableHiddenOffsets && "none" === (elem.style && elem.style.display || jQuery.css(elem, "display"));
    }, jQuery.expr.filters.visible = function(elem) {
        return !jQuery.expr.filters.hidden(elem);
    }), jQuery.each({
        margin: "",
        padding: "",
        border: "Width"
    }, function(prefix, suffix) {
        jQuery.cssHooks[prefix + suffix] = {
            expand: function(value) {
                for (var i = 0, expanded = {}, parts = "string" == typeof value ? value.split(" ") : [ value ]; 4 > i; i++) expanded[prefix + cssExpand[i] + suffix] = parts[i] || parts[i - 2] || parts[0];
                return expanded;
            }
        }, rmargin.test(prefix) || (jQuery.cssHooks[prefix + suffix].set = setPositiveNumber);
    });
    var r20 = /%20/g, rbracket = /\[\]$/, rCRLF = /\r?\n/g, rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i, rsubmittable = /^(?:input|select|textarea|keygen)/i;
    jQuery.fn.extend({
        serialize: function() {
            return jQuery.param(this.serializeArray());
        },
        serializeArray: function() {
            return this.map(function() {
                var elements = jQuery.prop(this, "elements");
                return elements ? jQuery.makeArray(elements) : this;
            }).filter(function() {
                var type = this.type;
                return this.name && !jQuery(this).is(":disabled") && rsubmittable.test(this.nodeName) && !rsubmitterTypes.test(type) && (this.checked || !manipulation_rcheckableType.test(type));
            }).map(function(i, elem) {
                var val = jQuery(this).val();
                return null == val ? null : jQuery.isArray(val) ? jQuery.map(val, function(val) {
                    return {
                        name: elem.name,
                        value: val.replace(rCRLF, "\r\n")
                    };
                }) : {
                    name: elem.name,
                    value: val.replace(rCRLF, "\r\n")
                };
            }).get();
        }
    }), jQuery.param = function(a, traditional) {
        var prefix, s = [], add = function(key, value) {
            value = jQuery.isFunction(value) ? value() : null == value ? "" : value, s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value);
        };
        if (traditional === undefined && (traditional = jQuery.ajaxSettings && jQuery.ajaxSettings.traditional), 
        jQuery.isArray(a) || a.jquery && !jQuery.isPlainObject(a)) jQuery.each(a, function() {
            add(this.name, this.value);
        }); else for (prefix in a) buildParams(prefix, a[prefix], traditional, add);
        return s.join("&").replace(r20, "+");
    }, jQuery.each("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error contextmenu".split(" "), function(i, name) {
        jQuery.fn[name] = function(data, fn) {
            return arguments.length > 0 ? this.on(name, null, data, fn) : this.trigger(name);
        };
    }), jQuery.fn.hover = function(fnOver, fnOut) {
        return this.mouseenter(fnOver).mouseleave(fnOut || fnOver);
    };
    var ajaxLocParts, ajaxLocation, ajax_nonce = jQuery.now(), ajax_rquery = /\?/, rhash = /#.*$/, rts = /([?&])_=[^&]*/, rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/gm, rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/, rnoContent = /^(?:GET|HEAD)$/, rprotocol = /^\/\//, rurl = /^([\w.+-]+:)(?:\/\/([^\/?#:]*)(?::(\d+)|)|)/, _load = jQuery.fn.load, prefilters = {}, transports = {}, allTypes = "*/".concat("*");
    try {
        ajaxLocation = location.href;
    } catch (e) {
        ajaxLocation = document.createElement("a"), ajaxLocation.href = "", ajaxLocation = ajaxLocation.href;
    }
    ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [], jQuery.fn.load = function(url, params, callback) {
        if ("string" != typeof url && _load) return _load.apply(this, arguments);
        var selector, response, type, self = this, off = url.indexOf(" ");
        return off >= 0 && (selector = url.slice(off, url.length), url = url.slice(0, off)), 
        jQuery.isFunction(params) ? (callback = params, params = undefined) : params && "object" == typeof params && (type = "POST"), 
        self.length > 0 && jQuery.ajax({
            url: url,
            type: type,
            dataType: "html",
            data: params
        }).done(function(responseText) {
            response = arguments, self.html(selector ? jQuery("<div>").append(jQuery.parseHTML(responseText)).find(selector) : responseText);
        }).complete(callback && function(jqXHR, status) {
            self.each(callback, response || [ jqXHR.responseText, status, jqXHR ]);
        }), this;
    }, jQuery.each([ "ajaxStart", "ajaxStop", "ajaxComplete", "ajaxError", "ajaxSuccess", "ajaxSend" ], function(i, type) {
        jQuery.fn[type] = function(fn) {
            return this.on(type, fn);
        };
    }), jQuery.each([ "get", "post" ], function(i, method) {
        jQuery[method] = function(url, data, callback, type) {
            return jQuery.isFunction(data) && (type = type || callback, callback = data, data = undefined), 
            jQuery.ajax({
                url: url,
                type: method,
                dataType: type,
                data: data,
                success: callback
            });
        };
    }), jQuery.extend({
        active: 0,
        lastModified: {},
        etag: {},
        ajaxSettings: {
            url: ajaxLocation,
            type: "GET",
            isLocal: rlocalProtocol.test(ajaxLocParts[1]),
            global: !0,
            processData: !0,
            async: !0,
            contentType: "application/x-www-form-urlencoded; charset=UTF-8",
            accepts: {
                "*": allTypes,
                text: "text/plain",
                html: "text/html",
                xml: "application/xml, text/xml",
                json: "application/json, text/javascript"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": window.String,
                "text html": !0,
                "text json": jQuery.parseJSON,
                "text xml": jQuery.parseXML
            },
            flatOptions: {
                url: !0,
                context: !0
            }
        },
        ajaxSetup: function(target, settings) {
            return settings ? ajaxExtend(ajaxExtend(target, jQuery.ajaxSettings), settings) : ajaxExtend(jQuery.ajaxSettings, target);
        },
        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
        ajaxTransport: addToPrefiltersOrTransports(transports),
        ajax: function(url, options) {
            function done(status, nativeStatusText, responses, headers) {
                var isSuccess, success, error, response, modified, statusText = nativeStatusText;
                2 !== state && (state = 2, timeoutTimer && clearTimeout(timeoutTimer), transport = undefined, 
                responseHeadersString = headers || "", jqXHR.readyState = status > 0 ? 4 : 0, responses && (response = ajaxHandleResponses(s, jqXHR, responses)), 
                status >= 200 && 300 > status || 304 === status ? (s.ifModified && (modified = jqXHR.getResponseHeader("Last-Modified"), 
                modified && (jQuery.lastModified[cacheURL] = modified), modified = jqXHR.getResponseHeader("etag"), 
                modified && (jQuery.etag[cacheURL] = modified)), 204 === status ? (isSuccess = !0, 
                statusText = "nocontent") : 304 === status ? (isSuccess = !0, statusText = "notmodified") : (isSuccess = ajaxConvert(s, response), 
                statusText = isSuccess.state, success = isSuccess.data, error = isSuccess.error, 
                isSuccess = !error)) : (error = statusText, (status || !statusText) && (statusText = "error", 
                0 > status && (status = 0))), jqXHR.status = status, jqXHR.statusText = (nativeStatusText || statusText) + "", 
                isSuccess ? deferred.resolveWith(callbackContext, [ success, statusText, jqXHR ]) : deferred.rejectWith(callbackContext, [ jqXHR, statusText, error ]), 
                jqXHR.statusCode(statusCode), statusCode = undefined, fireGlobals && globalEventContext.trigger(isSuccess ? "ajaxSuccess" : "ajaxError", [ jqXHR, s, isSuccess ? success : error ]), 
                completeDeferred.fireWith(callbackContext, [ jqXHR, statusText ]), fireGlobals && (globalEventContext.trigger("ajaxComplete", [ jqXHR, s ]), 
                --jQuery.active || jQuery.event.trigger("ajaxStop")));
            }
            "object" == typeof url && (options = url, url = undefined), options = options || {};
            var parts, i, cacheURL, responseHeadersString, timeoutTimer, fireGlobals, transport, responseHeaders, s = jQuery.ajaxSetup({}, options), callbackContext = s.context || s, globalEventContext = s.context && (callbackContext.nodeType || callbackContext.jquery) ? jQuery(callbackContext) : jQuery.event, deferred = jQuery.Deferred(), completeDeferred = jQuery.Callbacks("once memory"), statusCode = s.statusCode || {}, requestHeaders = {}, requestHeadersNames = {}, state = 0, strAbort = "canceled", jqXHR = {
                readyState: 0,
                getResponseHeader: function(key) {
                    var match;
                    if (2 === state) {
                        if (!responseHeaders) for (responseHeaders = {}; match = rheaders.exec(responseHeadersString); ) responseHeaders[match[1].toLowerCase()] = match[2];
                        match = responseHeaders[key.toLowerCase()];
                    }
                    return null == match ? null : match;
                },
                getAllResponseHeaders: function() {
                    return 2 === state ? responseHeadersString : null;
                },
                setRequestHeader: function(name, value) {
                    var lname = name.toLowerCase();
                    return state || (name = requestHeadersNames[lname] = requestHeadersNames[lname] || name, 
                    requestHeaders[name] = value), this;
                },
                overrideMimeType: function(type) {
                    return state || (s.mimeType = type), this;
                },
                statusCode: function(map) {
                    var code;
                    if (map) if (2 > state) for (code in map) statusCode[code] = [ statusCode[code], map[code] ]; else jqXHR.always(map[jqXHR.status]);
                    return this;
                },
                abort: function(statusText) {
                    var finalText = statusText || strAbort;
                    return transport && transport.abort(finalText), done(0, finalText), this;
                }
            };
            if (deferred.promise(jqXHR).complete = completeDeferred.add, jqXHR.success = jqXHR.done, 
            jqXHR.error = jqXHR.fail, s.url = ((url || s.url || ajaxLocation) + "").replace(rhash, "").replace(rprotocol, ajaxLocParts[1] + "//"), 
            s.type = options.method || options.type || s.method || s.type, s.dataTypes = jQuery.trim(s.dataType || "*").toLowerCase().match(core_rnotwhite) || [ "" ], 
            null == s.crossDomain && (parts = rurl.exec(s.url.toLowerCase()), s.crossDomain = !(!parts || parts[1] === ajaxLocParts[1] && parts[2] === ajaxLocParts[2] && (parts[3] || ("http:" === parts[1] ? 80 : 443)) == (ajaxLocParts[3] || ("http:" === ajaxLocParts[1] ? 80 : 443)))), 
            s.data && s.processData && "string" != typeof s.data && (s.data = jQuery.param(s.data, s.traditional)), 
            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR), 2 === state) return jqXHR;
            fireGlobals = s.global, fireGlobals && 0 === jQuery.active++ && jQuery.event.trigger("ajaxStart"), 
            s.type = s.type.toUpperCase(), s.hasContent = !rnoContent.test(s.type), cacheURL = s.url, 
            s.hasContent || (s.data && (cacheURL = s.url += (ajax_rquery.test(cacheURL) ? "&" : "?") + s.data, 
            delete s.data), s.cache === !1 && (s.url = rts.test(cacheURL) ? cacheURL.replace(rts, "$1_=" + ajax_nonce++) : cacheURL + (ajax_rquery.test(cacheURL) ? "&" : "?") + "_=" + ajax_nonce++)), 
            s.ifModified && (jQuery.lastModified[cacheURL] && jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[cacheURL]), 
            jQuery.etag[cacheURL] && jqXHR.setRequestHeader("If-None-Match", jQuery.etag[cacheURL])), 
            (s.data && s.hasContent && s.contentType !== !1 || options.contentType) && jqXHR.setRequestHeader("Content-Type", s.contentType), 
            jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + ("*" !== s.dataTypes[0] ? ", " + allTypes + "; q=0.01" : "") : s.accepts["*"]);
            for (i in s.headers) jqXHR.setRequestHeader(i, s.headers[i]);
            if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === !1 || 2 === state)) return jqXHR.abort();
            strAbort = "abort";
            for (i in {
                success: 1,
                error: 1,
                complete: 1
            }) jqXHR[i](s[i]);
            if (transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR)) {
                jqXHR.readyState = 1, fireGlobals && globalEventContext.trigger("ajaxSend", [ jqXHR, s ]), 
                s.async && s.timeout > 0 && (timeoutTimer = setTimeout(function() {
                    jqXHR.abort("timeout");
                }, s.timeout));
                try {
                    state = 1, transport.send(requestHeaders, done);
                } catch (e) {
                    if (!(2 > state)) throw e;
                    done(-1, e);
                }
            } else done(-1, "No Transport");
            return jqXHR;
        },
        getScript: function(url, callback) {
            return jQuery.get(url, undefined, callback, "script");
        },
        getJSON: function(url, data, callback) {
            return jQuery.get(url, data, callback, "json");
        }
    }), jQuery.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /(?:java|ecma)script/
        },
        converters: {
            "text script": function(text) {
                return jQuery.globalEval(text), text;
            }
        }
    }), jQuery.ajaxPrefilter("script", function(s) {
        s.cache === undefined && (s.cache = !1), s.crossDomain && (s.type = "GET", s.global = !1);
    }), jQuery.ajaxTransport("script", function(s) {
        if (s.crossDomain) {
            var script, head = document.head || jQuery("head")[0] || document.documentElement;
            return {
                send: function(_, callback) {
                    script = document.createElement("script"), script.async = !0, s.scriptCharset && (script.charset = s.scriptCharset), 
                    script.src = s.url, script.onload = script.onreadystatechange = function(_, isAbort) {
                        (isAbort || !script.readyState || /loaded|complete/.test(script.readyState)) && (script.onload = script.onreadystatechange = null, 
                        script.parentNode && script.parentNode.removeChild(script), script = null, isAbort || callback(200, "success"));
                    }, head.insertBefore(script, head.firstChild);
                },
                abort: function() {
                    script && script.onload(undefined, !0);
                }
            };
        }
    });
    var oldCallbacks = [], rjsonp = /(=)\?(?=&|$)|\?\?/;
    jQuery.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            var callback = oldCallbacks.pop() || jQuery.expando + "_" + ajax_nonce++;
            return this[callback] = !0, callback;
        }
    }), jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
        var callbackName, overwritten, responseContainer, jsonProp = s.jsonp !== !1 && (rjsonp.test(s.url) ? "url" : "string" == typeof s.data && !(s.contentType || "").indexOf("application/x-www-form-urlencoded") && rjsonp.test(s.data) && "data");
        return jsonProp || "jsonp" === s.dataTypes[0] ? (callbackName = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback, 
        jsonProp ? s[jsonProp] = s[jsonProp].replace(rjsonp, "$1" + callbackName) : s.jsonp !== !1 && (s.url += (ajax_rquery.test(s.url) ? "&" : "?") + s.jsonp + "=" + callbackName), 
        s.converters["script json"] = function() {
            return responseContainer || jQuery.error(callbackName + " was not called"), responseContainer[0];
        }, s.dataTypes[0] = "json", overwritten = window[callbackName], window[callbackName] = function() {
            responseContainer = arguments;
        }, jqXHR.always(function() {
            window[callbackName] = overwritten, s[callbackName] && (s.jsonpCallback = originalSettings.jsonpCallback, 
            oldCallbacks.push(callbackName)), responseContainer && jQuery.isFunction(overwritten) && overwritten(responseContainer[0]), 
            responseContainer = overwritten = undefined;
        }), "script") : void 0;
    });
    var xhrCallbacks, xhrSupported, xhrId = 0, xhrOnUnloadAbort = window.ActiveXObject && function() {
        var key;
        for (key in xhrCallbacks) xhrCallbacks[key](undefined, !0);
    };
    jQuery.ajaxSettings.xhr = window.ActiveXObject ? function() {
        return !this.isLocal && createStandardXHR() || createActiveXHR();
    } : createStandardXHR, xhrSupported = jQuery.ajaxSettings.xhr(), jQuery.support.cors = !!xhrSupported && "withCredentials" in xhrSupported, 
    xhrSupported = jQuery.support.ajax = !!xhrSupported, xhrSupported && jQuery.ajaxTransport(function(s) {
        if (!s.crossDomain || jQuery.support.cors) {
            var callback;
            return {
                send: function(headers, complete) {
                    var handle, i, xhr = s.xhr();
                    if (s.username ? xhr.open(s.type, s.url, s.async, s.username, s.password) : xhr.open(s.type, s.url, s.async), 
                    s.xhrFields) for (i in s.xhrFields) xhr[i] = s.xhrFields[i];
                    s.mimeType && xhr.overrideMimeType && xhr.overrideMimeType(s.mimeType), s.crossDomain || headers["X-Requested-With"] || (headers["X-Requested-With"] = "XMLHttpRequest");
                    try {
                        for (i in headers) xhr.setRequestHeader(i, headers[i]);
                    } catch (err) {}
                    xhr.send(s.hasContent && s.data || null), callback = function(_, isAbort) {
                        var status, responseHeaders, statusText, responses;
                        try {
                            if (callback && (isAbort || 4 === xhr.readyState)) if (callback = undefined, handle && (xhr.onreadystatechange = jQuery.noop, 
                            xhrOnUnloadAbort && delete xhrCallbacks[handle]), isAbort) 4 !== xhr.readyState && xhr.abort(); else {
                                responses = {}, status = xhr.status, responseHeaders = xhr.getAllResponseHeaders(), 
                                "string" == typeof xhr.responseText && (responses.text = xhr.responseText);
                                try {
                                    statusText = xhr.statusText;
                                } catch (e) {
                                    statusText = "";
                                }
                                status || !s.isLocal || s.crossDomain ? 1223 === status && (status = 204) : status = responses.text ? 200 : 404;
                            }
                        } catch (firefoxAccessException) {
                            isAbort || complete(-1, firefoxAccessException);
                        }
                        responses && complete(status, statusText, responses, responseHeaders);
                    }, s.async ? 4 === xhr.readyState ? setTimeout(callback) : (handle = ++xhrId, xhrOnUnloadAbort && (xhrCallbacks || (xhrCallbacks = {}, 
                    jQuery(window).unload(xhrOnUnloadAbort)), xhrCallbacks[handle] = callback), xhr.onreadystatechange = callback) : callback();
                },
                abort: function() {
                    callback && callback(undefined, !0);
                }
            };
        }
    });
    var fxNow, timerId, rfxtypes = /^(?:toggle|show|hide)$/, rfxnum = new RegExp("^(?:([+-])=|)(" + core_pnum + ")([a-z%]*)$", "i"), rrun = /queueHooks$/, animationPrefilters = [ defaultPrefilter ], tweeners = {
        "*": [ function(prop, value) {
            var end, unit, tween = this.createTween(prop, value), parts = rfxnum.exec(value), target = tween.cur(), start = +target || 0, scale = 1, maxIterations = 20;
            if (parts) {
                if (end = +parts[2], unit = parts[3] || (jQuery.cssNumber[prop] ? "" : "px"), "px" !== unit && start) {
                    start = jQuery.css(tween.elem, prop, !0) || end || 1;
                    do scale = scale || ".5", start /= scale, jQuery.style(tween.elem, prop, start + unit); while (scale !== (scale = tween.cur() / target) && 1 !== scale && --maxIterations);
                }
                tween.unit = unit, tween.start = start, tween.end = parts[1] ? start + (parts[1] + 1) * end : end;
            }
            return tween;
        } ]
    };
    jQuery.Animation = jQuery.extend(Animation, {
        tweener: function(props, callback) {
            jQuery.isFunction(props) ? (callback = props, props = [ "*" ]) : props = props.split(" ");
            for (var prop, index = 0, length = props.length; length > index; index++) prop = props[index], 
            tweeners[prop] = tweeners[prop] || [], tweeners[prop].unshift(callback);
        },
        prefilter: function(callback, prepend) {
            prepend ? animationPrefilters.unshift(callback) : animationPrefilters.push(callback);
        }
    }), jQuery.Tween = Tween, Tween.prototype = {
        constructor: Tween,
        init: function(elem, options, prop, end, easing, unit) {
            this.elem = elem, this.prop = prop, this.easing = easing || "swing", this.options = options, 
            this.start = this.now = this.cur(), this.end = end, this.unit = unit || (jQuery.cssNumber[prop] ? "" : "px");
        },
        cur: function() {
            var hooks = Tween.propHooks[this.prop];
            return hooks && hooks.get ? hooks.get(this) : Tween.propHooks._default.get(this);
        },
        run: function(percent) {
            var eased, hooks = Tween.propHooks[this.prop];
            return this.pos = eased = this.options.duration ? jQuery.easing[this.easing](percent, this.options.duration * percent, 0, 1, this.options.duration) : percent, 
            this.now = (this.end - this.start) * eased + this.start, this.options.step && this.options.step.call(this.elem, this.now, this), 
            hooks && hooks.set ? hooks.set(this) : Tween.propHooks._default.set(this), this;
        }
    }, Tween.prototype.init.prototype = Tween.prototype, Tween.propHooks = {
        _default: {
            get: function(tween) {
                var result;
                return null == tween.elem[tween.prop] || tween.elem.style && null != tween.elem.style[tween.prop] ? (result = jQuery.css(tween.elem, tween.prop, ""), 
                result && "auto" !== result ? result : 0) : tween.elem[tween.prop];
            },
            set: function(tween) {
                jQuery.fx.step[tween.prop] ? jQuery.fx.step[tween.prop](tween) : tween.elem.style && (null != tween.elem.style[jQuery.cssProps[tween.prop]] || jQuery.cssHooks[tween.prop]) ? jQuery.style(tween.elem, tween.prop, tween.now + tween.unit) : tween.elem[tween.prop] = tween.now;
            }
        }
    }, Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
        set: function(tween) {
            tween.elem.nodeType && tween.elem.parentNode && (tween.elem[tween.prop] = tween.now);
        }
    }, jQuery.each([ "toggle", "show", "hide" ], function(i, name) {
        var cssFn = jQuery.fn[name];
        jQuery.fn[name] = function(speed, easing, callback) {
            return null == speed || "boolean" == typeof speed ? cssFn.apply(this, arguments) : this.animate(genFx(name, !0), speed, easing, callback);
        };
    }), jQuery.fn.extend({
        fadeTo: function(speed, to, easing, callback) {
            return this.filter(isHidden).css("opacity", 0).show().end().animate({
                opacity: to
            }, speed, easing, callback);
        },
        animate: function(prop, speed, easing, callback) {
            var empty = jQuery.isEmptyObject(prop), optall = jQuery.speed(speed, easing, callback), doAnimation = function() {
                var anim = Animation(this, jQuery.extend({}, prop), optall);
                doAnimation.finish = function() {
                    anim.stop(!0);
                }, (empty || jQuery._data(this, "finish")) && anim.stop(!0);
            };
            return doAnimation.finish = doAnimation, empty || optall.queue === !1 ? this.each(doAnimation) : this.queue(optall.queue, doAnimation);
        },
        stop: function(type, clearQueue, gotoEnd) {
            var stopQueue = function(hooks) {
                var stop = hooks.stop;
                delete hooks.stop, stop(gotoEnd);
            };
            return "string" != typeof type && (gotoEnd = clearQueue, clearQueue = type, type = undefined), 
            clearQueue && type !== !1 && this.queue(type || "fx", []), this.each(function() {
                var dequeue = !0, index = null != type && type + "queueHooks", timers = jQuery.timers, data = jQuery._data(this);
                if (index) data[index] && data[index].stop && stopQueue(data[index]); else for (index in data) data[index] && data[index].stop && rrun.test(index) && stopQueue(data[index]);
                for (index = timers.length; index--; ) timers[index].elem !== this || null != type && timers[index].queue !== type || (timers[index].anim.stop(gotoEnd), 
                dequeue = !1, timers.splice(index, 1));
                (dequeue || !gotoEnd) && jQuery.dequeue(this, type);
            });
        },
        finish: function(type) {
            return type !== !1 && (type = type || "fx"), this.each(function() {
                var index, data = jQuery._data(this), queue = data[type + "queue"], hooks = data[type + "queueHooks"], timers = jQuery.timers, length = queue ? queue.length : 0;
                for (data.finish = !0, jQuery.queue(this, type, []), hooks && hooks.cur && hooks.cur.finish && hooks.cur.finish.call(this), 
                index = timers.length; index--; ) timers[index].elem === this && timers[index].queue === type && (timers[index].anim.stop(!0), 
                timers.splice(index, 1));
                for (index = 0; length > index; index++) queue[index] && queue[index].finish && queue[index].finish.call(this);
                delete data.finish;
            });
        }
    }), jQuery.each({
        slideDown: genFx("show"),
        slideUp: genFx("hide"),
        slideToggle: genFx("toggle"),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(name, props) {
        jQuery.fn[name] = function(speed, easing, callback) {
            return this.animate(props, speed, easing, callback);
        };
    }), jQuery.speed = function(speed, easing, fn) {
        var opt = speed && "object" == typeof speed ? jQuery.extend({}, speed) : {
            complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
            duration: speed,
            easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
        };
        return opt.duration = jQuery.fx.off ? 0 : "number" == typeof opt.duration ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default, 
        (null == opt.queue || opt.queue === !0) && (opt.queue = "fx"), opt.old = opt.complete, 
        opt.complete = function() {
            jQuery.isFunction(opt.old) && opt.old.call(this), opt.queue && jQuery.dequeue(this, opt.queue);
        }, opt;
    }, jQuery.easing = {
        linear: function(p) {
            return p;
        },
        swing: function(p) {
            return .5 - Math.cos(p * Math.PI) / 2;
        }
    }, jQuery.timers = [], jQuery.fx = Tween.prototype.init, jQuery.fx.tick = function() {
        var timer, timers = jQuery.timers, i = 0;
        for (fxNow = jQuery.now(); i < timers.length; i++) timer = timers[i], timer() || timers[i] !== timer || timers.splice(i--, 1);
        timers.length || jQuery.fx.stop(), fxNow = undefined;
    }, jQuery.fx.timer = function(timer) {
        timer() && jQuery.timers.push(timer) && jQuery.fx.start();
    }, jQuery.fx.interval = 13, jQuery.fx.start = function() {
        timerId || (timerId = setInterval(jQuery.fx.tick, jQuery.fx.interval));
    }, jQuery.fx.stop = function() {
        clearInterval(timerId), timerId = null;
    }, jQuery.fx.speeds = {
        slow: 600,
        fast: 200,
        _default: 400
    }, jQuery.fx.step = {}, jQuery.expr && jQuery.expr.filters && (jQuery.expr.filters.animated = function(elem) {
        return jQuery.grep(jQuery.timers, function(fn) {
            return elem === fn.elem;
        }).length;
    }), jQuery.fn.offset = function(options) {
        if (arguments.length) return options === undefined ? this : this.each(function(i) {
            jQuery.offset.setOffset(this, options, i);
        });
        var docElem, win, box = {
            top: 0,
            left: 0
        }, elem = this[0], doc = elem && elem.ownerDocument;
        if (doc) return docElem = doc.documentElement, jQuery.contains(docElem, elem) ? (typeof elem.getBoundingClientRect !== core_strundefined && (box = elem.getBoundingClientRect()), 
        win = getWindow(doc), {
            top: box.top + (win.pageYOffset || docElem.scrollTop) - (docElem.clientTop || 0),
            left: box.left + (win.pageXOffset || docElem.scrollLeft) - (docElem.clientLeft || 0)
        }) : box;
    }, jQuery.offset = {
        setOffset: function(elem, options, i) {
            var position = jQuery.css(elem, "position");
            "static" === position && (elem.style.position = "relative");
            var curTop, curLeft, curElem = jQuery(elem), curOffset = curElem.offset(), curCSSTop = jQuery.css(elem, "top"), curCSSLeft = jQuery.css(elem, "left"), calculatePosition = ("absolute" === position || "fixed" === position) && jQuery.inArray("auto", [ curCSSTop, curCSSLeft ]) > -1, props = {}, curPosition = {};
            calculatePosition ? (curPosition = curElem.position(), curTop = curPosition.top, 
            curLeft = curPosition.left) : (curTop = parseFloat(curCSSTop) || 0, curLeft = parseFloat(curCSSLeft) || 0), 
            jQuery.isFunction(options) && (options = options.call(elem, i, curOffset)), null != options.top && (props.top = options.top - curOffset.top + curTop), 
            null != options.left && (props.left = options.left - curOffset.left + curLeft), 
            "using" in options ? options.using.call(elem, props) : curElem.css(props);
        }
    }, jQuery.fn.extend({
        position: function() {
            if (this[0]) {
                var offsetParent, offset, parentOffset = {
                    top: 0,
                    left: 0
                }, elem = this[0];
                return "fixed" === jQuery.css(elem, "position") ? offset = elem.getBoundingClientRect() : (offsetParent = this.offsetParent(), 
                offset = this.offset(), jQuery.nodeName(offsetParent[0], "html") || (parentOffset = offsetParent.offset()), 
                parentOffset.top += jQuery.css(offsetParent[0], "borderTopWidth", !0), parentOffset.left += jQuery.css(offsetParent[0], "borderLeftWidth", !0)), 
                {
                    top: offset.top - parentOffset.top - jQuery.css(elem, "marginTop", !0),
                    left: offset.left - parentOffset.left - jQuery.css(elem, "marginLeft", !0)
                };
            }
        },
        offsetParent: function() {
            return this.map(function() {
                for (var offsetParent = this.offsetParent || document.documentElement; offsetParent && !jQuery.nodeName(offsetParent, "html") && "static" === jQuery.css(offsetParent, "position"); ) offsetParent = offsetParent.offsetParent;
                return offsetParent || document.documentElement;
            });
        }
    }), jQuery.each({
        scrollLeft: "pageXOffset",
        scrollTop: "pageYOffset"
    }, function(method, prop) {
        var top = /Y/.test(prop);
        jQuery.fn[method] = function(val) {
            return jQuery.access(this, function(elem, method, val) {
                var win = getWindow(elem);
                return val === undefined ? win ? prop in win ? win[prop] : win.document.documentElement[method] : elem[method] : void (win ? win.scrollTo(top ? jQuery(win).scrollLeft() : val, top ? val : jQuery(win).scrollTop()) : elem[method] = val);
            }, method, val, arguments.length, null);
        };
    }), jQuery.each({
        Height: "height",
        Width: "width"
    }, function(name, type) {
        jQuery.each({
            padding: "inner" + name,
            content: type,
            "": "outer" + name
        }, function(defaultExtra, funcName) {
            jQuery.fn[funcName] = function(margin, value) {
                var chainable = arguments.length && (defaultExtra || "boolean" != typeof margin), extra = defaultExtra || (margin === !0 || value === !0 ? "margin" : "border");
                return jQuery.access(this, function(elem, type, value) {
                    var doc;
                    return jQuery.isWindow(elem) ? elem.document.documentElement["client" + name] : 9 === elem.nodeType ? (doc = elem.documentElement, 
                    Math.max(elem.body["scroll" + name], doc["scroll" + name], elem.body["offset" + name], doc["offset" + name], doc["client" + name])) : value === undefined ? jQuery.css(elem, type, extra) : jQuery.style(elem, type, value, extra);
                }, type, chainable ? margin : undefined, chainable, null);
            };
        });
    }), window.jQuery = window.$ = jQuery, "function" == typeof define && define.amd && define.amd.jQuery && define("jquery", [], function() {
        return jQuery;
    });
}(window), function(global) {
    function PxLoader(settings) {
        settings = settings || {}, this.settings = settings, null == settings.statusInterval && (settings.statusInterval = 5e3), 
        null == settings.loggingDelay && (settings.loggingDelay = 2e4), null == settings.noProgressTimeout && (settings.noProgressTimeout = 1/0);
        var timeStarted, entries = [], progressListeners = [], progressChanged = Date.now(), ResourceState = {
            QUEUED: 0,
            WAITING: 1,
            LOADED: 2,
            ERROR: 3,
            TIMEOUT: 4
        }, ensureArray = function(val) {
            return null == val ? [] : Array.isArray(val) ? val : [ val ];
        };
        this.add = function(resource) {
            resource.tags = new PxLoaderTags(resource.tags), null == resource.priority && (resource.priority = 1/0), 
            entries.push({
                resource: resource,
                status: ResourceState.QUEUED
            });
        }, this.addProgressListener = function(callback, tags) {
            progressListeners.push({
                callback: callback,
                tags: new PxLoaderTags(tags)
            });
        }, this.addCompletionListener = function(callback, tags) {
            progressListeners.push({
                tags: new PxLoaderTags(tags),
                callback: function(e) {
                    e.completedCount === e.totalCount && callback(e);
                }
            });
        };
        var getResourceSort = function(orderedTags) {
            orderedTags = ensureArray(orderedTags);
            var getTagOrder = function(entry) {
                for (var resource = entry.resource, bestIndex = 1/0, i = 0; i < resource.tags.length; i++) for (var j = 0; j < Math.min(orderedTags.length, bestIndex) && !(resource.tags.all[i] === orderedTags[j] && bestIndex > j && (bestIndex = j, 
                0 === bestIndex)) && 0 !== bestIndex; j++) ;
                return bestIndex;
            };
            return function(a, b) {
                var aOrder = getTagOrder(a), bOrder = getTagOrder(b);
                return bOrder > aOrder ? -1 : aOrder > bOrder ? 1 : a.priority < b.priority ? -1 : a.priority > b.priority ? 1 : 0;
            };
        };
        this.start = function(orderedTags) {
            timeStarted = Date.now();
            var compareResources = getResourceSort(orderedTags);
            entries.sort(compareResources);
            for (var i = 0, len = entries.length; len > i; i++) {
                var entry = entries[i];
                entry.status = ResourceState.WAITING, entry.resource.start(this);
            }
            setTimeout(statusCheck, 100);
        };
        var statusCheck = function() {
            for (var checkAgain = !1, noProgressTime = Date.now() - progressChanged, timedOut = noProgressTime >= settings.noProgressTimeout, shouldLog = noProgressTime >= settings.loggingDelay, i = 0, len = entries.length; len > i; i++) {
                var entry = entries[i];
                entry.status === ResourceState.WAITING && (entry.resource.checkStatus && entry.resource.checkStatus(), 
                entry.status === ResourceState.WAITING && (timedOut ? entry.resource.onTimeout() : checkAgain = !0));
            }
            shouldLog && checkAgain && log(), checkAgain && setTimeout(statusCheck, settings.statusInterval);
        };
        this.isBusy = function() {
            for (var i = 0, len = entries.length; len > i; i++) if (entries[i].status === ResourceState.QUEUED || entries[i].status === ResourceState.WAITING) return !0;
            return !1;
        };
        var onProgress = function(resource, statusType) {
            var i, len, numResourceTags, listener, shouldCall, entry = null;
            for (i = 0, len = entries.length; len > i; i++) if (entries[i].resource === resource) {
                entry = entries[i];
                break;
            }
            if (null != entry && entry.status === ResourceState.WAITING) for (entry.status = statusType, 
            progressChanged = Date.now(), numResourceTags = resource.tags.length, i = 0, len = progressListeners.length; len > i; i++) listener = progressListeners[i], 
            shouldCall = 0 === listener.tags.length ? !0 : resource.tags.intersects(listener.tags), 
            shouldCall && sendProgress(entry, listener);
        };
        this.onLoad = function(resource) {
            onProgress(resource, ResourceState.LOADED);
        }, this.onError = function(resource) {
            onProgress(resource, ResourceState.ERROR);
        }, this.onTimeout = function(resource) {
            onProgress(resource, ResourceState.TIMEOUT);
        };
        var sendProgress = function(updatedEntry, listener) {
            var i, len, entry, includeResource, completed = 0, total = 0;
            for (i = 0, len = entries.length; len > i; i++) entry = entries[i], includeResource = !1, 
            includeResource = 0 === listener.tags.length ? !0 : entry.resource.tags.intersects(listener.tags), 
            includeResource && (total++, (entry.status === ResourceState.LOADED || entry.status === ResourceState.ERROR || entry.status === ResourceState.TIMEOUT) && completed++);
            listener.callback({
                resource: updatedEntry.resource,
                loaded: updatedEntry.status === ResourceState.LOADED,
                error: updatedEntry.status === ResourceState.ERROR,
                timeout: updatedEntry.status === ResourceState.TIMEOUT,
                completedCount: completed,
                totalCount: total
            });
        }, log = this.log = function(showAll) {
            if (window.console) {
                var elapsedSeconds = Math.round((Date.now() - timeStarted) / 1e3);
                window.console.log("PxLoader elapsed: " + elapsedSeconds + " sec");
                for (var i = 0, len = entries.length; len > i; i++) {
                    var entry = entries[i];
                    if (showAll || entry.status === ResourceState.WAITING) {
                        var message = "PxLoader: #" + i + " " + entry.resource.getName();
                        switch (entry.status) {
                          case ResourceState.QUEUED:
                            message += " (Not Started)";
                            break;

                          case ResourceState.WAITING:
                            message += " (Waiting)";
                            break;

                          case ResourceState.LOADED:
                            message += " (Loaded)";
                            break;

                          case ResourceState.ERROR:
                            message += " (Error)";
                            break;

                          case ResourceState.TIMEOUT:
                            message += " (Timeout)";
                        }
                        entry.resource.tags.length > 0 && (message += " Tags: [" + entry.resource.tags.all.join(",") + "]"), 
                        window.console.log(message);
                    }
                }
            }
        };
    }
    function PxLoaderTags(values) {
        if (this.all = [], this.first = null, this.length = 0, this.lookup = {}, values) {
            if (Array.isArray(values)) this.all = values.slice(0); else if ("object" == typeof values) for (var key in values) values.hasOwnProperty(key) && this.all.push(key); else this.all.push(values);
            this.length = this.all.length, this.length > 0 && (this.first = this.all[0]);
            for (var i = 0; i < this.length; i++) this.lookup[this.all[i]] = !0;
        }
    }
    PxLoaderTags.prototype.intersects = function(other) {
        if (0 === this.length || 0 === other.length) return !1;
        if (1 === this.length && 1 === other.length) return this.first === other.first;
        if (other.length < this.length) return other.intersects(this);
        for (var key in this.lookup) if (other.lookup[key]) return !0;
        return !1;
    }, "function" == typeof define && define.amd && define("PxLoader", [], function() {
        return PxLoader;
    }), global.PxLoader = PxLoader;
}(this), Date.now || (Date.now = function() {
    return new Date().getTime();
}), Array.isArray || (Array.isArray = function(arg) {
    return "[object Array]" === Object.prototype.toString.call(arg);
}), PxLoader.prototype.addImage = function(url, tags, priority) {
    var imageLoader = new PxLoaderImage(url, tags, priority);
    return this.add(imageLoader), imageLoader.img;
}, "function" == typeof define && define.amd && define("PxLoaderImage", [], function() {
    return PxLoaderImage;
}), PxLoader.prototype.addVideo = function(url, tags, priority) {
    var videoLoader = new PxLoaderVideo(url, tags, priority);
    return this.add(videoLoader), videoLoader.vid;
}, "function" == typeof define && define.amd && define("PxLoaderVideo", [], function() {
    return PxLoaderVideo;
}), function() {
    function m() {
        return function() {};
    }
    function p(a) {
        return function() {
            return this[a];
        };
    }
    function r(a) {
        return function() {
            return a;
        };
    }
    function u(a, c, d) {
        if ("string" == typeof a) {
            if (0 === a.indexOf("#") && (a = a.slice(1)), u.va[a]) return u.va[a];
            a = u.r(a);
        }
        if (!a || !a.nodeName) throw new TypeError("The element or ID supplied is not valid. (videojs)");
        return a.player || new u.C(a, c, d);
    }
    function D(a, c, d, e) {
        return d !== b ? (a.b.style[c] = -1 !== ("" + d).indexOf("%") || -1 !== ("" + d).indexOf("px") ? d : "auto" === d ? "" : d + "px", 
        e || a.k("resize"), a) : a.b ? (d = a.b.style[c], e = d.indexOf("px"), -1 !== e ? parseInt(d.slice(0, e), 10) : parseInt(a.b["offset" + u.Z(c)], 10)) : 0;
    }
    function E(a, c) {
        var d, e, g, j;
        return d = a.b, e = u.Qc(d), j = g = d.offsetWidth, d = a.handle, a.f.pd ? (j = e.top, 
        e = c.changedTouches ? c.changedTouches[0].pageY : c.pageY, d && (d = d.r().offsetHeight, 
        j += d / 2, g -= d), Math.max(0, Math.min(1, (j - e + g) / g))) : (g = e.left, e = c.changedTouches ? c.changedTouches[0].pageX : c.pageX, 
        d && (d = d.r().offsetWidth, g += d / 2, j -= d), Math.max(0, Math.min(1, (e - g) / j)));
    }
    function ca(a, c) {
        a.Y(c), c.d("click", u.bind(a, function() {
            this.Ua();
        }));
    }
    function G(a) {
        a.na = f, a.ua.pc(), a.b.setAttribute("aria-pressed", f), a.J && 0 < a.J.length && a.J[0].r().focus();
    }
    function F(a) {
        a.na = l, a.ua.Ua(), a.b.setAttribute("aria-pressed", l);
    }
    function da(a) {
        var c = {
            sources: [],
            tracks: []
        };
        if (u.i.B(c, u.xb(a)), a.hasChildNodes()) {
            var d, e, g, j;
            for (a = a.childNodes, g = 0, j = a.length; j > g; g++) d = a[g], e = d.nodeName.toLowerCase(), 
            "source" === e ? c.sources.push(u.xb(d)) : "track" === e && c.tracks.push(u.xb(d));
        }
        return c;
    }
    function H(a, c, d) {
        a.h ? (a.aa = l, a.h.D(), a.Eb && (a.Eb = l, clearInterval(a.Qa)), a.Fb && I(a), 
        a.h = l) : "Html5" !== c && a.F && (a.b.removeChild(a.F), a.F.player = h, a.F = h), 
        a.ya = c, a.aa = l;
        var e = u.i.B({
            source: d,
            parentEl: a.b
        }, a.f[c.toLowerCase()]);
        d && (d.src == a.s.src && 0 < a.s.currentTime && (e.startTime = a.s.currentTime), 
        a.s.src = d.src), a.h = new window.videojs[c](a, e), a.h.P(function() {
            if (this.a.Ta(), !this.j.Mb) {
                var a = this.a;
                a.Eb = f, a.Qa = setInterval(u.bind(a, function() {
                    this.s.mb < this.buffered().end(0) ? this.k("progress") : 1 == this.Ha() && (clearInterval(this.Qa), 
                    this.k("progress"));
                }), 500), a.h.R("progress", function() {
                    this.j.Mb = f;
                    var a = this.a;
                    a.Eb = l, clearInterval(a.Qa);
                });
            }
            this.j.Pb || (a = this.a, a.Fb = f, a.d("play", a.xc), a.d("pause", a.xa), a.h.R("timeupdate", function() {
                this.j.Pb = f, I(this.a);
            }));
        });
    }
    function I(a) {
        a.Fb = l, a.xa(), a.t("play", a.xc), a.t("pause", a.xa);
    }
    function K(a, c, d) {
        if (a.h && !a.h.aa) a.h.P(function() {
            this[c](d);
        }); else try {
            a.h[c](d);
        } catch (e) {
            throw u.log(e), e;
        }
    }
    function J(a, c) {
        if (a.h.aa) try {
            return a.h[c]();
        } catch (d) {
            throw a.h[c] === b ? u.log("Video.js: " + c + " method not defined for " + a.ya + " playback technology.", d) : "TypeError" == d.name ? (u.log("Video.js: " + c + " unavailable on " + a.ya + " playback technology element.", d), 
            a.h.aa = l) : u.log(d), d;
        }
    }
    function L(a) {
        a.Sc = l, u.t(document, "keydown", a.ic), document.documentElement.style.overflow = a.Nc, 
        u.w(document.body, "vjs-full-window"), a.k("exitFullWindow");
    }
    function ea() {
        var a = u.media.Va[i];
        return function() {
            throw Error('The "' + a + "\" method is not available on the playback technology's API");
        };
    }
    function fa() {
        var a = Q[S], c = a.charAt(0).toUpperCase() + a.slice(1);
        P["set" + c] = function(c) {
            return this.b.vjs_setProperty(a, c);
        };
    }
    function T(a) {
        P[a] = function() {
            return this.b.vjs_getProperty(a);
        };
    }
    function U(a) {
        return a.za = a.za || [], a.za;
    }
    function V(a, c, d) {
        for (var k, q, e = a.za, g = 0, j = e.length; j > g; g++) k = e[g], k.id() === c ? (k.show(), 
        q = k) : d && k.K() == d && 0 < k.mode() && k.disable();
        (c = q ? q.K() : d ? d : l) && a.k(c + "trackchange");
    }
    function W(a) {
        0 === a.ja && a.load(), 0 === a.ia && (a.a.d("timeupdate", u.bind(a, a.update, a.O)), 
        a.a.d("ended", u.bind(a, a.reset, a.O)), ("captions" === a.A || "subtitles" === a.A) && a.a.S.textTrackDisplay.Y(a));
    }
    function X(a) {
        var c = a.split(":");
        a = 0;
        var d, e, g;
        return 3 == c.length ? (d = c[0], e = c[1], c = c[2]) : (d = 0, e = c[0], c = c[1]), 
        c = c.split(/\s+/), c = c.splice(0, 1)[0], c = c.split(/\.|,/), g = parseFloat(c[1]), 
        c = c[0], a += 3600 * parseFloat(d), a += 60 * parseFloat(e), a += parseFloat(c), 
        g && (a += g / 1e3), a;
    }
    function $(a, c) {
        var d = a.split("."), e = Z;
        !(d[0] in e) && e.execScript && e.execScript("var " + d[0]);
        for (var g; d.length && (g = d.shift()); ) d.length || c === b ? e = e[g] ? e[g] : e[g] = {} : e[g] = c;
    }
    var b = void 0, f = !0, h = null, l = !1, t;
    document.createElement("video"), document.createElement("audio"), document.createElement("track");
    var v = u;
    window.Bd = window.Cd = u, u.Qb = "4.1", u.yc = "https:" == document.location.protocol ? "https://" : "http://", 
    u.options = {
        techOrder: [ "html5", "flash" ],
        html5: {},
        flash: {},
        width: 300,
        height: 150,
        defaultVolume: 0,
        children: {
            mediaLoader: {},
            posterImage: {},
            textTrackDisplay: {},
            loadingSpinner: {},
            bigPlayButton: {},
            controlBar: {}
        }
    }, "GENERATED_CDN_VSN" !== u.Qb && (v.options.flash.swf = u.yc + "vjs.zencdn.net/" + u.Qb + "/video-js.swf"), 
    u.va = {}, u.ka = u.CoreObject = m(), u.ka.extend = function(a) {
        var c, d;
        a = a || {}, c = a.init || a.g || this.prototype.init || this.prototype.g || m(), 
        d = function() {
            c.apply(this, arguments);
        }, d.prototype = u.i.create(this.prototype), d.prototype.constructor = d, d.extend = u.ka.extend, 
        d.create = u.ka.create;
        for (var e in a) a.hasOwnProperty(e) && (d.prototype[e] = a[e]);
        return d;
    }, u.ka.create = function() {
        var a = u.i.create(this.prototype);
        return this.apply(a, arguments), a;
    }, u.d = function(a, c, d) {
        var e = u.getData(a);
        e.z || (e.z = {}), e.z[c] || (e.z[c] = []), d.u || (d.u = u.u++), e.z[c].push(d), 
        e.T || (e.disabled = l, e.T = function(c) {
            if (!e.disabled) {
                c = u.hc(c);
                var d = e.z[c.type];
                if (d) for (var d = d.slice(0), k = 0, q = d.length; q > k && !c.nc(); k++) d[k].call(a, c);
            }
        }), 1 == e.z[c].length && (document.addEventListener ? a.addEventListener(c, e.T, l) : document.attachEvent && a.attachEvent("on" + c, e.T));
    }, u.t = function(a, c, d) {
        if (u.mc(a)) {
            var e = u.getData(a);
            if (e.z) if (c) {
                var g = e.z[c];
                if (g) {
                    if (d) {
                        if (d.u) for (e = 0; e < g.length; e++) g[e].u === d.u && g.splice(e--, 1);
                    } else e.z[c] = [];
                    u.ec(a, c);
                }
            } else for (g in e.z) c = g, e.z[c] = [], u.ec(a, c);
        }
    }, u.ec = function(a, c) {
        var d = u.getData(a);
        0 === d.z[c].length && (delete d.z[c], document.removeEventListener ? a.removeEventListener(c, d.T, l) : document.detachEvent && a.detachEvent("on" + c, d.T)), 
        u.Bb(d.z) && (delete d.z, delete d.T, delete d.disabled), u.Bb(d) && u.sc(a);
    }, u.hc = function(a) {
        function c() {
            return f;
        }
        function d() {
            return l;
        }
        if (!a || !a.Cb) {
            var e = a || window.event;
            a = {};
            for (var g in e) "layerX" !== g && "layerY" !== g && (a[g] = e[g]);
            if (a.target || (a.target = a.srcElement || document), a.relatedTarget = a.fromElement === a.target ? a.toElement : a.fromElement, 
            a.preventDefault = function() {
                e.preventDefault && e.preventDefault(), a.returnValue = l, a.Ab = c;
            }, a.Ab = d, a.stopPropagation = function() {
                e.stopPropagation && e.stopPropagation(), a.cancelBubble = f, a.Cb = c;
            }, a.Cb = d, a.stopImmediatePropagation = function() {
                e.stopImmediatePropagation && e.stopImmediatePropagation(), a.nc = c, a.stopPropagation();
            }, a.nc = d, a.clientX != h) {
                g = document.documentElement;
                var j = document.body;
                a.pageX = a.clientX + (g && g.scrollLeft || j && j.scrollLeft || 0) - (g && g.clientLeft || j && j.clientLeft || 0), 
                a.pageY = a.clientY + (g && g.scrollTop || j && j.scrollTop || 0) - (g && g.clientTop || j && j.clientTop || 0);
            }
            a.which = a.charCode || a.keyCode, a.button != h && (a.button = 1 & a.button ? 0 : 4 & a.button ? 1 : 2 & a.button ? 2 : 0);
        }
        return a;
    }, u.k = function(a, c) {
        var d = u.mc(a) ? u.getData(a) : {}, e = a.parentNode || a.ownerDocument;
        return "string" == typeof c && (c = {
            type: c,
            target: a
        }), c = u.hc(c), d.T && d.T.call(a, c), e && !c.Cb() ? u.k(e, c) : e || c.Ab() || (d = u.getData(c.target), 
        !c.target[c.type]) || (d.disabled = f, "function" == typeof c.target[c.type] && c.target[c.type](), 
        d.disabled = l), !c.Ab();
    }, u.R = function(a, c, d) {
        u.d(a, c, function() {
            u.t(a, c, arguments.callee), d.apply(this, arguments);
        });
    };
    var w = Object.prototype.hasOwnProperty;
    u.e = function(a, c) {
        var e, d = document.createElement(a || "div");
        for (e in c) w.call(c, e) && (-1 !== e.indexOf("aria-") || "role" == e ? d.setAttribute(e, c[e]) : d[e] = c[e]);
        return d;
    }, u.Z = function(a) {
        return a.charAt(0).toUpperCase() + a.slice(1);
    }, u.i = {}, u.i.create = Object.create || function(a) {
        function c() {}
        return c.prototype = a, new c();
    }, u.i.ra = function(a, c, d) {
        for (var e in a) w.call(a, e) && c.call(d || this, e, a[e]);
    }, u.i.B = function(a, c) {
        if (!c) return a;
        for (var d in c) w.call(c, d) && (a[d] = c[d]);
        return a;
    }, u.i.gc = function(a, c) {
        var d, e, g;
        a = u.i.copy(a);
        for (d in c) w.call(c, d) && (e = a[d], g = c[d], a[d] = u.i.oc(e) && u.i.oc(g) ? u.i.gc(e, g) : c[d]);
        return a;
    }, u.i.copy = function(a) {
        return u.i.B({}, a);
    }, u.i.oc = function(a) {
        return !!a && "object" == typeof a && "[object Object]" === a.toString() && a.constructor === Object;
    }, u.bind = function(a, c, d) {
        function e() {
            return c.apply(a, arguments);
        }
        return c.u || (c.u = u.u++), e.u = d ? d + "_" + c.u : c.u, e;
    }, u.pa = {}, u.u = 1, u.expando = "vdata" + new Date().getTime(), u.getData = function(a) {
        var c = a[u.expando];
        return c || (c = a[u.expando] = u.u++, u.pa[c] = {}), u.pa[c];
    }, u.mc = function(a) {
        return a = a[u.expando], !(!a || u.Bb(u.pa[a]));
    }, u.sc = function(a) {
        var c = a[u.expando];
        if (c) {
            delete u.pa[c];
            try {
                delete a[u.expando];
            } catch (d) {
                a.removeAttribute ? a.removeAttribute(u.expando) : a[u.expando] = h;
            }
        }
    }, u.Bb = function(a) {
        for (var c in a) if (a[c] !== h) return l;
        return f;
    }, u.p = function(a, c) {
        -1 == (" " + a.className + " ").indexOf(" " + c + " ") && (a.className = "" === a.className ? c : a.className + " " + c);
    }, u.w = function(a, c) {
        if (-1 != a.className.indexOf(c)) {
            for (var d = a.className.split(" "), e = d.length - 1; e >= 0; e--) d[e] === c && d.splice(e, 1);
            a.className = d.join(" ");
        }
    }, u.ma = u.e("video"), u.G = navigator.userAgent, u.Cc = /iPhone/i.test(u.G), u.Bc = /iPad/i.test(u.G), 
    u.Dc = /iPod/i.test(u.G), u.Ub = u.Cc || u.Bc || u.Dc;
    var aa = u, x, y = u.G.match(/OS (\d+)_/i);
    x = y && y[1] ? y[1] : b, aa.td = x, u.ab = /Android/i.test(u.G);
    var ba = u, z, A = u.G.match(/Android (\d+)(?:\.(\d+))?(?:\.(\d+))*/i), B, C;
    A ? (B = A[1] && parseFloat(A[1]), C = A[2] && parseFloat(A[2]), z = B && C ? parseFloat(A[1] + "." + A[2]) : B ? B : h) : z = h, 
    ba.zc = z, u.Ec = u.ab && /webkit/i.test(u.G) && 2.3 > u.zc, u.Ac = /Firefox/i.test(u.G), 
    u.ud = /Chrome/i.test(u.G), u.xb = function(a) {
        var c = {};
        if (a && a.attributes && 0 < a.attributes.length) for (var e, g, d = a.attributes, j = d.length - 1; j >= 0; j--) e = d[j].name, 
        g = d[j].value, ("boolean" == typeof a[e] || -1 !== ",autoplay,controls,loop,muted,default,".indexOf("," + e + ",")) && (g = g !== h ? f : l), 
        c[e] = g;
        return c;
    }, u.xd = function(a, c) {
        var d = "";
        return document.defaultView && document.defaultView.getComputedStyle ? d = document.defaultView.getComputedStyle(a, "").getPropertyValue(c) : a.currentStyle && (d = a["client" + c.substr(0, 1).toUpperCase() + c.substr(1)] + "px"), 
        d;
    }, u.zb = function(a, c) {
        c.firstChild ? c.insertBefore(a, c.firstChild) : c.appendChild(a);
    }, u.Ob = {}, u.r = function(a) {
        return 0 === a.indexOf("#") && (a = a.slice(1)), document.getElementById(a);
    }, u.Ka = function(a, c) {
        c = c || a;
        var d = Math.floor(a % 60), e = Math.floor(a / 60 % 60), g = Math.floor(a / 3600), j = Math.floor(c / 60 % 60), k = Math.floor(c / 3600), g = g > 0 || k > 0 ? g + ":" : "";
        return g + (((g || j >= 10) && 10 > e ? "0" + e : e) + ":") + (10 > d ? "0" + d : d);
    }, u.Ic = function() {
        document.body.focus(), document.onselectstart = r(l);
    }, u.od = function() {
        document.onselectstart = r(f);
    }, u.trim = function(a) {
        return a.toString().replace(/^\s+/, "").replace(/\s+$/, "");
    }, u.round = function(a, c) {
        return c || (c = 0), Math.round(a * Math.pow(10, c)) / Math.pow(10, c);
    }, u.tb = function(a, c) {
        return {
            length: 1,
            start: function() {
                return a;
            },
            end: function() {
                return c;
            }
        };
    }, u.get = function(a, c, d) {
        var e = 0 === a.indexOf("file:") || 0 === window.location.href.indexOf("file:") && -1 === a.indexOf("http");
        "undefined" == typeof XMLHttpRequest && (window.XMLHttpRequest = function() {
            try {
                return new window.ActiveXObject("Msxml2.XMLHTTP.6.0");
            } catch (a) {}
            try {
                return new window.ActiveXObject("Msxml2.XMLHTTP.3.0");
            } catch (c) {}
            try {
                return new window.ActiveXObject("Msxml2.XMLHTTP");
            } catch (d) {}
            throw Error("This browser does not support XMLHttpRequest.");
        });
        var g = new XMLHttpRequest();
        try {
            g.open("GET", a);
        } catch (j) {
            d(j);
        }
        g.onreadystatechange = function() {
            4 === g.readyState && (200 === g.status || e && 0 === g.status ? c(g.responseText) : d && d());
        };
        try {
            g.send();
        } catch (k) {
            d && d(k);
        }
    }, u.gd = function(a) {
        try {
            var c = window.localStorage || l;
            c && (c.volume = a);
        } catch (d) {
            22 == d.code || 1014 == d.code ? u.log("LocalStorage Full (VideoJS)", d) : 18 == d.code ? u.log("LocalStorage not allowed (VideoJS)", d) : u.log("LocalStorage Error (VideoJS)", d);
        }
    }, u.kc = function(a) {
        return a.match(/^https?:\/\//) || (a = u.e("div", {
            innerHTML: '<a href="' + a + '">x</a>'
        }).firstChild.href), a;
    }, u.log = function() {
        u.log.history = u.log.history || [], u.log.history.push(arguments), window.console && window.console.log(Array.prototype.slice.call(arguments));
    }, u.Qc = function(a) {
        var c, d;
        return a.getBoundingClientRect && a.parentNode && (c = a.getBoundingClientRect()), 
        c ? (a = document.documentElement, d = document.body, {
            left: c.left + (window.pageXOffset || d.scrollLeft) - (a.clientLeft || d.clientLeft || 0),
            top: c.top + (window.pageYOffset || d.scrollTop) - (a.clientTop || d.clientTop || 0)
        }) : {
            left: 0,
            top: 0
        };
    }, u.c = u.ka.extend({
        g: function(a, c, d) {
            if (this.a = a, this.f = u.i.copy(this.f), c = this.options(c), this.O = c.id || (c.el && c.el.id ? c.el.id : a.id() + "_component_" + u.u++), 
            this.Vc = c.name || h, this.b = c.el || this.e(), this.H = [], this.rb = {}, this.S = {}, 
            (a = this.f) && a.children) {
                var e = this;
                u.i.ra(a.children, function(a, c) {
                    c !== l && !c.loadEvent && (e[a] = e.Y(a, c));
                });
            }
            this.P(d);
        }
    }), t = u.c.prototype, t.D = function() {
        if (this.H) for (var a = this.H.length - 1; a >= 0; a--) this.H[a].D && this.H[a].D();
        this.S = this.rb = this.H = h, this.t(), this.b.parentNode && this.b.parentNode.removeChild(this.b), 
        u.sc(this.b), this.b = h;
    }, t.bd = p("a"), t.options = function(a) {
        return a === b ? this.f : this.f = u.i.gc(this.f, a);
    }, t.e = function(a, c) {
        return u.e(a, c);
    }, t.r = p("b"), t.id = p("O"), t.name = p("Vc"), t.children = p("H"), t.Y = function(a, c) {
        var d, e;
        return "string" == typeof a ? (e = a, c = c || {}, d = c.componentClass || u.Z(e), 
        c.name = e, d = new window.videojs[d](this.a || this, c)) : d = a, this.H.push(d), 
        "function" == typeof d.id && (this.rb[d.id()] = d), (e = e || d.name && d.name()) && (this.S[e] = d), 
        "function" == typeof d.el && d.el() && (this.qa || this.b).appendChild(d.el()), 
        d;
    }, t.removeChild = function(a) {
        if ("string" == typeof a && (a = this.S[a]), a && this.H) {
            for (var c = l, d = this.H.length - 1; d >= 0; d--) if (this.H[d] === a) {
                c = f, this.H.splice(d, 1);
                break;
            }
            c && (this.rb[a.id] = h, this.S[a.name] = h, (c = a.r()) && c.parentNode === (this.qa || this.b) && (this.qa || this.b).removeChild(a.r()));
        }
    }, t.Q = r(""), t.d = function(a, c) {
        return u.d(this.b, a, u.bind(this, c)), this;
    }, t.t = function(a, c) {
        return u.t(this.b, a, c), this;
    }, t.R = function(a, c) {
        return u.R(this.b, a, u.bind(this, c)), this;
    }, t.k = function(a, c) {
        return u.k(this.b, a, c), this;
    }, t.P = function(a) {
        return a && (this.aa ? a.call(this) : (this.Ra === b && (this.Ra = []), this.Ra.push(a))), 
        this;
    }, t.Ta = function() {
        this.aa = f;
        var a = this.Ra;
        if (a && 0 < a.length) {
            for (var c = 0, d = a.length; d > c; c++) a[c].call(this);
            this.Ra = [], this.k("ready");
        }
    }, t.p = function(a) {
        return u.p(this.b, a), this;
    }, t.w = function(a) {
        return u.w(this.b, a), this;
    }, t.show = function() {
        return this.b.style.display = "block", this;
    }, t.v = function() {
        return this.b.style.display = "none", this;
    }, t.$ = function() {
        return this.w("vjs-fade-out"), this.p("vjs-fade-in"), this;
    }, t.ta = function() {
        return this.w("vjs-fade-in"), this.p("vjs-fade-out"), this;
    }, t.pc = function() {
        return this.p("vjs-lock-showing"), this;
    }, t.Ua = function() {
        return this.w("vjs-lock-showing"), this;
    }, t.disable = function() {
        this.v(), this.show = m(), this.$ = m();
    }, t.width = function(a, c) {
        return D(this, "width", a, c);
    }, t.height = function(a, c) {
        return D(this, "height", a, c);
    }, t.Mc = function(a, c) {
        return this.width(a, f).height(c);
    }, u.o = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c);
            var d = l;
            this.d("touchstart", function() {
                d = f;
            }), this.d("touchmove", function() {
                d = l;
            });
            var e = this;
            this.d("touchend", function(a) {
                d && e.n(a), a.preventDefault(), a.stopPropagation();
            }), this.d("click", this.n), this.d("focus", this.Na), this.d("blur", this.Ma);
        }
    }), t = u.o.prototype, t.e = function(a, c) {
        return c = u.i.B({
            className: this.Q(),
            innerHTML: '<div class="vjs-control-content"><span class="vjs-control-text">' + (this.oa || "Need Text") + "</span></div>",
            dd: "button",
            "aria-live": "polite",
            tabIndex: 0
        }, c), u.c.prototype.e.call(this, a, c);
    }, t.Q = function() {
        return "vjs-control " + u.c.prototype.Q.call(this);
    }, t.n = m(), t.Na = function() {
        u.d(document, "keyup", u.bind(this, this.ba));
    }, t.ba = function(a) {
        (32 == a.which || 13 == a.which) && (a.preventDefault(), this.n());
    }, t.Ma = function() {
        u.t(document, "keyup", u.bind(this, this.ba));
    }, u.M = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c), this.Hc = this.S[this.f.barName], this.handle = this.S[this.f.handleName], 
            a.d(this.qc, u.bind(this, this.update)), this.d("mousedown", this.Oa), this.d("touchstart", this.Oa), 
            this.d("focus", this.Na), this.d("blur", this.Ma), this.d("click", this.n), this.a.d("controlsvisible", u.bind(this, this.update)), 
            a.P(u.bind(this, this.update)), this.N = {};
        }
    }), t = u.M.prototype, t.e = function(a, c) {
        return c = c || {}, c.className += " vjs-slider", c = u.i.B({
            dd: "slider",
            "aria-valuenow": 0,
            "aria-valuemin": 0,
            "aria-valuemax": 100,
            tabIndex: 0
        }, c), u.c.prototype.e.call(this, a, c);
    }, t.Oa = function(a) {
        a.preventDefault(), u.Ic(), this.N.move = u.bind(this, this.Hb), this.N.end = u.bind(this, this.Ib), 
        u.d(document, "mousemove", this.N.move), u.d(document, "mouseup", this.N.end), u.d(document, "touchmove", this.N.move), 
        u.d(document, "touchend", this.N.end), this.Hb(a);
    }, t.Ib = function() {
        u.od(), u.t(document, "mousemove", this.N.move, l), u.t(document, "mouseup", this.N.end, l), 
        u.t(document, "touchmove", this.N.move, l), u.t(document, "touchend", this.N.end, l), 
        this.update();
    }, t.update = function() {
        if (this.b) {
            var a, c = this.yb(), d = this.handle, e = this.Hc;
            if (isNaN(c) && (c = 0), a = c, d) {
                a = this.b.offsetWidth;
                var g = d.r().offsetWidth;
                a = g ? g / a : 0, c *= 1 - a, a = c + a / 2, d.r().style.left = u.round(100 * c, 2) + "%";
            }
            e.r().style.width = u.round(100 * a, 2) + "%";
        }
    }, t.Na = function() {
        u.d(document, "keyup", u.bind(this, this.ba));
    }, t.ba = function(a) {
        37 == a.which ? (a.preventDefault(), this.vc()) : 39 == a.which && (a.preventDefault(), 
        this.wc());
    }, t.Ma = function() {
        u.t(document, "keyup", u.bind(this, this.ba));
    }, t.n = function(a) {
        a.stopImmediatePropagation(), a.preventDefault();
    }, u.ga = u.c.extend(), u.ga.prototype.defaultValue = 0, u.ga.prototype.e = function(a, c) {
        return c = c || {}, c.className += " vjs-slider-handle", c = u.i.B({
            innerHTML: '<span class="vjs-control-text">' + this.defaultValue + "</span>"
        }, c), u.c.prototype.e.call(this, "div", c);
    }, u.la = u.c.extend(), u.la.prototype.e = function() {
        var a = this.options().Kc || "ul";
        return this.qa = u.e(a, {
            className: "vjs-menu-content"
        }), a = u.c.prototype.e.call(this, "div", {
            append: this.qa,
            className: "vjs-menu"
        }), a.appendChild(this.qa), u.d(a, "click", function(a) {
            a.preventDefault(), a.stopImmediatePropagation();
        }), a;
    }, u.L = u.o.extend({
        g: function(a, c) {
            u.o.call(this, a, c), this.selected(c.selected);
        }
    }), u.L.prototype.e = function(a, c) {
        return u.o.prototype.e.call(this, "li", u.i.B({
            className: "vjs-menu-item",
            innerHTML: this.f.label
        }, c));
    }, u.L.prototype.n = function() {
        this.selected(f);
    }, u.L.prototype.selected = function(a) {
        a ? (this.p("vjs-selected"), this.b.setAttribute("aria-selected", f)) : (this.w("vjs-selected"), 
        this.b.setAttribute("aria-selected", l));
    }, u.ea = u.o.extend({
        g: function(a, c) {
            u.o.call(this, a, c), this.ua = this.Ja(), this.Y(this.ua), this.J && 0 === this.J.length && this.v(), 
            this.d("keyup", this.ba), this.b.setAttribute("aria-haspopup", f), this.b.setAttribute("role", "button");
        }
    }), t = u.ea.prototype, t.na = l, t.Ja = function() {
        var a = new u.la(this.a);
        if (this.options().title && a.r().appendChild(u.e("li", {
            className: "vjs-menu-title",
            innerHTML: u.Z(this.A),
            md: -1
        })), this.J = this.sb()) for (var c = 0; c < this.J.length; c++) ca(a, this.J[c]);
        return a;
    }, t.sb = m(), t.Q = function() {
        return this.className + " vjs-menu-button " + u.o.prototype.Q.call(this);
    }, t.Na = m(), t.Ma = m(), t.n = function() {
        this.R("mouseout", u.bind(this, function() {
            this.ua.Ua(), this.b.blur();
        })), this.na ? F(this) : G(this);
    }, t.ba = function(a) {
        a.preventDefault(), 32 == a.which || 13 == a.which ? this.na ? F(this) : G(this) : 27 == a.which && this.na && F(this);
    }, u.C = u.c.extend({
        g: function(a, c, d) {
            this.F = a, c = u.i.B(da(a), c), this.s = {}, this.rc = c.poster, this.Ia = c.controls, 
            c.customControlsOnMobile !== f && (u.Ub || u.ab) ? (a.controls = c.controls, this.Ia = l) : a.controls = l, 
            u.c.call(this, this, c, d), this.R("play", function(a) {
                u.k(this.b, {
                    type: "firstplay",
                    target: this.b
                }) || (a.preventDefault(), a.stopPropagation(), a.stopImmediatePropagation());
            }), this.d("ended", this.Xc), this.d("play", this.Kb), this.d("firstplay", this.Yc), 
            this.d("pause", this.Jb), this.d("progress", this.$c), this.d("durationchange", this.Wc), 
            this.d("error", this.Gb), this.d("fullscreenchange", this.Zc), u.va[this.O] = this, 
            c.plugins && u.i.ra(c.plugins, function(a, c) {
                this[a](c);
            }, this);
        }
    }), t = u.C.prototype, t.f = u.options, t.D = function() {
        u.va[this.O] = h, this.F && this.F.player && (this.F.player = h), this.b && this.b.player && (this.b.player = h), 
        clearInterval(this.Qa), this.xa(), this.h && this.h.D(), u.c.prototype.D.call(this);
    }, t.e = function() {
        var a = this.b = u.c.prototype.e.call(this, "div"), c = this.F;
        if (c.removeAttribute("width"), c.removeAttribute("height"), c.hasChildNodes()) {
            var d, e, g, j, k;
            for (d = c.childNodes, e = d.length, k = []; e--; ) g = d[e], j = g.nodeName.toLowerCase(), 
            ("source" === j || "track" === j) && k.push(g);
            for (d = 0; d < k.length; d++) c.removeChild(k[d]);
        }
        return c.id = c.id || "vjs_video_" + u.u++, a.id = c.id, a.className = c.className, 
        c.id += "_html5_api", c.className = "vjs-tech", c.player = a.player = this, this.p("vjs-paused"), 
        this.width(this.f.width, f), this.height(this.f.height, f), c.parentNode && c.parentNode.insertBefore(a, c), 
        u.zb(c, a), a;
    }, t.xc = function() {
        this.fc && this.xa(), this.fc = setInterval(u.bind(this, function() {
            this.k("timeupdate");
        }), 250);
    }, t.xa = function() {
        clearInterval(this.fc);
    }, t.Xc = function() {
        this.f.loop && (this.currentTime(0), this.play());
    }, t.Kb = function() {
        u.w(this.b, "vjs-paused"), u.p(this.b, "vjs-playing");
    }, t.Yc = function() {
        this.f.starttime && this.currentTime(this.f.starttime);
    }, t.Jb = function() {
        u.w(this.b, "vjs-playing"), u.p(this.b, "vjs-paused");
    }, t.$c = function() {
        1 == this.Ha() && this.k("loadedalldata");
    }, t.Wc = function() {
        this.duration(J(this, "duration"));
    }, t.Gb = function(a) {
        u.log("Video Error", a);
    }, t.Zc = function() {
        this.I ? this.p("vjs-fullscreen") : this.w("vjs-fullscreen");
    }, t.play = function() {
        return K(this, "play"), this;
    }, t.pause = function() {
        return K(this, "pause"), this;
    }, t.paused = function() {
        return J(this, "paused") === l ? l : f;
    }, t.currentTime = function(a) {
        return a !== b ? (this.s.zd = a, K(this, "setCurrentTime", a), this.Fb && this.k("timeupdate"), 
        this) : this.s.currentTime = J(this, "currentTime") || 0;
    }, t.duration = function(a) {
        return a !== b ? (this.s.duration = parseFloat(a), this) : this.s.duration;
    }, t.buffered = function() {
        var a = J(this, "buffered"), c = this.s.mb = this.s.mb || 0;
        return a && 0 < a.length && a.end(0) !== c && (c = a.end(0), this.s.mb = c), u.tb(0, c);
    }, t.Ha = function() {
        return this.duration() ? this.buffered().end(0) / this.duration() : 0;
    }, t.volume = function(a) {
        return a !== b ? (a = Math.max(0, Math.min(1, parseFloat(a))), this.s.volume = a, 
        K(this, "setVolume", a), u.gd(a), this) : (a = parseFloat(J(this, "volume")), isNaN(a) ? 1 : a);
    }, t.muted = function(a) {
        return a !== b ? (K(this, "setMuted", a), this) : J(this, "muted") || l;
    }, t.Sa = function() {
        return J(this, "supportsFullScreen") || l;
    }, t.wa = function() {
        var a = u.Ob.wa;
        return this.I = f, a ? (u.d(document, a.vb, u.bind(this, function() {
            this.I = document[a.I], this.I === l && u.t(document, a.vb, arguments.callee), this.k("fullscreenchange");
        })), this.b[a.tc]()) : this.h.Sa() ? K(this, "enterFullScreen") : (this.Sc = f, 
        this.Nc = document.documentElement.style.overflow, u.d(document, "keydown", u.bind(this, this.ic)), 
        document.documentElement.style.overflow = "hidden", u.p(document.body, "vjs-full-window"), 
        this.k("enterFullWindow"), this.k("fullscreenchange")), this;
    }, t.pb = function() {
        var a = u.Ob.wa;
        return this.I = l, a ? document[a.ob]() : this.h.Sa() ? K(this, "exitFullScreen") : (L(this), 
        this.k("fullscreenchange")), this;
    }, t.ic = function(a) {
        27 === a.keyCode && (this.I === f ? this.pb() : L(this));
    }, t.src = function(a) {
        if (a instanceof Array) {
            var c;
            a: {
                c = a;
                for (var d = 0, e = this.f.techOrder; d < e.length; d++) {
                    var g = u.Z(e[d]), j = window.videojs[g];
                    if (j.isSupported()) for (var k = 0, q = c; k < q.length; k++) {
                        var n = q[k];
                        if (j.canPlaySource(n)) {
                            c = {
                                source: n,
                                h: g
                            };
                            break a;
                        }
                    }
                }
                c = l;
            }
            c ? (a = c.source, c = c.h, c == this.ya ? this.src(a) : H(this, c, a)) : this.b.appendChild(u.e("p", {
                innerHTML: 'Sorry, no compatible source and playback technology were found for this video. Try using another browser like <a href="http://bit.ly/ccMUEC">Chrome</a> or download the latest <a href="http://adobe.ly/mwfN1">Adobe Flash Player</a>.'
            }));
        } else a instanceof Object ? this.src(window.videojs[this.ya].canPlaySource(a) ? a.src : [ a ]) : (this.s.src = a, 
        this.aa ? (K(this, "src", a), "auto" == this.f.preload && this.load(), this.f.autoplay && this.play()) : this.P(function() {
            this.src(a);
        }));
        return this;
    }, t.load = function() {
        return K(this, "load"), this;
    }, t.currentSrc = function() {
        return J(this, "currentSrc") || this.s.src || "";
    }, t.Pa = function(a) {
        return a !== b ? (K(this, "setPreload", a), this.f.preload = a, this) : J(this, "preload");
    }, t.autoplay = function(a) {
        return a !== b ? (K(this, "setAutoplay", a), this.f.autoplay = a, this) : J(this, "autoplay");
    }, t.loop = function(a) {
        return a !== b ? (K(this, "setLoop", a), this.f.loop = a, this) : J(this, "loop");
    }, t.poster = function(a) {
        return a !== b && (this.rc = a), this.rc;
    }, t.controls = function(a) {
        return a !== b && this.Ia !== a && (this.Ia = !!a, this.k("controlschange")), this.Ia;
    }, t.error = function() {
        return J(this, "error");
    };
    var M, N, O;
    O = document.createElement("div"), N = {}, O.vd !== b ? (N.tc = "requestFullscreen", 
    N.ob = "exitFullscreen", N.vb = "fullscreenchange", N.I = "fullScreen") : (document.mozCancelFullScreen ? (M = "moz", 
    N.I = M + "FullScreen") : (M = "webkit", N.I = M + "IsFullScreen"), O[M + "RequestFullScreen"] && (N.tc = M + "RequestFullScreen", 
    N.ob = M + "CancelFullScreen"), N.vb = M + "fullscreenchange"), document[N.ob] && (u.Ob.wa = N), 
    u.da = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c), a.controls() || this.disable(), a.R("play", u.bind(this, function() {
                var a, c = u.bind(this, this.$), g = u.bind(this, this.ta);
                this.$(), "ontouchstart" in window || (this.a.d("mouseover", c), this.a.d("mouseout", g), 
                this.a.d("pause", u.bind(this, this.pc)), this.a.d("play", u.bind(this, this.Ua))), 
                a = l, this.a.d("touchstart", function() {
                    a = f;
                }), this.a.d("touchmove", function() {
                    a = l;
                }), this.a.d("touchend", u.bind(this, function(c) {
                    var e;
                    a && (e = this.r().className.search("fade-in"), -1 !== e ? this.ta() : this.$()), 
                    a = l, this.a.paused() || c.preventDefault();
                }));
            }));
        }
    }), u.da.prototype.f = {
        Ad: "play",
        children: {
            playToggle: {},
            currentTimeDisplay: {},
            timeDivider: {},
            durationDisplay: {},
            remainingTimeDisplay: {},
            progressControl: {},
            fullscreenToggle: {},
            volumeControl: {},
            muteToggle: {}
        }
    }, u.da.prototype.e = function() {
        return u.e("div", {
            className: "vjs-control-bar"
        });
    }, u.da.prototype.$ = function() {
        u.c.prototype.$.call(this), this.a.k("controlsvisible");
    }, u.da.prototype.ta = function() {
        u.c.prototype.ta.call(this), this.a.k("controlshidden");
    }, u.Xb = u.o.extend({
        g: function(a, c) {
            u.o.call(this, a, c), a.d("play", u.bind(this, this.Kb)), a.d("pause", u.bind(this, this.Jb));
        }
    }), t = u.Xb.prototype, t.oa = "Play", t.Q = function() {
        return "vjs-play-control " + u.o.prototype.Q.call(this);
    }, t.n = function() {
        this.a.paused() ? this.a.play() : this.a.pause();
    }, t.Kb = function() {
        u.w(this.b, "vjs-paused"), u.p(this.b, "vjs-playing"), this.b.children[0].children[0].innerHTML = "Pause";
    }, t.Jb = function() {
        u.w(this.b, "vjs-playing"), u.p(this.b, "vjs-paused"), this.b.children[0].children[0].innerHTML = "Play";
    }, u.Ya = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c), a.d("timeupdate", u.bind(this, this.Ba));
        }
    }), u.Ya.prototype.e = function() {
        var a = u.c.prototype.e.call(this, "div", {
            className: "vjs-current-time vjs-time-controls vjs-control"
        });
        return this.content = u.e("div", {
            className: "vjs-current-time-display",
            innerHTML: '<span class="vjs-control-text">Current Time </span>0:00',
            "aria-live": "off"
        }), a.appendChild(u.e("div").appendChild(this.content)), a;
    }, u.Ya.prototype.Ba = function() {
        var a = this.a.Nb ? this.a.s.currentTime : this.a.currentTime();
        this.content.innerHTML = '<span class="vjs-control-text">Current Time </span>' + u.Ka(a, this.a.duration());
    }, u.Za = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c), a.d("timeupdate", u.bind(this, this.Ba));
        }
    }), u.Za.prototype.e = function() {
        var a = u.c.prototype.e.call(this, "div", {
            className: "vjs-duration vjs-time-controls vjs-control"
        });
        return this.content = u.e("div", {
            className: "vjs-duration-display",
            innerHTML: '<span class="vjs-control-text">Duration Time </span>0:00',
            "aria-live": "off"
        }), a.appendChild(u.e("div").appendChild(this.content)), a;
    }, u.Za.prototype.Ba = function() {
        this.a.duration() && (this.content.innerHTML = '<span class="vjs-control-text">Duration Time </span>' + u.Ka(this.a.duration()));
    }, u.ac = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c);
        }
    }), u.ac.prototype.e = function() {
        return u.c.prototype.e.call(this, "div", {
            className: "vjs-time-divider",
            innerHTML: "<div><span>/</span></div>"
        });
    }, u.gb = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c), a.d("timeupdate", u.bind(this, this.Ba));
        }
    }), u.gb.prototype.e = function() {
        var a = u.c.prototype.e.call(this, "div", {
            className: "vjs-remaining-time vjs-time-controls vjs-control"
        });
        return this.content = u.e("div", {
            className: "vjs-remaining-time-display",
            innerHTML: '<span class="vjs-control-text">Remaining Time </span>-0:00',
            "aria-live": "off"
        }), a.appendChild(u.e("div").appendChild(this.content)), a;
    }, u.gb.prototype.Ba = function() {
        this.a.duration() && this.a.duration() && (this.content.innerHTML = '<span class="vjs-control-text">Remaining Time </span>-' + u.Ka(this.a.duration() - this.a.currentTime()));
    }, u.Da = u.o.extend({
        g: function(a, c) {
            u.o.call(this, a, c);
        }
    }), u.Da.prototype.oa = "Fullscreen", u.Da.prototype.Q = function() {
        return "vjs-fullscreen-control " + u.o.prototype.Q.call(this);
    }, u.Da.prototype.n = function() {
        this.a.I ? (this.a.pb(), this.b.children[0].children[0].innerHTML = "Fullscreen") : (this.a.wa(), 
        this.b.children[0].children[0].innerHTML = "Non-Fullscreen");
    }, u.fb = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c);
        }
    }), u.fb.prototype.f = {
        children: {
            seekBar: {}
        }
    }, u.fb.prototype.e = function() {
        return u.c.prototype.e.call(this, "div", {
            className: "vjs-progress-control vjs-control"
        });
    }, u.Yb = u.M.extend({
        g: function(a, c) {
            u.M.call(this, a, c), a.d("timeupdate", u.bind(this, this.Aa)), a.P(u.bind(this, this.Aa));
        }
    }), t = u.Yb.prototype, t.f = {
        children: {
            loadProgressBar: {},
            playProgressBar: {},
            seekHandle: {}
        },
        barName: "playProgressBar",
        handleName: "seekHandle"
    }, t.qc = "timeupdate", t.e = function() {
        return u.M.prototype.e.call(this, "div", {
            className: "vjs-progress-holder",
            "aria-label": "video progress bar"
        });
    }, t.Aa = function() {
        var a = this.a.Nb ? this.a.s.currentTime : this.a.currentTime();
        this.b.setAttribute("aria-valuenow", u.round(100 * this.yb(), 2)), this.b.setAttribute("aria-valuetext", u.Ka(a, this.a.duration()));
    }, t.yb = function() {
        return this.a.currentTime() / this.a.duration();
    }, t.Oa = function(a) {
        u.M.prototype.Oa.call(this, a), this.a.Nb = f, this.qd = !this.a.paused(), this.a.pause();
    }, t.Hb = function(a) {
        a = E(this, a) * this.a.duration(), a == this.a.duration() && (a -= .1), this.a.currentTime(a);
    }, t.Ib = function(a) {
        u.M.prototype.Ib.call(this, a), this.a.Nb = l, this.qd && this.a.play();
    }, t.wc = function() {
        this.a.currentTime(this.a.currentTime() + 5);
    }, t.vc = function() {
        this.a.currentTime(this.a.currentTime() - 5);
    }, u.bb = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c), a.d("progress", u.bind(this, this.update));
        }
    }), u.bb.prototype.e = function() {
        return u.c.prototype.e.call(this, "div", {
            className: "vjs-load-progress",
            innerHTML: '<span class="vjs-control-text">Loaded: 0%</span>'
        });
    }, u.bb.prototype.update = function() {
        this.b.style && (this.b.style.width = u.round(100 * this.a.Ha(), 2) + "%");
    }, u.Wb = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c);
        }
    }), u.Wb.prototype.e = function() {
        return u.c.prototype.e.call(this, "div", {
            className: "vjs-play-progress",
            innerHTML: '<span class="vjs-control-text">Progress: 0%</span>'
        });
    }, u.hb = u.ga.extend(), u.hb.prototype.defaultValue = "00:00", u.hb.prototype.e = function() {
        return u.ga.prototype.e.call(this, "div", {
            className: "vjs-seek-handle"
        });
    }, u.jb = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c), a.h && a.h.j && a.h.j.U === l && this.p("vjs-hidden"), a.d("loadstart", u.bind(this, function() {
                a.h.j && a.h.j.U === l ? this.p("vjs-hidden") : this.w("vjs-hidden");
            }));
        }
    }), u.jb.prototype.f = {
        children: {
            volumeBar: {}
        }
    }, u.jb.prototype.e = function() {
        return u.c.prototype.e.call(this, "div", {
            className: "vjs-volume-control vjs-control"
        });
    }, u.ib = u.M.extend({
        g: function(a, c) {
            u.M.call(this, a, c), a.d("volumechange", u.bind(this, this.Aa)), a.P(u.bind(this, this.Aa)), 
            setTimeout(u.bind(this, this.update), 0);
        }
    }), t = u.ib.prototype, t.Aa = function() {
        this.b.setAttribute("aria-valuenow", u.round(100 * this.a.volume(), 2)), this.b.setAttribute("aria-valuetext", u.round(100 * this.a.volume(), 2) + "%");
    }, t.f = {
        children: {
            volumeLevel: {},
            volumeHandle: {}
        },
        barName: "volumeLevel",
        handleName: "volumeHandle"
    }, t.qc = "volumechange", t.e = function() {
        return u.M.prototype.e.call(this, "div", {
            className: "vjs-volume-bar",
            "aria-label": "volume level"
        });
    }, t.Hb = function(a) {
        this.a.volume(E(this, a));
    }, t.yb = function() {
        return this.a.muted() ? 0 : this.a.volume();
    }, t.wc = function() {
        this.a.volume(this.a.volume() + .1);
    }, t.vc = function() {
        this.a.volume(this.a.volume() - .1);
    }, u.bc = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c);
        }
    }), u.bc.prototype.e = function() {
        return u.c.prototype.e.call(this, "div", {
            className: "vjs-volume-level",
            innerHTML: '<span class="vjs-control-text"></span>'
        });
    }, u.kb = u.ga.extend(), u.kb.prototype.defaultValue = "00:00", u.kb.prototype.e = function() {
        return u.ga.prototype.e.call(this, "div", {
            className: "vjs-volume-handle"
        });
    }, u.fa = u.o.extend({
        g: function(a, c) {
            u.o.call(this, a, c), a.d("volumechange", u.bind(this, this.update)), a.h && a.h.j && a.h.j.U === l && this.p("vjs-hidden"), 
            a.d("loadstart", u.bind(this, function() {
                a.h.j && a.h.j.U === l ? this.p("vjs-hidden") : this.w("vjs-hidden");
            }));
        }
    }), u.fa.prototype.e = function() {
        return u.o.prototype.e.call(this, "div", {
            className: "vjs-mute-control vjs-control",
            innerHTML: '<div><span class="vjs-control-text">Mute</span></div>'
        });
    }, u.fa.prototype.n = function() {
        this.a.muted(this.a.muted() ? l : f);
    }, u.fa.prototype.update = function() {
        var a = this.a.volume(), c = 3;
        for (0 === a || this.a.muted() ? c = 0 : .33 > a ? c = 1 : .67 > a && (c = 2), this.a.muted() ? "Unmute" != this.b.children[0].children[0].innerHTML && (this.b.children[0].children[0].innerHTML = "Unmute") : "Mute" != this.b.children[0].children[0].innerHTML && (this.b.children[0].children[0].innerHTML = "Mute"), 
        a = 0; 4 > a; a++) u.w(this.b, "vjs-vol-" + a);
        u.p(this.b, "vjs-vol-" + c);
    }, u.Fa = u.ea.extend({
        g: function(a, c) {
            u.ea.call(this, a, c), a.d("volumechange", u.bind(this, this.update)), a.h && a.h.j && a.h.j.U === l && this.p("vjs-hidden"), 
            a.d("loadstart", u.bind(this, function() {
                a.h.j && a.h.j.U === l ? this.p("vjs-hidden") : this.w("vjs-hidden");
            })), this.p("vjs-menu-button");
        }
    }), u.Fa.prototype.Ja = function() {
        var a = new u.la(this.a, {
            Kc: "div"
        }), c = new u.ib(this.a, u.i.B({
            pd: f
        }, this.f.Dd));
        return a.Y(c), a;
    }, u.Fa.prototype.n = function() {
        u.fa.prototype.n.call(this), u.ea.prototype.n.call(this);
    }, u.Fa.prototype.e = function() {
        return u.o.prototype.e.call(this, "div", {
            className: "vjs-volume-menu-button vjs-menu-button vjs-control",
            innerHTML: '<div><span class="vjs-control-text">Mute</span></div>'
        });
    }, u.Fa.prototype.update = u.fa.prototype.update, u.eb = u.o.extend({
        g: function(a, c) {
            u.o.call(this, a, c), (!a.poster() || !a.controls()) && this.v(), a.d("play", u.bind(this, this.v));
        }
    }), u.eb.prototype.e = function() {
        var a = u.e("div", {
            className: "vjs-poster",
            tabIndex: -1
        }), c = this.a.poster();
        return c && ("backgroundSize" in a.style ? a.style.backgroundImage = 'url("' + c + '")' : a.appendChild(u.e("img", {
            src: c
        }))), a;
    }, u.eb.prototype.n = function() {
        this.a.play();
    }, u.Vb = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c), a.d("canplay", u.bind(this, this.v)), a.d("canplaythrough", u.bind(this, this.v)), 
            a.d("playing", u.bind(this, this.v)), a.d("seeked", u.bind(this, this.v)), a.d("seeking", u.bind(this, this.show)), 
            a.d("seeked", u.bind(this, this.v)), a.d("error", u.bind(this, this.show)), a.d("waiting", u.bind(this, this.show));
        }
    }), u.Vb.prototype.e = function() {
        return u.c.prototype.e.call(this, "div", {
            className: "vjs-loading-spinner"
        });
    }, u.Wa = u.o.extend({
        g: function(a, c) {
            u.o.call(this, a, c), a.controls() || this.v(), a.d("play", u.bind(this, this.v));
        }
    }), u.Wa.prototype.e = function() {
        return u.o.prototype.e.call(this, "div", {
            className: "vjs-big-play-button",
            innerHTML: "<span></span>",
            "aria-label": "play video"
        });
    }, u.Wa.prototype.n = function() {
        this.a.play();
    }, u.q = u.c.extend({
        g: function(a, c, d) {
            u.c.call(this, a, c, d);
        }
    }), u.q.prototype.n = u.ab ? m() : function() {
        this.a.controls() && (this.a.paused() ? this.a.play() : this.a.pause());
    }, u.q.prototype.j = {
        U: f,
        jc: l,
        Mb: l,
        Pb: l
    }, u.media = {}, u.media.Va = "play pause paused currentTime setCurrentTime duration buffered volume setVolume muted setMuted width height supportsFullScreen enterFullScreen src load currentSrc preload setPreload autoplay setAutoplay loop setLoop error networkState readyState seeking initialTime startOffsetTime played seekable ended videoTracks audioTracks videoWidth videoHeight textTracks defaultPlaybackRate playbackRate mediaGroup controller controls defaultMuted".split(" ");
    for (var i = u.media.Va.length - 1; i >= 0; i--) u.q.prototype[u.media.Va[i]] = ea();
    u.m = u.q.extend({
        g: function(a, c, d) {
            for (this.j.U = u.m.Jc(), this.j.Uc = !u.Ub, this.j.jc = f, u.q.call(this, a, c, d), 
            (c = c.source) && this.b.currentSrc == c.src ? a.k("loadstart") : c && (this.b.src = c.src), 
            a.P(function() {
                this.F && this.f.autoplay && this.paused() && (delete this.F.poster, this.play());
            }), this.d("click", this.n), a = u.m.$a.length - 1; a >= 0; a--) u.d(this.b, u.m.$a[a], u.bind(this.a, this.Pc));
            this.Ta();
        }
    }), t = u.m.prototype, t.D = function() {
        u.q.prototype.D.call(this);
    }, t.e = function() {
        var a = this.a, c = a.F;
        c && this.j.Uc !== l || (c ? (c.player = h, a.F = h, a.r().removeChild(c), c = c.cloneNode(l)) : c = u.e("video", {
            id: a.id() + "_html5_api",
            className: "vjs-tech"
        }), c.player = a, u.zb(c, a.r()));
        for (var d = [ "autoplay", "preload", "loop", "muted" ], e = d.length - 1; e >= 0; e--) {
            var g = d[e];
            a.f[g] !== h && (c[g] = a.f[g]);
        }
        return c;
    }, t.Pc = function(a) {
        this.k(a), a.stopPropagation();
    }, t.play = function() {
        this.b.play();
    }, t.pause = function() {
        this.b.pause();
    }, t.paused = function() {
        return this.b.paused;
    }, t.currentTime = function() {
        return this.b.currentTime;
    }, t.fd = function(a) {
        try {
            this.b.currentTime = a;
        } catch (c) {
            u.log(c, "Video is not ready. (Video.js)");
        }
    }, t.duration = function() {
        return this.b.duration || 0;
    }, t.buffered = function() {
        return this.b.buffered;
    }, t.volume = function() {
        return this.b.volume;
    }, t.ld = function(a) {
        this.b.volume = a;
    }, t.muted = function() {
        return this.b.muted;
    }, t.jd = function(a) {
        this.b.muted = a;
    }, t.width = function() {
        return this.b.offsetWidth;
    }, t.height = function() {
        return this.b.offsetHeight;
    }, t.Sa = function() {
        return "function" != typeof this.b.webkitEnterFullScreen || !/Android/.test(u.G) && /Chrome|Mac OS X 10.5/.test(u.G) ? l : f;
    }, t.src = function(a) {
        this.b.src = a;
    }, t.load = function() {
        this.b.load();
    }, t.currentSrc = function() {
        return this.b.currentSrc;
    }, t.Pa = function() {
        return this.b.Pa;
    }, t.kd = function(a) {
        this.b.Pa = a;
    }, t.autoplay = function() {
        return this.b.autoplay;
    }, t.ed = function(a) {
        this.b.autoplay = a;
    }, t.loop = function() {
        return this.b.loop;
    }, t.hd = function(a) {
        this.b.loop = a;
    }, t.error = function() {
        return this.b.error;
    }, u.m.isSupported = function() {
        return !!u.ma.canPlayType;
    }, u.m.nb = function(a) {
        try {
            return !!u.ma.canPlayType(a.type);
        } catch (c) {
            return "";
        }
    }, u.m.Jc = function() {
        var a = u.ma.volume;
        return u.ma.volume = a / 2 + .1, a !== u.ma.volume;
    }, u.m.$a = "loadstart suspend abort error emptied stalled loadedmetadata loadeddata canplay canplaythrough playing waiting seeking seeked ended durationchange timeupdate progress play pause ratechange volumechange".split(" "), 
    u.Ec && (document.createElement("video").constructor.prototype.canPlayType = function(a) {
        return a && -1 != a.toLowerCase().indexOf("video/mp4") ? "maybe" : "";
    }), u.l = u.q.extend({
        g: function(a, c, d) {
            u.q.call(this, a, c, d), d = c.source;
            var e = c.parentEl, g = this.b = u.e("div", {
                id: a.id() + "_temp_flash"
            }), j = a.id() + "_flash_api";
            a = a.f;
            var k = u.i.B({
                readyFunction: "videojs.Flash.onReady",
                eventProxyFunction: "videojs.Flash.onEvent",
                errorEventProxyFunction: "videojs.Flash.onError",
                autoplay: a.autoplay,
                preload: a.Pa,
                loop: a.loop,
                muted: a.muted
            }, c.flashVars), q = u.i.B({
                wmode: "opaque",
                bgcolor: "#000000"
            }, c.params), n = u.i.B({
                id: j,
                name: j,
                "class": "vjs-tech"
            }, c.attributes);
            if (d && (k.src = encodeURIComponent(u.kc(d.src))), u.zb(g, e), c.startTime && this.P(function() {
                this.load(), this.play(), this.currentTime(c.startTime);
            }), c.iFrameMode !== f || u.Ac) u.l.Oc(c.swf, g, k, q, n); else {
                var s = u.e("iframe", {
                    id: j + "_iframe",
                    name: j + "_iframe",
                    className: "vjs-tech",
                    scrolling: "no",
                    marginWidth: 0,
                    marginHeight: 0,
                    frameBorder: 0
                });
                k.readyFunction = "ready", k.eventProxyFunction = "events", k.errorEventProxyFunction = "errors", 
                u.d(s, "load", u.bind(this, function() {
                    var a, d = s.contentWindow;
                    a = s.contentDocument ? s.contentDocument : s.contentWindow.document, a.write(u.l.lc(c.swf, k, q, n)), 
                    d.player = this.a, d.ready = u.bind(this.a, function(c) {
                        c = a.getElementById(c);
                        var d = this.h;
                        d.b = c, u.d(c, "click", d.bind(d.n)), u.l.qb(d);
                    }), d.events = u.bind(this.a, function(a, c) {
                        this && "flash" === this.ya && this.k(c);
                    }), d.errors = u.bind(this.a, function(a, c) {
                        u.log("Flash Error", c);
                    });
                })), g.parentNode.replaceChild(s, g);
            }
        }
    }), t = u.l.prototype, t.D = function() {
        u.q.prototype.D.call(this);
    }, t.play = function() {
        this.b.vjs_play();
    }, t.pause = function() {
        this.b.vjs_pause();
    }, t.src = function(a) {
        if (a = u.kc(a), this.b.vjs_src(a), this.a.autoplay()) {
            var c = this;
            setTimeout(function() {
                c.play();
            }, 0);
        }
    }, t.load = function() {
        this.b.vjs_load();
    }, t.poster = function() {
        this.b.vjs_getProperty("poster");
    }, t.buffered = function() {
        return u.tb(0, this.b.vjs_getProperty("buffered"));
    }, t.Sa = r(l);
    var P = u.l.prototype, Q = "preload currentTime defaultPlaybackRate playbackRate autoplay loop mediaGroup controller controls volume muted defaultMuted".split(" "), R = "error currentSrc networkState readyState seeking initialTime duration startOffsetTime paused played seekable ended videoTracks audioTracks videoWidth videoHeight textTracks".split(" "), S;
    for (S = 0; S < Q.length; S++) T(Q[S]), fa();
    for (S = 0; S < R.length; S++) T(R[S]);
    if (u.l.isSupported = function() {
        return 10 <= u.l.version()[0];
    }, u.l.nb = function(a) {
        return a.type in u.l.Rc ? "maybe" : void 0;
    }, u.l.Rc = {
        "video/flv": "FLV",
        "video/x-flv": "FLV",
        "video/mp4": "MP4",
        "video/m4v": "MP4"
    }, u.l.onReady = function(a) {
        a = u.r(a);
        var c = a.player || a.parentNode.player, d = c.h;
        a.player = c, d.b = a, d.d("click", d.n), u.l.qb(d);
    }, u.l.qb = function(a) {
        a.r().vjs_getProperty ? a.Ta() : setTimeout(function() {
            u.l.qb(a);
        }, 50);
    }, u.l.onEvent = function(a, c) {
        u.r(a).player.k(c);
    }, u.l.onError = function(a, c) {
        u.r(a).player.k("error"), u.log("Flash Error", c, a);
    }, u.l.version = function() {
        var a = "0,0,0";
        try {
            a = new window.ActiveXObject("ShockwaveFlash.ShockwaveFlash").GetVariable("$version").replace(/\D+/g, ",").match(/^,?(.+),?$/)[1];
        } catch (c) {
            try {
                navigator.mimeTypes["application/x-shockwave-flash"].enabledPlugin && (a = (navigator.plugins["Shockwave Flash 2.0"] || navigator.plugins["Shockwave Flash"]).description.replace(/\D+/g, ",").match(/^,?(.+),?$/)[1]);
            } catch (d) {}
        }
        return a.split(",");
    }, u.l.Oc = function(a, c, d, e, g) {
        a = u.l.lc(a, d, e, g), a = u.e("div", {
            innerHTML: a
        }).childNodes[0], d = c.parentNode, c.parentNode.replaceChild(a, c);
        var j = d.childNodes[0];
        setTimeout(function() {
            j.style.display = "block";
        }, 1e3);
    }, u.l.lc = function(a, c, d, e) {
        var g = "", j = "", k = "";
        return c && u.i.ra(c, function(a, c) {
            g += a + "=" + c + "&amp;";
        }), d = u.i.B({
            movie: a,
            flashvars: g,
            allowScriptAccess: "always",
            allowNetworking: "all"
        }, d), u.i.ra(d, function(a, c) {
            j += '<param name="' + a + '" value="' + c + '" />';
        }), e = u.i.B({
            data: a,
            width: "100%",
            height: "100%"
        }, e), u.i.ra(e, function(a, c) {
            k += a + '="' + c + '" ';
        }), '<object type="application/x-shockwave-flash"' + k + ">" + j + "</object>";
    }, u.Fc = u.c.extend({
        g: function(a, c, d) {
            if (u.c.call(this, a, c, d), a.f.sources && 0 !== a.f.sources.length) a.src(a.f.sources); else for (c = 0, 
            d = a.f.techOrder; c < d.length; c++) {
                var e = u.Z(d[c]), g = window.videojs[e];
                if (g && g.isSupported()) {
                    H(a, e);
                    break;
                }
            }
        }
    }), u.V = u.c.extend({
        g: function(a, c) {
            u.c.call(this, a, c), this.O = c.id || "vjs_" + c.kind + "_" + c.language + "_" + u.u++, 
            this.uc = c.src, this.Lc = c["default"] || c.dflt, this.nd = c.title, this.yd = c.srclang, 
            this.Tc = c.label, this.ha = [], this.cc = [], this.ia = this.ja = 0, this.a.d("fullscreenchange", u.bind(this, this.Gc));
        }
    }), t = u.V.prototype, t.K = p("A"), t.src = p("uc"), t.ub = p("Lc"), t.title = p("nd"), 
    t.label = p("Tc"), t.readyState = p("ja"), t.mode = p("ia"), t.Gc = function() {
        this.b.style.fontSize = this.a.I ? 140 * (screen.width / this.a.width()) + "%" : "";
    }, t.e = function() {
        return u.c.prototype.e.call(this, "div", {
            className: "vjs-" + this.A + " vjs-text-track"
        });
    }, t.show = function() {
        W(this), this.ia = 2, u.c.prototype.show.call(this);
    }, t.v = function() {
        W(this), this.ia = 1, u.c.prototype.v.call(this);
    }, t.disable = function() {
        2 == this.ia && this.v(), this.a.t("timeupdate", u.bind(this, this.update, this.O)), 
        this.a.t("ended", u.bind(this, this.reset, this.O)), this.reset(), this.a.S.textTrackDisplay.removeChild(this), 
        this.ia = 0;
    }, t.load = function() {
        0 === this.ja && (this.ja = 1, u.get(this.uc, u.bind(this, this.ad), u.bind(this, this.Gb)));
    }, t.Gb = function(a) {
        this.error = a, this.ja = 3, this.k("error");
    }, t.ad = function(a) {
        var c, d;
        a = a.split("\n");
        for (var e = "", g = 1, j = a.length; j > g; g++) if (e = u.trim(a[g])) {
            for (-1 == e.indexOf("-->") ? (c = e, e = u.trim(a[++g])) : c = this.ha.length, 
            c = {
                id: c,
                index: this.ha.length
            }, d = e.split(" --> "), c.startTime = X(d[0]), c.sa = X(d[1]), d = []; a[++g] && (e = u.trim(a[g])); ) d.push(e);
            c.text = d.join("<br/>"), this.ha.push(c);
        }
        this.ja = 2, this.k("loaded");
    }, t.update = function() {
        if (0 < this.ha.length) {
            var a = this.a.currentTime();
            if (this.Lb === b || a < this.Lb || this.La <= a) {
                var k, q, n, s, c = this.ha, d = this.a.duration(), e = 0, g = l, j = [];
                for (a >= this.La || this.La === b ? s = this.wb !== b ? this.wb : 0 : (g = f, s = this.Db !== b ? this.Db : c.length - 1); ;) {
                    if (n = c[s], n.sa <= a) e = Math.max(e, n.sa), n.Ga && (n.Ga = l); else if (a < n.startTime) {
                        if (d = Math.min(d, n.startTime), n.Ga && (n.Ga = l), !g) break;
                    } else g ? (j.splice(0, 0, n), q === b && (q = s), k = s) : (j.push(n), k === b && (k = s), 
                    q = s), d = Math.min(d, n.sa), e = Math.max(e, n.startTime), n.Ga = f;
                    if (g) {
                        if (0 === s) break;
                        s--;
                    } else {
                        if (s === c.length - 1) break;
                        s++;
                    }
                }
                for (this.cc = j, this.La = d, this.Lb = e, this.wb = k, this.Db = q, a = this.cc, 
                c = "", d = 0, e = a.length; e > d; d++) c += '<span class="vjs-tt-cue">' + a[d].text + "</span>";
                this.b.innerHTML = c, this.k("cuechange");
            }
        }
    }, t.reset = function() {
        this.La = 0, this.Lb = this.a.duration(), this.Db = this.wb = 0;
    }, u.Rb = u.V.extend(), u.Rb.prototype.A = "captions", u.Zb = u.V.extend(), u.Zb.prototype.A = "subtitles", 
    u.Tb = u.V.extend(), u.Tb.prototype.A = "chapters", u.$b = u.c.extend({
        g: function(a, c, d) {
            if (u.c.call(this, a, c, d), a.f.tracks && 0 < a.f.tracks.length) {
                c = this.a, a = a.f.tracks;
                var e;
                for (d = 0; d < a.length; d++) {
                    e = a[d];
                    var g = c, j = e.kind, k = e.label, q = e.language, n = e;
                    e = g.za = g.za || [], n = n || {}, n.kind = j, n.label = k, n.language = q, j = u.Z(j || "subtitles"), 
                    g = new window.videojs[j + "Track"](g, n), e.push(g);
                }
            }
        }
    }), u.$b.prototype.e = function() {
        return u.c.prototype.e.call(this, "div", {
            className: "vjs-text-track-display"
        });
    }, u.X = u.L.extend({
        g: function(a, c) {
            var d = this.ca = c.track;
            c.label = d.label(), c.selected = d.ub(), u.L.call(this, a, c), this.a.d(d.K() + "trackchange", u.bind(this, this.update));
        }
    }), u.X.prototype.n = function() {
        u.L.prototype.n.call(this), V(this.a, this.ca.O, this.ca.K());
    }, u.X.prototype.update = function() {
        this.selected(2 == this.ca.mode());
    }, u.cb = u.X.extend({
        g: function(a, c) {
            c.track = {
                K: function() {
                    return c.kind;
                },
                bd: a,
                label: function() {
                    return c.kind + " off";
                },
                ub: r(l),
                mode: r(l)
            }, u.X.call(this, a, c), this.selected(f);
        }
    }), u.cb.prototype.n = function() {
        u.X.prototype.n.call(this), V(this.a, this.ca.O, this.ca.K());
    }, u.cb.prototype.update = function() {
        for (var e, a = U(this.a), c = 0, d = a.length, g = f; d > c; c++) e = a[c], e.K() == this.ca.K() && 2 == e.mode() && (g = l);
        this.selected(g);
    }, u.W = u.ea.extend({
        g: function(a, c) {
            u.ea.call(this, a, c), 1 >= this.J.length && this.v();
        }
    }), u.W.prototype.sb = function() {
        var c, a = [];
        a.push(new u.cb(this.a, {
            kind: this.A
        }));
        for (var d = 0; d < U(this.a).length; d++) c = U(this.a)[d], c.K() === this.A && a.push(new u.X(this.a, {
            track: c
        }));
        return a;
    }, u.Ca = u.W.extend({
        g: function(a, c, d) {
            u.W.call(this, a, c, d), this.b.setAttribute("aria-label", "Captions Menu");
        }
    }), u.Ca.prototype.A = "captions", u.Ca.prototype.oa = "Captions", u.Ca.prototype.className = "vjs-captions-button", 
    u.Ea = u.W.extend({
        g: function(a, c, d) {
            u.W.call(this, a, c, d), this.b.setAttribute("aria-label", "Subtitles Menu");
        }
    }), u.Ea.prototype.A = "subtitles", u.Ea.prototype.oa = "Subtitles", u.Ea.prototype.className = "vjs-subtitles-button", 
    u.Sb = u.W.extend({
        g: function(a, c, d) {
            u.W.call(this, a, c, d), this.b.setAttribute("aria-label", "Chapters Menu");
        }
    }), t = u.Sb.prototype, t.A = "chapters", t.oa = "Chapters", t.className = "vjs-chapters-button", 
    t.sb = function() {
        for (var c, a = [], d = 0; d < U(this.a).length; d++) c = U(this.a)[d], c.K() === this.A && a.push(new u.X(this.a, {
            track: c
        }));
        return a;
    }, t.Ja = function() {
        for (var e, g, a = U(this.a), c = 0, d = a.length, j = this.J = []; d > c; c++) if (e = a[c], 
        e.K() == this.A && e.ub()) {
            if (2 > e.readyState()) return this.wd = e, void e.d("loaded", u.bind(this, this.Ja));
            g = e;
            break;
        }
        if (a = this.ua = new u.la(this.a), a.b.appendChild(u.e("li", {
            className: "vjs-menu-title",
            innerHTML: u.Z(this.A),
            md: -1
        })), g) {
            e = g.ha;
            for (var k, c = 0, d = e.length; d > c; c++) k = e[c], k = new u.Xa(this.a, {
                track: g,
                cue: k
            }), j.push(k), a.Y(k);
        }
        return 0 < this.J.length && this.show(), a;
    }, u.Xa = u.L.extend({
        g: function(a, c) {
            var d = this.ca = c.track, e = this.cue = c.cue, g = a.currentTime();
            c.label = e.text, c.selected = e.startTime <= g && g < e.sa, u.L.call(this, a, c), 
            d.d("cuechange", u.bind(this, this.update));
        }
    }), u.Xa.prototype.n = function() {
        u.L.prototype.n.call(this), this.a.currentTime(this.cue.startTime), this.update(this.cue.startTime);
    }, u.Xa.prototype.update = function() {
        var a = this.cue, c = this.a.currentTime();
        this.selected(a.startTime <= c && c < a.sa);
    }, u.i.B(u.da.prototype.f.children, {
        subtitlesButton: {},
        captionsButton: {},
        chaptersButton: {}
    }), "undefined" != typeof window.JSON && "function" === window.JSON.parse) u.JSON = window.JSON; else {
        u.JSON = {};
        var Y = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g;
        u.JSON.parse = function(a, c) {
            function d(a, e) {
                var k, q, n = a[e];
                if (n && "object" == typeof n) for (k in n) Object.prototype.hasOwnProperty.call(n, k) && (q = d(n, k), 
                q !== b ? n[k] = q : delete n[k]);
                return c.call(a, e, n);
            }
            var e;
            if (a = String(a), Y.lastIndex = 0, Y.test(a) && (a = a.replace(Y, function(a) {
                return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4);
            })), /^[\],:{}\s]*$/.test(a.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) return e = eval("(" + a + ")"), 
            "function" == typeof c ? d({
                "": e
            }, "") : e;
            throw new SyntaxError("JSON.parse(): invalid or malformed JSON data");
        };
    }
    u.dc = function() {
        var a, c, d = document.getElementsByTagName("video");
        if (d && 0 < d.length) for (var e = 0, g = d.length; g > e; e++) {
            if (!(c = d[e]) || !c.getAttribute) {
                u.lb();
                break;
            }
            c.player === b && (a = c.getAttribute("data-setup"), a !== h && (a = u.JSON.parse(a || "{}"), 
            v(c, a)));
        } else u.rd || u.lb();
    }, u.lb = function() {
        setTimeout(u.dc, 1);
    }, u.R(window, "load", function() {
        u.rd = f;
    }), u.lb(), u.cd = function(a, c) {
        u.C.prototype[a] = c;
    };
    var Z = this;
    Z.sd = f, $("videojs", u), $("_V_", u), $("videojs.options", u.options), $("videojs.players", u.va), 
    $("videojs.cache", u.pa), $("videojs.Component", u.c), u.c.prototype.dispose = u.c.prototype.D, 
    u.c.prototype.createEl = u.c.prototype.e, u.c.prototype.el = u.c.prototype.r, u.c.prototype.addChild = u.c.prototype.Y, 
    u.c.prototype.children = u.c.prototype.children, u.c.prototype.on = u.c.prototype.d, 
    u.c.prototype.off = u.c.prototype.t, u.c.prototype.one = u.c.prototype.R, u.c.prototype.trigger = u.c.prototype.k, 
    u.c.prototype.triggerReady = u.c.prototype.Ta, u.c.prototype.show = u.c.prototype.show, 
    u.c.prototype.hide = u.c.prototype.v, u.c.prototype.width = u.c.prototype.width, 
    u.c.prototype.height = u.c.prototype.height, u.c.prototype.dimensions = u.c.prototype.Mc, 
    u.c.prototype.ready = u.c.prototype.P, u.c.prototype.fadeIn = u.c.prototype.$, u.c.prototype.fadeOut = u.c.prototype.ta, 
    $("videojs.Player", u.C), u.C.prototype.dispose = u.C.prototype.D, u.C.prototype.requestFullScreen = u.C.prototype.wa, 
    u.C.prototype.cancelFullScreen = u.C.prototype.pb, u.C.prototype.bufferedPercent = u.C.prototype.Ha, 
    $("videojs.MediaLoader", u.Fc), $("videojs.TextTrackDisplay", u.$b), $("videojs.ControlBar", u.da), 
    $("videojs.Button", u.o), $("videojs.PlayToggle", u.Xb), $("videojs.FullscreenToggle", u.Da), 
    $("videojs.BigPlayButton", u.Wa), $("videojs.LoadingSpinner", u.Vb), $("videojs.CurrentTimeDisplay", u.Ya), 
    $("videojs.DurationDisplay", u.Za), $("videojs.TimeDivider", u.ac), $("videojs.RemainingTimeDisplay", u.gb), 
    $("videojs.Slider", u.M), $("videojs.ProgressControl", u.fb), $("videojs.SeekBar", u.Yb), 
    $("videojs.LoadProgressBar", u.bb), $("videojs.PlayProgressBar", u.Wb), $("videojs.SeekHandle", u.hb), 
    $("videojs.VolumeControl", u.jb), $("videojs.VolumeBar", u.ib), $("videojs.VolumeLevel", u.bc), 
    $("videojs.VolumeHandle", u.kb), $("videojs.MuteToggle", u.fa), $("videojs.PosterImage", u.eb), 
    $("videojs.Menu", u.la), $("videojs.MenuItem", u.L), $("videojs.SubtitlesButton", u.Ea), 
    $("videojs.CaptionsButton", u.Ca), $("videojs.ChaptersButton", u.Sb), $("videojs.MediaTechController", u.q), 
    u.q.prototype.features = u.q.prototype.j, u.q.prototype.j.volumeControl = u.q.prototype.j.U, 
    u.q.prototype.j.fullscreenResize = u.q.prototype.j.jc, u.q.prototype.j.progressEvents = u.q.prototype.j.Mb, 
    u.q.prototype.j.timeupdateEvents = u.q.prototype.j.Pb, $("videojs.Html5", u.m), 
    u.m.Events = u.m.$a, u.m.isSupported = u.m.isSupported, u.m.canPlaySource = u.m.nb, 
    u.m.prototype.setCurrentTime = u.m.prototype.fd, u.m.prototype.setVolume = u.m.prototype.ld, 
    u.m.prototype.setMuted = u.m.prototype.jd, u.m.prototype.setPreload = u.m.prototype.kd, 
    u.m.prototype.setAutoplay = u.m.prototype.ed, u.m.prototype.setLoop = u.m.prototype.hd, 
    $("videojs.Flash", u.l), u.l.isSupported = u.l.isSupported, u.l.canPlaySource = u.l.nb, 
    u.l.onReady = u.l.onReady, $("videojs.TextTrack", u.V), u.V.prototype.label = u.V.prototype.label, 
    $("videojs.CaptionsTrack", u.Rb), $("videojs.SubtitlesTrack", u.Zb), $("videojs.ChaptersTrack", u.Tb), 
    $("videojs.autoSetup", u.dc), $("videojs.plugin", u.cd), $("videojs.createTimeRange", u.tb);
}(), function($) {
    function getVendorPropertyName(prop) {
        if (prop in div.style) return prop;
        var prefixes = [ "Moz", "Webkit", "O", "ms" ], prop_ = prop.charAt(0).toUpperCase() + prop.substr(1);
        if (prop in div.style) return prop;
        for (var i = 0; i < prefixes.length; ++i) {
            var vendorProp = prefixes[i] + prop_;
            if (vendorProp in div.style) return vendorProp;
        }
    }
    function checkTransform3dSupport() {
        return div.style[support.transform] = "", div.style[support.transform] = "rotateY(90deg)", 
        "" !== div.style[support.transform];
    }
    function Transform(str) {
        return "string" == typeof str && this.parse(str), this;
    }
    function callOrQueue(self, queue, fn) {
        queue === !0 ? self.queue(fn) : queue ? self.queue(queue, fn) : fn();
    }
    function getProperties(props) {
        var re = [];
        return $.each(props, function(key) {
            key = $.camelCase(key), key = $.transit.propertyMap[key] || $.cssProps[key] || key, 
            key = uncamel(key), support[key] && (key = uncamel(support[key])), -1 === $.inArray(key, re) && re.push(key);
        }), re;
    }
    function getTransition(properties, duration, easing, delay) {
        var props = getProperties(properties);
        $.cssEase[easing] && (easing = $.cssEase[easing]);
        var attribs = "" + toMS(duration) + " " + easing;
        parseInt(delay, 10) > 0 && (attribs += " " + toMS(delay));
        var transitions = [];
        return $.each(props, function(i, name) {
            transitions.push(name + " " + attribs);
        }), transitions.join(", ");
    }
    function registerCssHook(prop, isPixels) {
        isPixels || ($.cssNumber[prop] = !0), $.transit.propertyMap[prop] = support.transform, 
        $.cssHooks[prop] = {
            get: function(elem) {
                var t = $(elem).css("transit:transform");
                return t.get(prop);
            },
            set: function(elem, value) {
                var t = $(elem).css("transit:transform");
                t.setFromString(prop, value), $(elem).css({
                    "transit:transform": t
                });
            }
        };
    }
    function uncamel(str) {
        return str.replace(/([A-Z])/g, function(letter) {
            return "-" + letter.toLowerCase();
        });
    }
    function unit(i, units) {
        return "string" != typeof i || i.match(/^[\-0-9\.]+$/) ? "" + i + units : i;
    }
    function toMS(duration) {
        var i = duration;
        return "string" != typeof i || i.match(/^[\-0-9\.]+/) || (i = $.fx.speeds[i] || $.fx.speeds._default), 
        unit(i, "ms");
    }
    $.transit = {
        version: "0.9.9",
        propertyMap: {
            marginLeft: "margin",
            marginRight: "margin",
            marginBottom: "margin",
            marginTop: "margin",
            paddingLeft: "padding",
            paddingRight: "padding",
            paddingBottom: "padding",
            paddingTop: "padding"
        },
        enabled: !0,
        useTransitionEnd: !1
    };
    var div = document.createElement("div"), support = {}, isChrome = navigator.userAgent.toLowerCase().indexOf("chrome") > -1;
    support.transition = getVendorPropertyName("transition"), support.transitionDelay = getVendorPropertyName("transitionDelay"), 
    support.transform = getVendorPropertyName("transform"), support.transformOrigin = getVendorPropertyName("transformOrigin"), 
    support.filter = getVendorPropertyName("Filter"), support.transform3d = checkTransform3dSupport();
    var eventNames = {
        transition: "transitionEnd",
        MozTransition: "transitionend",
        OTransition: "oTransitionEnd",
        WebkitTransition: "webkitTransitionEnd",
        msTransition: "MSTransitionEnd"
    }, transitionEnd = support.transitionEnd = eventNames[support.transition] || null;
    for (var key in support) support.hasOwnProperty(key) && "undefined" == typeof $.support[key] && ($.support[key] = support[key]);
    div = null, $.cssEase = {
        _default: "ease",
        "in": "ease-in",
        out: "ease-out",
        "in-out": "ease-in-out",
        snap: "cubic-bezier(0,1,.5,1)",
        easeOutCubic: "cubic-bezier(.215,.61,.355,1)",
        easeInOutCubic: "cubic-bezier(.645,.045,.355,1)",
        easeInCirc: "cubic-bezier(.6,.04,.98,.335)",
        easeOutCirc: "cubic-bezier(.075,.82,.165,1)",
        easeInOutCirc: "cubic-bezier(.785,.135,.15,.86)",
        easeInExpo: "cubic-bezier(.95,.05,.795,.035)",
        easeOutExpo: "cubic-bezier(.19,1,.22,1)",
        easeInOutExpo: "cubic-bezier(1,0,0,1)",
        easeInQuad: "cubic-bezier(.55,.085,.68,.53)",
        easeOutQuad: "cubic-bezier(.25,.46,.45,.94)",
        easeInOutQuad: "cubic-bezier(.455,.03,.515,.955)",
        easeInQuart: "cubic-bezier(.895,.03,.685,.22)",
        easeOutQuart: "cubic-bezier(.165,.84,.44,1)",
        easeInOutQuart: "cubic-bezier(.77,0,.175,1)",
        easeInQuint: "cubic-bezier(.755,.05,.855,.06)",
        easeOutQuint: "cubic-bezier(.23,1,.32,1)",
        easeInOutQuint: "cubic-bezier(.86,0,.07,1)",
        easeInSine: "cubic-bezier(.47,0,.745,.715)",
        easeOutSine: "cubic-bezier(.39,.575,.565,1)",
        easeInOutSine: "cubic-bezier(.445,.05,.55,.95)",
        easeInBack: "cubic-bezier(.6,-.28,.735,.045)",
        easeOutBack: "cubic-bezier(.175, .885,.32,1.275)",
        easeInOutBack: "cubic-bezier(.68,-.55,.265,1.55)"
    }, $.cssHooks["transit:transform"] = {
        get: function(elem) {
            return $(elem).data("transform") || new Transform();
        },
        set: function(elem, v) {
            var value = v;
            value instanceof Transform || (value = new Transform(value)), elem.style[support.transform] = "WebkitTransform" !== support.transform || isChrome ? value.toString() : value.toString(!0), 
            $(elem).data("transform", value);
        }
    }, $.cssHooks.transform = {
        set: $.cssHooks["transit:transform"].set
    }, $.cssHooks.filter = {
        get: function(elem) {
            return elem.style[support.filter];
        },
        set: function(elem, value) {
            elem.style[support.filter] = value;
        }
    }, $.fn.jquery < "1.8" && ($.cssHooks.transformOrigin = {
        get: function(elem) {
            return elem.style[support.transformOrigin];
        },
        set: function(elem, value) {
            elem.style[support.transformOrigin] = value;
        }
    }, $.cssHooks.transition = {
        get: function(elem) {
            return elem.style[support.transition];
        },
        set: function(elem, value) {
            elem.style[support.transition] = value;
        }
    }), registerCssHook("scale"), registerCssHook("translate"), registerCssHook("rotate"), 
    registerCssHook("rotateX"), registerCssHook("rotateY"), registerCssHook("rotate3d"), 
    registerCssHook("perspective"), registerCssHook("skewX"), registerCssHook("skewY"), 
    registerCssHook("x", !0), registerCssHook("y", !0), Transform.prototype = {
        setFromString: function(prop, val) {
            var args = "string" == typeof val ? val.split(",") : val.constructor === Array ? val : [ val ];
            args.unshift(prop), Transform.prototype.set.apply(this, args);
        },
        set: function(prop) {
            var args = Array.prototype.slice.apply(arguments, [ 1 ]);
            this.setter[prop] ? this.setter[prop].apply(this, args) : this[prop] = args.join(",");
        },
        get: function(prop) {
            return this.getter[prop] ? this.getter[prop].apply(this) : this[prop] || 0;
        },
        setter: {
            rotate: function(theta) {
                this.rotate = unit(theta, "deg");
            },
            rotateX: function(theta) {
                this.rotateX = unit(theta, "deg");
            },
            rotateY: function(theta) {
                this.rotateY = unit(theta, "deg");
            },
            scale: function(x, y) {
                void 0 === y && (y = x), this.scale = x + "," + y;
            },
            skewX: function(x) {
                this.skewX = unit(x, "deg");
            },
            skewY: function(y) {
                this.skewY = unit(y, "deg");
            },
            perspective: function(dist) {
                this.perspective = unit(dist, "px");
            },
            x: function(x) {
                this.set("translate", x, null);
            },
            y: function(y) {
                this.set("translate", null, y);
            },
            translate: function(x, y) {
                void 0 === this._translateX && (this._translateX = 0), void 0 === this._translateY && (this._translateY = 0), 
                null !== x && void 0 !== x && (this._translateX = unit(x, "px")), null !== y && void 0 !== y && (this._translateY = unit(y, "px")), 
                this.translate = this._translateX + "," + this._translateY;
            }
        },
        getter: {
            x: function() {
                return this._translateX || 0;
            },
            y: function() {
                return this._translateY || 0;
            },
            scale: function() {
                var s = (this.scale || "1,1").split(",");
                return s[0] && (s[0] = parseFloat(s[0])), s[1] && (s[1] = parseFloat(s[1])), s[0] === s[1] ? s[0] : s;
            },
            rotate3d: function() {
                for (var s = (this.rotate3d || "0,0,0,0deg").split(","), i = 0; 3 >= i; ++i) s[i] && (s[i] = parseFloat(s[i]));
                return s[3] && (s[3] = unit(s[3], "deg")), s;
            }
        },
        parse: function(str) {
            var self = this;
            str.replace(/([a-zA-Z0-9]+)\((.*?)\)/g, function(x, prop, val) {
                self.setFromString(prop, val);
            });
        },
        toString: function(use3d) {
            var re = [];
            for (var i in this) if (this.hasOwnProperty(i)) {
                if (!support.transform3d && ("rotateX" === i || "rotateY" === i || "perspective" === i || "transformOrigin" === i)) continue;
                "_" !== i[0] && re.push(use3d && "scale" === i ? i + "3d(" + this[i] + ",1)" : use3d && "translate" === i ? i + "3d(" + this[i] + ",0)" : i + "(" + this[i] + ")");
            }
            return re.join(" ");
        }
    }, $.fn.transition = $.fn.transit = function(properties, duration, easing, callback) {
        var self = this, delay = 0, queue = !0, theseProperties = jQuery.extend(!0, {}, properties);
        "function" == typeof duration && (callback = duration, duration = void 0), "object" == typeof duration && (easing = duration.easing, 
        delay = duration.delay || 0, queue = duration.queue || !0, callback = duration.complete, 
        duration = duration.duration), "function" == typeof easing && (callback = easing, 
        easing = void 0), "undefined" != typeof theseProperties.easing && (easing = theseProperties.easing, 
        delete theseProperties.easing), "undefined" != typeof theseProperties.duration && (duration = theseProperties.duration, 
        delete theseProperties.duration), "undefined" != typeof theseProperties.complete && (callback = theseProperties.complete, 
        delete theseProperties.complete), "undefined" != typeof theseProperties.queue && (queue = theseProperties.queue, 
        delete theseProperties.queue), "undefined" != typeof theseProperties.delay && (delay = theseProperties.delay, 
        delete theseProperties.delay), "undefined" == typeof duration && (duration = $.fx.speeds._default), 
        "undefined" == typeof easing && (easing = $.cssEase._default), duration = toMS(duration);
        var transitionValue = getTransition(theseProperties, duration, easing, delay), work = $.transit.enabled && support.transition, i = work ? parseInt(duration, 10) + parseInt(delay, 10) : 0;
        if (0 === i) {
            var fn = function(next) {
                self.css(theseProperties), callback && callback.apply(self), next && next();
            };
            return callOrQueue(self, queue, fn), self;
        }
        var oldTransitions = {}, run = function(nextCall) {
            var bound = !1, cb = function() {
                bound && self.unbind(transitionEnd, cb), i > 0 && self.each(function() {
                    this.style[support.transition] = oldTransitions[this] || null;
                }), "function" == typeof callback && callback.apply(self), "function" == typeof nextCall && nextCall();
            };
            i > 0 && transitionEnd && $.transit.useTransitionEnd ? (bound = !0, self.bind(transitionEnd, cb)) : window.setTimeout(cb, i), 
            self.each(function() {
                i > 0 && (this.style[support.transition] = transitionValue), $(this).css(properties);
            });
        }, deferredRun = function(next) {
            this.offsetWidth, run(next);
        };
        return callOrQueue(self, queue, deferredRun), this;
    }, $.transit.getTransitionValue = getTransition;
}(jQuery), !function() {
    var a, b, c, d;
    !function() {
        var e = {}, f = {};
        a = function(a, b, c) {
            e[a] = {
                deps: b,
                callback: c
            };
        }, d = c = b = function(a) {
            function c(b) {
                if ("." !== b.charAt(0)) return b;
                for (var c = b.split("/"), d = a.split("/").slice(0, -1), e = 0, f = c.length; f > e; e++) {
                    var g = c[e];
                    if (".." === g) d.pop(); else {
                        if ("." === g) continue;
                        d.push(g);
                    }
                }
                return d.join("/");
            }
            if (d._eak_seen = e, f[a]) return f[a];
            if (f[a] = {}, !e[a]) throw new Error("Could not find module " + a);
            for (var g, h = e[a], i = h.deps, j = h.callback, k = [], l = 0, m = i.length; m > l; l++) k.push("exports" === i[l] ? g = {} : b(c(i[l])));
            var n = j.apply(this, k);
            return f[a] = g || n;
        };
    }(), a("promise/all", [ "./utils", "exports" ], function(a, b) {
        "use strict";
        function c(a) {
            var b = this;
            if (!d(a)) throw new TypeError("You must pass an array to all.");
            return new b(function(b, c) {
                function d(a) {
                    return function(b) {
                        f(a, b);
                    };
                }
                function f(a, c) {
                    h[a] = c, 0 === --i && b(h);
                }
                var g, h = [], i = a.length;
                0 === i && b([]);
                for (var j = 0; j < a.length; j++) g = a[j], g && e(g.then) ? g.then(d(j), c) : f(j, g);
            });
        }
        var d = a.isArray, e = a.isFunction;
        b.all = c;
    }), a("promise/asap", [ "exports" ], function(a) {
        "use strict";
        function b() {
            return function() {
                process.nextTick(e);
            };
        }
        function c() {
            var a = 0, b = new i(e), c = document.createTextNode("");
            return b.observe(c, {
                characterData: !0
            }), function() {
                c.data = a = ++a % 2;
            };
        }
        function d() {
            return function() {
                j.setTimeout(e, 1);
            };
        }
        function e() {
            for (var a = 0; a < k.length; a++) {
                var b = k[a], c = b[0], d = b[1];
                c(d);
            }
            k = [];
        }
        function f(a, b) {
            var c = k.push([ a, b ]);
            1 === c && g();
        }
        var g, h = "undefined" != typeof window ? window : {}, i = h.MutationObserver || h.WebKitMutationObserver, j = "undefined" != typeof global ? global : this, k = [];
        g = "undefined" != typeof process && "[object process]" === {}.toString.call(process) ? b() : i ? c() : d(), 
        a.asap = f;
    }), a("promise/cast", [ "exports" ], function(a) {
        "use strict";
        function b(a) {
            if (a && "object" == typeof a && a.constructor === this) return a;
            var b = this;
            return new b(function(b) {
                b(a);
            });
        }
        a.cast = b;
    }), a("promise/config", [ "exports" ], function(a) {
        "use strict";
        function b(a, b) {
            return 2 !== arguments.length ? c[a] : void (c[a] = b);
        }
        var c = {
            instrument: !1
        };
        a.config = c, a.configure = b;
    }), a("promise/polyfill", [ "./promise", "./utils", "exports" ], function(a, b, c) {
        "use strict";
        function d() {
            var a = "Promise" in window && "cast" in window.Promise && "resolve" in window.Promise && "reject" in window.Promise && "all" in window.Promise && "race" in window.Promise && function() {
                var a;
                return new window.Promise(function(b) {
                    a = b;
                }), f(a);
            }();
            a || (window.Promise = e);
        }
        var e = a.Promise, f = b.isFunction;
        c.polyfill = d;
    }), a("promise/promise", [ "./config", "./utils", "./cast", "./all", "./race", "./resolve", "./reject", "./asap", "exports" ], function(a, b, c, d, e, f, g, h, i) {
        "use strict";
        function j(a) {
            if (!w(a)) throw new TypeError("You must pass a resolver function as the first argument to the promise constructor");
            if (!(this instanceof j)) throw new TypeError("Failed to construct 'Promise': Please use the 'new' operator, this object constructor cannot be called as a function.");
            this._subscribers = [], k(a, this);
        }
        function k(a, b) {
            function c(a) {
                p(b, a);
            }
            function d(a) {
                r(b, a);
            }
            try {
                a(c, d);
            } catch (e) {
                d(e);
            }
        }
        function l(a, b, c, d) {
            var e, f, g, h, i = w(c);
            if (i) try {
                e = c(d), g = !0;
            } catch (j) {
                h = !0, f = j;
            } else e = d, g = !0;
            o(b, e) || (i && g ? p(b, e) : h ? r(b, f) : a === F ? p(b, e) : a === G && r(b, e));
        }
        function m(a, b, c, d) {
            var e = a._subscribers, f = e.length;
            e[f] = b, e[f + F] = c, e[f + G] = d;
        }
        function n(a, b) {
            for (var c, d, e = a._subscribers, f = a._detail, g = 0; g < e.length; g += 3) c = e[g], 
            d = e[g + b], l(b, c, d, f);
            a._subscribers = null;
        }
        function o(a, b) {
            var c, d = null;
            try {
                if (a === b) throw new TypeError("A promises callback cannot return that same promise.");
                if (v(b) && (d = b.then, w(d))) return d.call(b, function(d) {
                    return c ? !0 : (c = !0, void (b !== d ? p(a, d) : q(a, d)));
                }, function(b) {
                    return c ? !0 : (c = !0, void r(a, b));
                }), !0;
            } catch (e) {
                return c ? !0 : (r(a, e), !0);
            }
            return !1;
        }
        function p(a, b) {
            a === b ? q(a, b) : o(a, b) || q(a, b);
        }
        function q(a, b) {
            a._state === D && (a._state = E, a._detail = b, u.async(s, a));
        }
        function r(a, b) {
            a._state === D && (a._state = E, a._detail = b, u.async(t, a));
        }
        function s(a) {
            n(a, a._state = F);
        }
        function t(a) {
            n(a, a._state = G);
        }
        var u = a.config, v = (a.configure, b.objectOrFunction), w = b.isFunction, x = (b.now, 
        c.cast), y = d.all, z = e.race, A = f.resolve, B = g.reject, C = h.asap;
        u.async = C;
        var D = void 0, E = 0, F = 1, G = 2;
        j.prototype = {
            constructor: j,
            _state: void 0,
            _detail: void 0,
            _subscribers: void 0,
            then: function(a, b) {
                var c = this, d = new this.constructor(function() {});
                if (this._state) {
                    var e = arguments;
                    u.async(function() {
                        l(c._state, d, e[c._state - 1], c._detail);
                    });
                } else m(this, d, a, b);
                return d;
            },
            "catch": function(a) {
                return this.then(null, a);
            }
        }, j.all = y, j.cast = x, j.race = z, j.resolve = A, j.reject = B, i.Promise = j;
    }), a("promise/race", [ "./utils", "exports" ], function(a, b) {
        "use strict";
        function c(a) {
            var b = this;
            if (!d(a)) throw new TypeError("You must pass an array to race.");
            return new b(function(b, c) {
                for (var d, e = 0; e < a.length; e++) d = a[e], d && "function" == typeof d.then ? d.then(b, c) : b(d);
            });
        }
        var d = a.isArray;
        b.race = c;
    }), a("promise/reject", [ "exports" ], function(a) {
        "use strict";
        function b(a) {
            var b = this;
            return new b(function(b, c) {
                c(a);
            });
        }
        a.reject = b;
    }), a("promise/resolve", [ "exports" ], function(a) {
        "use strict";
        function b(a) {
            var b = this;
            return new b(function(b) {
                b(a);
            });
        }
        a.resolve = b;
    }), a("promise/utils", [ "exports" ], function(a) {
        "use strict";
        function b(a) {
            return c(a) || "object" == typeof a && null !== a;
        }
        function c(a) {
            return "function" == typeof a;
        }
        function d(a) {
            return "[object Array]" === Object.prototype.toString.call(a);
        }
        var e = Date.now || function() {
            return new Date().getTime();
        };
        a.objectOrFunction = b, a.isFunction = c, a.isArray = d, a.now = e;
    }), b("promise/polyfill").polyfill();
}();

var mejs = mejs || {};

mejs.version = "2.13.2", mejs.meIndex = 0, mejs.plugins = {
    silverlight: [ {
        version: [ 3, 0 ],
        types: [ "video/mp4", "video/m4v", "video/mov", "video/wmv", "audio/wma", "audio/m4a", "audio/mp3", "audio/wav", "audio/mpeg" ]
    } ],
    flash: [ {
        version: [ 9, 0, 124 ],
        types: [ "video/mp4", "video/m4v", "video/mov", "video/flv", "video/rtmp", "video/x-flv", "audio/flv", "audio/x-flv", "audio/mp3", "audio/m4a", "audio/mpeg", "video/youtube", "video/x-youtube" ]
    } ],
    youtube: [ {
        version: null,
        types: [ "video/youtube", "video/x-youtube", "audio/youtube", "audio/x-youtube" ]
    } ],
    vimeo: [ {
        version: null,
        types: [ "video/vimeo", "video/x-vimeo" ]
    } ]
}, mejs.Utility = {
    encodeUrl: function(url) {
        return encodeURIComponent(url);
    },
    escapeHTML: function(s) {
        return s.toString().split("&").join("&amp;").split("<").join("&lt;").split('"').join("&quot;");
    },
    absolutizeUrl: function(url) {
        var el = document.createElement("div");
        return el.innerHTML = '<a href="' + this.escapeHTML(url) + '">x</a>', el.firstChild.href;
    },
    getScriptPath: function(scriptNames) {
        for (var j, slashPos, filenamePos, scriptUrl, scriptPath, scriptFilename, i = 0, codePath = "", testname = "", scripts = document.getElementsByTagName("script"), il = scripts.length, jl = scriptNames.length; il > i; i++) {
            for (scriptUrl = scripts[i].src, slashPos = scriptUrl.lastIndexOf("/"), slashPos > -1 ? (scriptFilename = scriptUrl.substring(slashPos + 1), 
            scriptPath = scriptUrl.substring(0, slashPos + 1)) : (scriptFilename = scriptUrl, 
            scriptPath = ""), j = 0; jl > j; j++) if (testname = scriptNames[j], filenamePos = scriptFilename.indexOf(testname), 
            filenamePos > -1) {
                codePath = scriptPath;
                break;
            }
            if ("" !== codePath) break;
        }
        return codePath;
    },
    secondsToTimeCode: function(time, forceHours, showFrameCount, fps) {
        "undefined" == typeof showFrameCount ? showFrameCount = !1 : "undefined" == typeof fps && (fps = 25);
        var hours = Math.floor(time / 3600) % 24, minutes = Math.floor(time / 60) % 60, seconds = Math.floor(time % 60), frames = Math.floor((time % 1 * fps).toFixed(3)), result = (forceHours || hours > 0 ? (10 > hours ? "0" + hours : hours) + ":" : "") + (10 > minutes ? "0" + minutes : minutes) + ":" + (10 > seconds ? "0" + seconds : seconds) + (showFrameCount ? ":" + (10 > frames ? "0" + frames : frames) : "");
        return result;
    },
    timeCodeToSeconds: function(hh_mm_ss_ff, forceHours, showFrameCount, fps) {
        "undefined" == typeof showFrameCount ? showFrameCount = !1 : "undefined" == typeof fps && (fps = 25);
        var tc_array = hh_mm_ss_ff.split(":"), tc_hh = parseInt(tc_array[0], 10), tc_mm = parseInt(tc_array[1], 10), tc_ss = parseInt(tc_array[2], 10), tc_ff = 0, tc_in_seconds = 0;
        return showFrameCount && (tc_ff = parseInt(tc_array[3]) / fps), tc_in_seconds = 3600 * tc_hh + 60 * tc_mm + tc_ss + tc_ff;
    },
    convertSMPTEtoSeconds: function(SMPTE) {
        if ("string" != typeof SMPTE) return !1;
        SMPTE = SMPTE.replace(",", ".");
        var secs = 0, decimalLen = -1 != SMPTE.indexOf(".") ? SMPTE.split(".")[1].length : 0, multiplier = 1;
        SMPTE = SMPTE.split(":").reverse();
        for (var i = 0; i < SMPTE.length; i++) multiplier = 1, i > 0 && (multiplier = Math.pow(60, i)), 
        secs += Number(SMPTE[i]) * multiplier;
        return Number(secs.toFixed(decimalLen));
    },
    removeSwf: function(id) {
        var obj = document.getElementById(id);
        obj && /object|embed/i.test(obj.nodeName) && (mejs.MediaFeatures.isIE ? (obj.style.display = "none", 
        function() {
            4 == obj.readyState ? mejs.Utility.removeObjectInIE(id) : setTimeout(arguments.callee, 10);
        }()) : obj.parentNode.removeChild(obj));
    },
    removeObjectInIE: function(id) {
        var obj = document.getElementById(id);
        if (obj) {
            for (var i in obj) "function" == typeof obj[i] && (obj[i] = null);
            obj.parentNode.removeChild(obj);
        }
    }
}, mejs.PluginDetector = {
    hasPluginVersion: function(plugin, v) {
        var pv = this.plugins[plugin];
        return v[1] = v[1] || 0, v[2] = v[2] || 0, pv[0] > v[0] || pv[0] == v[0] && pv[1] > v[1] || pv[0] == v[0] && pv[1] == v[1] && pv[2] >= v[2] ? !0 : !1;
    },
    nav: window.navigator,
    ua: window.navigator.userAgent.toLowerCase(),
    plugins: [],
    addPlugin: function(p, pluginName, mimeType, activeX, axDetect) {
        this.plugins[p] = this.detectPlugin(pluginName, mimeType, activeX, axDetect);
    },
    detectPlugin: function(pluginName, mimeType, activeX, axDetect) {
        var description, i, ax, version = [ 0, 0, 0 ];
        if ("undefined" != typeof this.nav.plugins && "object" == typeof this.nav.plugins[pluginName]) {
            if (description = this.nav.plugins[pluginName].description, description && ("undefined" == typeof this.nav.mimeTypes || !this.nav.mimeTypes[mimeType] || this.nav.mimeTypes[mimeType].enabledPlugin)) for (version = description.replace(pluginName, "").replace(/^\s+/, "").replace(/\sr/gi, ".").split("."), 
            i = 0; i < version.length; i++) version[i] = parseInt(version[i].match(/\d+/), 10);
        } else if ("undefined" != typeof window.ActiveXObject) try {
            ax = new ActiveXObject(activeX), ax && (version = axDetect(ax));
        } catch (e) {}
        return version;
    }
}, mejs.PluginDetector.addPlugin("flash", "Shockwave Flash", "application/x-shockwave-flash", "ShockwaveFlash.ShockwaveFlash", function(ax) {
    var version = [], d = ax.GetVariable("$version");
    return d && (d = d.split(" ")[1].split(","), version = [ parseInt(d[0], 10), parseInt(d[1], 10), parseInt(d[2], 10) ]), 
    version;
}), mejs.PluginDetector.addPlugin("silverlight", "Silverlight Plug-In", "application/x-silverlight-2", "AgControl.AgControl", function(ax) {
    var v = [ 0, 0, 0, 0 ], loopMatch = function(ax, v, i, n) {
        for (;ax.isVersionSupported(v[0] + "." + v[1] + "." + v[2] + "." + v[3]); ) v[i] += n;
        v[i] -= n;
    };
    return loopMatch(ax, v, 0, 1), loopMatch(ax, v, 1, 1), loopMatch(ax, v, 2, 1e4), 
    loopMatch(ax, v, 2, 1e3), loopMatch(ax, v, 2, 100), loopMatch(ax, v, 2, 10), loopMatch(ax, v, 2, 1), 
    loopMatch(ax, v, 3, 1), v;
}), mejs.MediaFeatures = {
    init: function() {
        var i, v, t = this, d = document, nav = mejs.PluginDetector.nav, ua = mejs.PluginDetector.ua.toLowerCase(), html5Elements = [ "source", "track", "audio", "video" ];
        t.isiPad = null !== ua.match(/ipad/i), t.isiPhone = null !== ua.match(/iphone/i), 
        t.isiOS = t.isiPhone || t.isiPad, t.isAndroid = null !== ua.match(/android/i), t.isBustedAndroid = null !== ua.match(/android 2\.[12]/), 
        t.isBustedNativeHTTPS = "https:" === location.protocol && (null !== ua.match(/android [12]\./) || null !== ua.match(/macintosh.* version.* safari/)), 
        t.isIE = -1 != nav.appName.toLowerCase().indexOf("microsoft") || null !== nav.appName.toLowerCase().match(/trident/gi), 
        t.isChrome = null !== ua.match(/chrome/gi), t.isFirefox = null !== ua.match(/firefox/gi), 
        t.isWebkit = null !== ua.match(/webkit/gi), t.isGecko = null !== ua.match(/gecko/gi) && !t.isWebkit && !t.isIE, 
        t.isOpera = null !== ua.match(/opera/gi), t.hasTouch = "ontouchstart" in window, 
        t.svg = !!document.createElementNS && !!document.createElementNS("http://www.w3.org/2000/svg", "svg").createSVGRect;
        for (i = 0; i < html5Elements.length; i++) v = document.createElement(html5Elements[i]);
        t.supportsMediaTag = "undefined" != typeof v.canPlayType || t.isBustedAndroid;
        try {
            v.canPlayType("video/mp4");
        } catch (e) {
            t.supportsMediaTag = !1;
        }
        t.hasSemiNativeFullScreen = "undefined" != typeof v.webkitEnterFullscreen, t.hasNativeFullscreen = "undefined" != typeof v.requestFullscreen, 
        t.hasWebkitNativeFullScreen = "undefined" != typeof v.webkitRequestFullScreen, t.hasMozNativeFullScreen = "undefined" != typeof v.mozRequestFullScreen, 
        t.hasMsNativeFullScreen = "undefined" != typeof v.msRequestFullscreen, t.hasTrueNativeFullScreen = t.hasWebkitNativeFullScreen || t.hasMozNativeFullScreen || t.hasMsNativeFullScreen, 
        t.nativeFullScreenEnabled = t.hasTrueNativeFullScreen, t.hasMozNativeFullScreen ? t.nativeFullScreenEnabled = document.mozFullScreenEnabled : t.hasMsNativeFullScreen && (t.nativeFullScreenEnabled = document.msFullscreenEnabled), 
        t.isChrome && (t.hasSemiNativeFullScreen = !1), t.hasTrueNativeFullScreen && (t.fullScreenEventName = "", 
        t.hasWebkitNativeFullScreen ? t.fullScreenEventName = "webkitfullscreenchange" : t.hasMozNativeFullScreen ? t.fullScreenEventName = "mozfullscreenchange" : t.hasMsNativeFullScreen && (t.fullScreenEventName = "MSFullscreenChange"), 
        t.isFullScreen = function() {
            return v.mozRequestFullScreen ? d.mozFullScreen : v.webkitRequestFullScreen ? d.webkitIsFullScreen : v.hasMsNativeFullScreen ? null !== d.msFullscreenElement : void 0;
        }, t.requestFullScreen = function(el) {
            t.hasWebkitNativeFullScreen ? el.webkitRequestFullScreen() : t.hasMozNativeFullScreen ? el.mozRequestFullScreen() : t.hasMsNativeFullScreen && el.msRequestFullscreen();
        }, t.cancelFullScreen = function() {
            t.hasWebkitNativeFullScreen ? document.webkitCancelFullScreen() : t.hasMozNativeFullScreen ? document.mozCancelFullScreen() : t.hasMsNativeFullScreen && document.msExitFullscreen();
        }), t.hasSemiNativeFullScreen && ua.match(/mac os x 10_5/i) && (t.hasNativeFullScreen = !1, 
        t.hasSemiNativeFullScreen = !1);
    }
}, mejs.MediaFeatures.init(), mejs.HtmlMediaElement = {
    pluginType: "native",
    isFullScreen: !1,
    setCurrentTime: function(time) {
        this.currentTime = time;
    },
    setMuted: function(muted) {
        this.muted = muted;
    },
    setVolume: function(volume) {
        this.volume = volume;
    },
    stop: function() {
        this.pause();
    },
    setSrc: function(url) {
        for (var existingSources = this.getElementsByTagName("source"); existingSources.length > 0; ) this.removeChild(existingSources[0]);
        if ("string" == typeof url) this.src = url; else {
            var i, media;
            for (i = 0; i < url.length; i++) if (media = url[i], this.canPlayType(media.type)) {
                this.src = media.src;
                break;
            }
        }
    },
    setVideoSize: function(width, height) {
        this.width = width, this.height = height;
    }
}, mejs.PluginMediaElement = function(pluginid, pluginType, mediaUrl) {
    this.id = pluginid, this.pluginType = pluginType, this.src = mediaUrl, this.events = {}, 
    this.attributes = {};
}, mejs.PluginMediaElement.prototype = {
    pluginElement: null,
    pluginType: "",
    isFullScreen: !1,
    playbackRate: -1,
    defaultPlaybackRate: -1,
    seekable: [],
    played: [],
    paused: !0,
    ended: !1,
    seeking: !1,
    duration: 0,
    error: null,
    tagName: "",
    muted: !1,
    volume: 1,
    currentTime: 0,
    play: function() {
        null != this.pluginApi && ("youtube" == this.pluginType ? this.pluginApi.playVideo() : this.pluginApi.playMedia(), 
        this.paused = !1);
    },
    load: function() {
        null != this.pluginApi && ("youtube" == this.pluginType || this.pluginApi.loadMedia(), 
        this.paused = !1);
    },
    pause: function() {
        null != this.pluginApi && ("youtube" == this.pluginType ? this.pluginApi.pauseVideo() : this.pluginApi.pauseMedia(), 
        this.paused = !0);
    },
    stop: function() {
        null != this.pluginApi && ("youtube" == this.pluginType ? this.pluginApi.stopVideo() : this.pluginApi.stopMedia(), 
        this.paused = !0);
    },
    canPlayType: function(type) {
        var i, j, pluginInfo, pluginVersions = mejs.plugins[this.pluginType];
        for (i = 0; i < pluginVersions.length; i++) if (pluginInfo = pluginVersions[i], 
        mejs.PluginDetector.hasPluginVersion(this.pluginType, pluginInfo.version)) for (j = 0; j < pluginInfo.types.length; j++) if (type == pluginInfo.types[j]) return "probably";
        return "";
    },
    positionFullscreenButton: function(x, y, visibleAndAbove) {
        null != this.pluginApi && this.pluginApi.positionFullscreenButton && this.pluginApi.positionFullscreenButton(Math.floor(x), Math.floor(y), visibleAndAbove);
    },
    hideFullscreenButton: function() {
        null != this.pluginApi && this.pluginApi.hideFullscreenButton && this.pluginApi.hideFullscreenButton();
    },
    setSrc: function(url) {
        if ("string" == typeof url) this.pluginApi.setSrc(mejs.Utility.absolutizeUrl(url)), 
        this.src = mejs.Utility.absolutizeUrl(url); else {
            var i, media;
            for (i = 0; i < url.length; i++) if (media = url[i], this.canPlayType(media.type)) {
                this.pluginApi.setSrc(mejs.Utility.absolutizeUrl(media.src)), this.src = mejs.Utility.absolutizeUrl(url);
                break;
            }
        }
    },
    setCurrentTime: function(time) {
        null != this.pluginApi && ("youtube" == this.pluginType ? this.pluginApi.seekTo(time) : this.pluginApi.setCurrentTime(time), 
        this.currentTime = time);
    },
    setVolume: function(volume) {
        null != this.pluginApi && (this.pluginApi.setVolume("youtube" == this.pluginType ? 100 * volume : volume), 
        this.volume = volume);
    },
    setMuted: function(muted) {
        null != this.pluginApi && ("youtube" == this.pluginType ? (muted ? this.pluginApi.mute() : this.pluginApi.unMute(), 
        this.muted = muted, this.dispatchEvent("volumechange")) : this.pluginApi.setMuted(muted), 
        this.muted = muted);
    },
    setVideoSize: function(width, height) {
        this.pluginElement.style && (this.pluginElement.style.width = width + "px", this.pluginElement.style.height = height + "px"), 
        null != this.pluginApi && this.pluginApi.setVideoSize && this.pluginApi.setVideoSize(width, height);
    },
    setFullscreen: function(fullscreen) {
        null != this.pluginApi && this.pluginApi.setFullscreen && this.pluginApi.setFullscreen(fullscreen);
    },
    enterFullScreen: function() {
        null != this.pluginApi && this.pluginApi.setFullscreen && this.setFullscreen(!0);
    },
    exitFullScreen: function() {
        null != this.pluginApi && this.pluginApi.setFullscreen && this.setFullscreen(!1);
    },
    addEventListener: function(eventName, callback) {
        this.events[eventName] = this.events[eventName] || [], this.events[eventName].push(callback);
    },
    removeEventListener: function(eventName, callback) {
        if (!eventName) return this.events = {}, !0;
        var callbacks = this.events[eventName];
        if (!callbacks) return !0;
        if (!callback) return this.events[eventName] = [], !0;
        for (i = 0; i < callbacks.length; i++) if (callbacks[i] === callback) return this.events[eventName].splice(i, 1), 
        !0;
        return !1;
    },
    dispatchEvent: function(eventName) {
        var i, args, callbacks = this.events[eventName];
        if (callbacks) for (args = Array.prototype.slice.call(arguments, 1), i = 0; i < callbacks.length; i++) callbacks[i].apply(null, args);
    },
    hasAttribute: function(name) {
        return name in this.attributes;
    },
    removeAttribute: function(name) {
        delete this.attributes[name];
    },
    getAttribute: function(name) {
        return this.hasAttribute(name) ? this.attributes[name] : "";
    },
    setAttribute: function(name, value) {
        this.attributes[name] = value;
    },
    remove: function() {
        mejs.Utility.removeSwf(this.pluginElement.id), mejs.MediaPluginBridge.unregisterPluginElement(this.pluginElement.id);
    }
}, mejs.MediaPluginBridge = {
    pluginMediaElements: {},
    htmlMediaElements: {},
    registerPluginElement: function(id, pluginMediaElement, htmlMediaElement) {
        this.pluginMediaElements[id] = pluginMediaElement, this.htmlMediaElements[id] = htmlMediaElement;
    },
    unregisterPluginElement: function(id) {
        delete this.pluginMediaElements[id], delete this.htmlMediaElements[id];
    },
    initPlugin: function(id) {
        var pluginMediaElement = this.pluginMediaElements[id], htmlMediaElement = this.htmlMediaElements[id];
        if (pluginMediaElement) {
            switch (pluginMediaElement.pluginType) {
              case "flash":
                pluginMediaElement.pluginElement = pluginMediaElement.pluginApi = document.getElementById(id);
                break;

              case "silverlight":
                pluginMediaElement.pluginElement = document.getElementById(pluginMediaElement.id), 
                pluginMediaElement.pluginApi = pluginMediaElement.pluginElement.Content.MediaElementJS;
            }
            null != pluginMediaElement.pluginApi && pluginMediaElement.success && pluginMediaElement.success(pluginMediaElement, htmlMediaElement);
        }
    },
    fireEvent: function(id, eventName, values) {
        var e, i, bufferedTime, pluginMediaElement = this.pluginMediaElements[id];
        if (pluginMediaElement) {
            e = {
                type: eventName,
                target: pluginMediaElement
            };
            for (i in values) pluginMediaElement[i] = values[i], e[i] = values[i];
            bufferedTime = values.bufferedTime || 0, e.target.buffered = e.buffered = {
                start: function() {
                    return 0;
                },
                end: function() {
                    return bufferedTime;
                },
                length: 1
            }, pluginMediaElement.dispatchEvent(e.type, e);
        }
    }
}, mejs.MediaElementDefaults = {
    mode: "auto",
    plugins: [ "flash", "silverlight", "youtube", "vimeo" ],
    enablePluginDebug: !1,
    httpsBasicAuthSite: !1,
    type: "",
    pluginPath: mejs.Utility.getScriptPath([ "mediaelement.js", "mediaelement.min.js", "mediaelement-and-player.js", "mediaelement-and-player.min.js" ]),
    flashName: "flashmediaelement.swf",
    flashStreamer: "",
    enablePluginSmoothing: !1,
    enablePseudoStreaming: !1,
    pseudoStreamingStartQueryParam: "start",
    silverlightName: "silverlightmediaelement.xap",
    defaultVideoWidth: 480,
    defaultVideoHeight: 270,
    pluginWidth: -1,
    pluginHeight: -1,
    pluginVars: [],
    timerRate: 250,
    startVolume: .8,
    success: function() {},
    error: function() {}
}, mejs.MediaElement = function(el, o) {
    return mejs.HtmlMediaElementShim.create(el, o);
}, mejs.HtmlMediaElementShim = {
    create: function(el, o) {
        var playback, prop, options = mejs.MediaElementDefaults, htmlMediaElement = "string" == typeof el ? document.getElementById(el) : el, tagName = htmlMediaElement.tagName.toLowerCase(), isMediaTag = "audio" === tagName || "video" === tagName, src = htmlMediaElement.getAttribute(isMediaTag ? "src" : "href"), poster = htmlMediaElement.getAttribute("poster"), autoplay = htmlMediaElement.getAttribute("autoplay"), preload = htmlMediaElement.getAttribute("preload"), controls = htmlMediaElement.getAttribute("controls");
        for (prop in o) options[prop] = o[prop];
        return src = "undefined" == typeof src || null === src || "" == src ? null : src, 
        poster = "undefined" == typeof poster || null === poster ? "" : poster, preload = "undefined" == typeof preload || null === preload || "false" === preload ? "none" : preload, 
        autoplay = !("undefined" == typeof autoplay || null === autoplay || "false" === autoplay), 
        controls = !("undefined" == typeof controls || null === controls || "false" === controls), 
        playback = this.determinePlayback(htmlMediaElement, options, mejs.MediaFeatures.supportsMediaTag, isMediaTag, src), 
        playback.url = null !== playback.url ? mejs.Utility.absolutizeUrl(playback.url) : "", 
        "native" == playback.method ? (mejs.MediaFeatures.isBustedAndroid && (htmlMediaElement.src = playback.url, 
        htmlMediaElement.addEventListener("click", function() {
            htmlMediaElement.play();
        }, !1)), this.updateNative(playback, options, autoplay, preload)) : "" !== playback.method ? this.createPlugin(playback, options, poster, autoplay, preload, controls) : (this.createErrorMessage(playback, options, poster), 
        this);
    },
    determinePlayback: function(htmlMediaElement, options, supportsMediaTag, isMediaTag, src) {
        var i, j, k, l, n, type, pluginName, pluginVersions, pluginInfo, dummy, media, mediaFiles = [], result = {
            method: "",
            url: "",
            htmlMediaElement: htmlMediaElement,
            isVideo: "audio" != htmlMediaElement.tagName.toLowerCase()
        };
        if ("undefined" != typeof options.type && "" !== options.type) if ("string" == typeof options.type) mediaFiles.push({
            type: options.type,
            url: src
        }); else for (i = 0; i < options.type.length; i++) mediaFiles.push({
            type: options.type[i],
            url: src
        }); else if (null !== src) type = this.formatType(src, htmlMediaElement.getAttribute("type")), 
        mediaFiles.push({
            type: type,
            url: src
        }); else for (i = 0; i < htmlMediaElement.childNodes.length; i++) n = htmlMediaElement.childNodes[i], 
        1 == n.nodeType && "source" == n.tagName.toLowerCase() && (src = n.getAttribute("src"), 
        type = this.formatType(src, n.getAttribute("type")), media = n.getAttribute("media"), 
        (!media || !window.matchMedia || window.matchMedia && window.matchMedia(media).matches) && mediaFiles.push({
            type: type,
            url: src
        }));
        if (!isMediaTag && mediaFiles.length > 0 && null !== mediaFiles[0].url && this.getTypeFromFile(mediaFiles[0].url).indexOf("audio") > -1 && (result.isVideo = !1), 
        mejs.MediaFeatures.isBustedAndroid && (htmlMediaElement.canPlayType = function(type) {
            return null !== type.match(/video\/(mp4|m4v)/gi) ? "maybe" : "";
        }), !(!supportsMediaTag || "auto" !== options.mode && "auto_plugin" !== options.mode && "native" !== options.mode || mejs.MediaFeatures.isBustedNativeHTTPS && options.httpsBasicAuthSite === !0)) {
            for (isMediaTag || (dummy = document.createElement(result.isVideo ? "video" : "audio"), 
            htmlMediaElement.parentNode.insertBefore(dummy, htmlMediaElement), htmlMediaElement.style.display = "none", 
            result.htmlMediaElement = htmlMediaElement = dummy), i = 0; i < mediaFiles.length; i++) if ("" !== htmlMediaElement.canPlayType(mediaFiles[i].type).replace(/no/, "") || "" !== htmlMediaElement.canPlayType(mediaFiles[i].type.replace(/mp3/, "mpeg")).replace(/no/, "")) {
                result.method = "native", result.url = mediaFiles[i].url;
                break;
            }
            if ("native" === result.method && (null !== result.url && (htmlMediaElement.src = result.url), 
            "auto_plugin" !== options.mode)) return result;
        }
        if ("auto" === options.mode || "auto_plugin" === options.mode || "shim" === options.mode) for (i = 0; i < mediaFiles.length; i++) for (type = mediaFiles[i].type, 
        j = 0; j < options.plugins.length; j++) for (pluginName = options.plugins[j], pluginVersions = mejs.plugins[pluginName], 
        k = 0; k < pluginVersions.length; k++) if (pluginInfo = pluginVersions[k], null == pluginInfo.version || mejs.PluginDetector.hasPluginVersion(pluginName, pluginInfo.version)) for (l = 0; l < pluginInfo.types.length; l++) if (type == pluginInfo.types[l]) return result.method = pluginName, 
        result.url = mediaFiles[i].url, result;
        return "auto_plugin" === options.mode && "native" === result.method ? result : ("" === result.method && mediaFiles.length > 0 && (result.url = mediaFiles[0].url), 
        result);
    },
    formatType: function(url, type) {
        return url && !type ? this.getTypeFromFile(url) : type && ~type.indexOf(";") ? type.substr(0, type.indexOf(";")) : type;
    },
    getTypeFromFile: function(url) {
        url = url.split("?")[0];
        var ext = url.substring(url.lastIndexOf(".") + 1).toLowerCase();
        return (/(mp4|m4v|ogg|ogv|webm|webmv|flv|wmv|mpeg|mov)/gi.test(ext) ? "video" : "audio") + "/" + this.getTypeFromExtension(ext);
    },
    getTypeFromExtension: function(ext) {
        switch (ext) {
          case "mp4":
          case "m4v":
            return "mp4";

          case "webm":
          case "webma":
          case "webmv":
            return "webm";

          case "ogg":
          case "oga":
          case "ogv":
            return "ogg";

          default:
            return ext;
        }
    },
    createErrorMessage: function(playback, options, poster) {
        var htmlMediaElement = playback.htmlMediaElement, errorContainer = document.createElement("div");
        errorContainer.className = "me-cannotplay";
        try {
            errorContainer.style.width = htmlMediaElement.width + "px", errorContainer.style.height = htmlMediaElement.height + "px";
        } catch (e) {}
        errorContainer.innerHTML = options.customError ? options.customError : "" !== poster ? '<a href="' + playback.url + '"><img src="' + poster + '" width="100%" height="100%" /></a>' : '<a href="' + playback.url + '"><span>' + mejs.i18n.t("Download File") + "</span></a>", 
        htmlMediaElement.parentNode.insertBefore(errorContainer, htmlMediaElement), htmlMediaElement.style.display = "none", 
        options.error(htmlMediaElement);
    },
    createPlugin: function(playback, options, poster, autoplay, preload, controls) {
        var specialIEContainer, node, initVars, htmlMediaElement = playback.htmlMediaElement, width = 1, height = 1, pluginid = "me_" + playback.method + "_" + mejs.meIndex++, pluginMediaElement = new mejs.PluginMediaElement(pluginid, playback.method, playback.url), container = document.createElement("div");
        pluginMediaElement.tagName = htmlMediaElement.tagName;
        for (var i = 0; i < htmlMediaElement.attributes.length; i++) {
            var attribute = htmlMediaElement.attributes[i];
            1 == attribute.specified && pluginMediaElement.setAttribute(attribute.name, attribute.value);
        }
        for (node = htmlMediaElement.parentNode; null !== node && "body" != node.tagName.toLowerCase(); ) {
            if ("p" == node.parentNode.tagName.toLowerCase()) {
                node.parentNode.parentNode.insertBefore(node, node.parentNode);
                break;
            }
            node = node.parentNode;
        }
        switch (playback.isVideo ? (width = options.pluginWidth > 0 ? options.pluginWidth : options.videoWidth > 0 ? options.videoWidth : null !== htmlMediaElement.getAttribute("width") ? htmlMediaElement.getAttribute("width") : options.defaultVideoWidth, 
        height = options.pluginHeight > 0 ? options.pluginHeight : options.videoHeight > 0 ? options.videoHeight : null !== htmlMediaElement.getAttribute("height") ? htmlMediaElement.getAttribute("height") : options.defaultVideoHeight, 
        width = mejs.Utility.encodeUrl(width), height = mejs.Utility.encodeUrl(height)) : options.enablePluginDebug && (width = 320, 
        height = 240), pluginMediaElement.success = options.success, mejs.MediaPluginBridge.registerPluginElement(pluginid, pluginMediaElement, htmlMediaElement), 
        container.className = "me-plugin", container.id = pluginid + "_container", playback.isVideo ? htmlMediaElement.parentNode.insertBefore(container, htmlMediaElement) : document.body.insertBefore(container, document.body.childNodes[0]), 
        initVars = [ "id=" + pluginid, "isvideo=" + (playback.isVideo ? "true" : "false"), "autoplay=" + (autoplay ? "true" : "false"), "preload=" + preload, "width=" + width, "startvolume=" + options.startVolume, "timerrate=" + options.timerRate, "flashstreamer=" + options.flashStreamer, "height=" + height, "pseudostreamstart=" + options.pseudoStreamingStartQueryParam ], 
        null !== playback.url && initVars.push("flash" == playback.method ? "file=" + mejs.Utility.encodeUrl(playback.url) : "file=" + playback.url), 
        options.enablePluginDebug && initVars.push("debug=true"), options.enablePluginSmoothing && initVars.push("smoothing=true"), 
        options.enablePseudoStreaming && initVars.push("pseudostreaming=true"), controls && initVars.push("controls=true"), 
        options.pluginVars && (initVars = initVars.concat(options.pluginVars)), playback.method) {
          case "silverlight":
            container.innerHTML = '<object data="data:application/x-silverlight-2," type="application/x-silverlight-2" id="' + pluginid + '" name="' + pluginid + '" width="' + width + '" height="' + height + '" class="mejs-shim"><param name="initParams" value="' + initVars.join(",") + '" /><param name="windowless" value="true" /><param name="background" value="black" /><param name="minRuntimeVersion" value="3.0.0.0" /><param name="autoUpgrade" value="true" /><param name="source" value="' + options.pluginPath + options.silverlightName + '" /></object>';
            break;

          case "flash":
            mejs.MediaFeatures.isIE ? (specialIEContainer = document.createElement("div"), container.appendChild(specialIEContainer), 
            specialIEContainer.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="//download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab" id="' + pluginid + '" width="' + width + '" height="' + height + '" class="mejs-shim"><param name="movie" value="' + options.pluginPath + options.flashName + "?x=" + new Date() + '" /><param name="flashvars" value="' + initVars.join("&amp;") + '" /><param name="quality" value="high" /><param name="bgcolor" value="#000000" /><param name="wmode" value="transparent" /><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="true" /><param name="scale" value="default" /></object>') : container.innerHTML = '<embed id="' + pluginid + '" name="' + pluginid + '" play="true" loop="false" quality="high" bgcolor="#000000" wmode="transparent" allowScriptAccess="always" allowFullScreen="true" type="application/x-shockwave-flash" pluginspage="//www.macromedia.com/go/getflashplayer" src="' + options.pluginPath + options.flashName + '" flashvars="' + initVars.join("&") + '" width="' + width + '" height="' + height + '" scale="default"class="mejs-shim"></embed>';
            break;

          case "youtube":
            var videoId = playback.url.substr(playback.url.lastIndexOf("=") + 1);
            youtubeSettings = {
                container: container,
                containerId: container.id,
                pluginMediaElement: pluginMediaElement,
                pluginId: pluginid,
                videoId: videoId,
                height: height,
                width: width
            }, mejs.PluginDetector.hasPluginVersion("flash", [ 10, 0, 0 ]) ? mejs.YouTubeApi.createFlash(youtubeSettings) : mejs.YouTubeApi.enqueueIframe(youtubeSettings);
            break;

          case "vimeo":
            pluginMediaElement.vimeoid = playback.url.substr(playback.url.lastIndexOf("/") + 1), 
            container.innerHTML = '<iframe src="http://player.vimeo.com/video/' + pluginMediaElement.vimeoid + '?portrait=0&byline=0&title=0" width="' + width + '" height="' + height + '" frameborder="0" class="mejs-shim"></iframe>';
        }
        return htmlMediaElement.style.display = "none", htmlMediaElement.removeAttribute("autoplay"), 
        pluginMediaElement;
    },
    updateNative: function(playback, options) {
        var m, htmlMediaElement = playback.htmlMediaElement;
        for (m in mejs.HtmlMediaElement) htmlMediaElement[m] = mejs.HtmlMediaElement[m];
        return options.success(htmlMediaElement, htmlMediaElement), htmlMediaElement;
    }
}, mejs.YouTubeApi = {
    isIframeStarted: !1,
    isIframeLoaded: !1,
    loadIframeApi: function() {
        if (!this.isIframeStarted) {
            var tag = document.createElement("script");
            tag.src = "//www.youtube.com/player_api";
            var firstScriptTag = document.getElementsByTagName("script")[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag), this.isIframeStarted = !0;
        }
    },
    iframeQueue: [],
    enqueueIframe: function(yt) {
        this.isLoaded ? this.createIframe(yt) : (this.loadIframeApi(), this.iframeQueue.push(yt));
    },
    createIframe: function(settings) {
        var pluginMediaElement = settings.pluginMediaElement, player = new YT.Player(settings.containerId, {
            height: settings.height,
            width: settings.width,
            videoId: settings.videoId,
            playerVars: {
                controls: 0
            },
            events: {
                onReady: function() {
                    settings.pluginMediaElement.pluginApi = player, mejs.MediaPluginBridge.initPlugin(settings.pluginId), 
                    setInterval(function() {
                        mejs.YouTubeApi.createEvent(player, pluginMediaElement, "timeupdate");
                    }, 250);
                },
                onStateChange: function(e) {
                    mejs.YouTubeApi.handleStateChange(e.data, player, pluginMediaElement);
                }
            }
        });
    },
    createEvent: function(player, pluginMediaElement, eventName) {
        var obj = {
            type: eventName,
            target: pluginMediaElement
        };
        if (player && player.getDuration) {
            pluginMediaElement.currentTime = obj.currentTime = player.getCurrentTime(), pluginMediaElement.duration = obj.duration = player.getDuration(), 
            obj.paused = pluginMediaElement.paused, obj.ended = pluginMediaElement.ended, obj.muted = player.isMuted(), 
            obj.volume = player.getVolume() / 100, obj.bytesTotal = player.getVideoBytesTotal(), 
            obj.bufferedBytes = player.getVideoBytesLoaded();
            var bufferedTime = obj.bufferedBytes / obj.bytesTotal * obj.duration;
            obj.target.buffered = obj.buffered = {
                start: function() {
                    return 0;
                },
                end: function() {
                    return bufferedTime;
                },
                length: 1
            };
        }
        pluginMediaElement.dispatchEvent(obj.type, obj);
    },
    iFrameReady: function() {
        for (this.isLoaded = !0, this.isIframeLoaded = !0; this.iframeQueue.length > 0; ) {
            var settings = this.iframeQueue.pop();
            this.createIframe(settings);
        }
    },
    flashPlayers: {},
    createFlash: function(settings) {
        this.flashPlayers[settings.pluginId] = settings;
        var specialIEContainer, youtubeUrl = "//www.youtube.com/apiplayer?enablejsapi=1&amp;playerapiid=" + settings.pluginId + "&amp;version=3&amp;autoplay=0&amp;controls=0&amp;modestbranding=1&loop=0";
        mejs.MediaFeatures.isIE ? (specialIEContainer = document.createElement("div"), settings.container.appendChild(specialIEContainer), 
        specialIEContainer.outerHTML = '<object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" codebase="//download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab" id="' + settings.pluginId + '" width="' + settings.width + '" height="' + settings.height + '" class="mejs-shim"><param name="movie" value="' + youtubeUrl + '" /><param name="wmode" value="transparent" /><param name="allowScriptAccess" value="always" /><param name="allowFullScreen" value="true" /></object>') : settings.container.innerHTML = '<object type="application/x-shockwave-flash" id="' + settings.pluginId + '" data="' + youtubeUrl + '" width="' + settings.width + '" height="' + settings.height + '" style="visibility: visible; " class="mejs-shim"><param name="allowScriptAccess" value="always"><param name="wmode" value="transparent"></object>';
    },
    flashReady: function(id) {
        var settings = this.flashPlayers[id], player = document.getElementById(id), pluginMediaElement = settings.pluginMediaElement;
        pluginMediaElement.pluginApi = pluginMediaElement.pluginElement = player, mejs.MediaPluginBridge.initPlugin(id), 
        player.cueVideoById(settings.videoId);
        var callbackName = settings.containerId + "_callback";
        window[callbackName] = function(e) {
            mejs.YouTubeApi.handleStateChange(e, player, pluginMediaElement);
        }, player.addEventListener("onStateChange", callbackName), setInterval(function() {
            mejs.YouTubeApi.createEvent(player, pluginMediaElement, "timeupdate");
        }, 250);
    },
    handleStateChange: function(youTubeState, player, pluginMediaElement) {
        switch (youTubeState) {
          case -1:
            pluginMediaElement.paused = !0, pluginMediaElement.ended = !0, mejs.YouTubeApi.createEvent(player, pluginMediaElement, "loadedmetadata");
            break;

          case 0:
            pluginMediaElement.paused = !1, pluginMediaElement.ended = !0, mejs.YouTubeApi.createEvent(player, pluginMediaElement, "ended");
            break;

          case 1:
            pluginMediaElement.paused = !1, pluginMediaElement.ended = !1, mejs.YouTubeApi.createEvent(player, pluginMediaElement, "play"), 
            mejs.YouTubeApi.createEvent(player, pluginMediaElement, "playing");
            break;

          case 2:
            pluginMediaElement.paused = !0, pluginMediaElement.ended = !1, mejs.YouTubeApi.createEvent(player, pluginMediaElement, "pause");
            break;

          case 3:
            mejs.YouTubeApi.createEvent(player, pluginMediaElement, "progress");
            break;

          case 5:        }
    }
}, window.mejs = mejs, window.MediaElement = mejs.MediaElement, function(context, exports) {
    "use strict";
    var i18n = {
        locale: {
            language: "",
            strings: {}
        },
        methods: {}
    };
    i18n.getLanguage = function() {
        var language = i18n.locale.language || window.navigator.userLanguage || window.navigator.language;
        return language.substr(0, 2).toLowerCase();
    }, "undefined" != typeof mejsL10n && (i18n.locale.language = mejsL10n.language), 
    i18n.methods.checkPlain = function(str) {
        var character, regex, replace = {
            "&": "&amp;",
            '"': "&quot;",
            "<": "&lt;",
            ">": "&gt;"
        };
        str = String(str);
        for (character in replace) replace.hasOwnProperty(character) && (regex = new RegExp(character, "g"), 
        str = str.replace(regex, replace[character]));
        return str;
    }, i18n.methods.t = function(str, options) {
        return i18n.locale.strings && i18n.locale.strings[options.context] && i18n.locale.strings[options.context][str] && (str = i18n.locale.strings[options.context][str]), 
        i18n.methods.checkPlain(str);
    }, i18n.t = function(str, options) {
        if ("string" == typeof str && str.length > 0) {
            var language = i18n.getLanguage();
            return options = options || {
                context: language
            }, i18n.methods.t(str, options);
        }
        throw {
            name: "InvalidArgumentException",
            message: "First argument is either not a string or empty."
        };
    }, exports.i18n = i18n;
}(document, mejs), function(exports) {
    "use strict";
    "undefined" != typeof mejsL10n && (exports[mejsL10n.language] = mejsL10n.strings);
}(mejs.i18n.locale.strings), function(exports) {
    "use strict";
    "undefined" == typeof exports.de && (exports.de = {
        Fullscreen: "Vollbild",
        "Go Fullscreen": "Vollbild an",
        "Turn off Fullscreen": "Vollbild aus",
        Close: "Schließen"
    });
}(mejs.i18n.locale.strings), function(exports) {
    "use strict";
    "undefined" == typeof exports.zh && (exports.zh = {
        Fullscreen: "全螢幕",
        "Go Fullscreen": "全屏模式",
        "Turn off Fullscreen": "退出全屏模式",
        Close: "關閉"
    });
}(mejs.i18n.locale.strings), "undefined" != typeof jQuery ? mejs.$ = jQuery : "undefined" != typeof ender && (mejs.$ = ender), 
function($) {
    mejs.MepDefaults = {
        poster: "",
        showPosterWhenEnded: !1,
        defaultVideoWidth: 480,
        defaultVideoHeight: 270,
        videoWidth: -1,
        videoHeight: -1,
        defaultAudioWidth: 400,
        defaultAudioHeight: 30,
        defaultSeekBackwardInterval: function(media) {
            return .05 * media.duration;
        },
        defaultSeekForwardInterval: function(media) {
            return .05 * media.duration;
        },
        audioWidth: -1,
        audioHeight: -1,
        startVolume: .8,
        loop: !1,
        autoRewind: !0,
        enableAutosize: !0,
        alwaysShowHours: !1,
        showTimecodeFrameCount: !1,
        framesPerSecond: 25,
        autosizeProgress: !0,
        alwaysShowControls: !1,
        hideVideoControlsOnLoad: !1,
        clickToPlayPause: !0,
        iPadUseNativeControls: !1,
        iPhoneUseNativeControls: !1,
        AndroidUseNativeControls: !1,
        features: [ "playpause", "current", "progress", "duration", "tracks", "volume", "fullscreen" ],
        isVideo: !0,
        enableKeyboard: !0,
        pauseOtherPlayers: !0,
        keyActions: [ {
            keys: [ 32, 179 ],
            action: function(player, media) {
                media.paused || media.ended ? player.play() : player.pause();
            }
        }, {
            keys: [ 38 ],
            action: function(player, media) {
                var newVolume = Math.min(media.volume + .1, 1);
                media.setVolume(newVolume);
            }
        }, {
            keys: [ 40 ],
            action: function(player, media) {
                var newVolume = Math.max(media.volume - .1, 0);
                media.setVolume(newVolume);
            }
        }, {
            keys: [ 37, 227 ],
            action: function(player, media) {
                if (!isNaN(media.duration) && media.duration > 0) {
                    player.isVideo && (player.showControls(), player.startControlsTimer());
                    var newTime = Math.max(media.currentTime - player.options.defaultSeekBackwardInterval(media), 0);
                    media.setCurrentTime(newTime);
                }
            }
        }, {
            keys: [ 39, 228 ],
            action: function(player, media) {
                if (!isNaN(media.duration) && media.duration > 0) {
                    player.isVideo && (player.showControls(), player.startControlsTimer());
                    var newTime = Math.min(media.currentTime + player.options.defaultSeekForwardInterval(media), media.duration);
                    media.setCurrentTime(newTime);
                }
            }
        }, {
            keys: [ 70 ],
            action: function(player) {
                "undefined" != typeof player.enterFullScreen && (player.isFullScreen ? player.exitFullScreen() : player.enterFullScreen());
            }
        } ]
    }, mejs.mepIndex = 0, mejs.players = {}, mejs.MediaElementPlayer = function(node, o) {
        if (!(this instanceof mejs.MediaElementPlayer)) return new mejs.MediaElementPlayer(node, o);
        var t = this;
        return t.$media = t.$node = $(node), t.node = t.media = t.$media[0], "undefined" != typeof t.node.player ? t.node.player : (t.node.player = t, 
        "undefined" == typeof o && (o = t.$node.data("mejsoptions")), t.options = $.extend({}, mejs.MepDefaults, o), 
        t.id = "mep_" + mejs.mepIndex++, mejs.players[t.id] = t, t.init(), t);
    }, mejs.MediaElementPlayer.prototype = {
        hasFocus: !1,
        controlsAreVisible: !0,
        init: function() {
            var t = this, mf = mejs.MediaFeatures, meOptions = $.extend(!0, {}, t.options, {
                success: function(media, domNode) {
                    t.meReady(media, domNode);
                },
                error: function(e) {
                    t.handleError(e);
                }
            }), tagName = t.media.tagName.toLowerCase();
            if (t.isDynamic = "audio" !== tagName && "video" !== tagName, t.isVideo = t.isDynamic ? t.options.isVideo : "audio" !== tagName && t.options.isVideo, 
            mf.isiPad && t.options.iPadUseNativeControls || mf.isiPhone && t.options.iPhoneUseNativeControls) t.$media.attr("controls", "controls"), 
            mf.isiPad && null !== t.media.getAttribute("autoplay") && t.play(); else if (mf.isAndroid && t.options.AndroidUseNativeControls) ; else {
                if (t.$media.removeAttr("controls"), t.container = $('<div id="' + t.id + '" class="mejs-container ' + (mejs.MediaFeatures.svg ? "svg" : "no-svg") + '"><div class="mejs-inner"><div class="mejs-mediaelement"></div><div class="mejs-layers"></div><div class="mejs-controls"></div><div class="mejs-clear"></div></div></div>').addClass(t.$media[0].className).insertBefore(t.$media), 
                t.container.addClass((mf.isAndroid ? "mejs-android " : "") + (mf.isiOS ? "mejs-ios " : "") + (mf.isiPad ? "mejs-ipad " : "") + (mf.isiPhone ? "mejs-iphone " : "") + (t.isVideo ? "mejs-video " : "mejs-audio ")), 
                mf.isiOS) {
                    var $newMedia = t.$media.clone();
                    t.container.find(".mejs-mediaelement").append($newMedia), t.$media.remove(), t.$node = t.$media = $newMedia, 
                    t.node = t.media = $newMedia[0];
                } else t.container.find(".mejs-mediaelement").append(t.$media);
                t.controls = t.container.find(".mejs-controls"), t.layers = t.container.find(".mejs-layers");
                var tagType = t.isVideo ? "video" : "audio", capsTagName = tagType.substring(0, 1).toUpperCase() + tagType.substring(1);
                t.width = t.options[tagType + "Width"] > 0 || t.options[tagType + "Width"].toString().indexOf("%") > -1 ? t.options[tagType + "Width"] : "" !== t.media.style.width && null !== t.media.style.width ? t.media.style.width : null !== t.media.getAttribute("width") ? t.$media.attr("width") : t.options["default" + capsTagName + "Width"], 
                t.height = t.options[tagType + "Height"] > 0 || t.options[tagType + "Height"].toString().indexOf("%") > -1 ? t.options[tagType + "Height"] : "" !== t.media.style.height && null !== t.media.style.height ? t.media.style.height : null !== t.$media[0].getAttribute("height") ? t.$media.attr("height") : t.options["default" + capsTagName + "Height"], 
                t.setPlayerSize(t.width, t.height), meOptions.pluginWidth = t.width, meOptions.pluginHeight = t.height;
            }
            mejs.MediaElement(t.$media[0], meOptions), "undefined" != typeof t.container && t.controlsAreVisible && t.container.trigger("controlsshown");
        },
        showControls: function(doAnimation) {
            var t = this;
            doAnimation = "undefined" == typeof doAnimation || doAnimation, t.controlsAreVisible || (doAnimation ? (t.controls.css("visibility", "visible").stop(!0, !0).fadeIn(200, function() {
                t.controlsAreVisible = !0, t.container.trigger("controlsshown");
            }), t.container.find(".mejs-control").css("visibility", "visible").stop(!0, !0).fadeIn(200, function() {
                t.controlsAreVisible = !0;
            })) : (t.controls.css("visibility", "visible").css("display", "block"), t.container.find(".mejs-control").css("visibility", "visible").css("display", "block"), 
            t.controlsAreVisible = !0, t.container.trigger("controlsshown")), t.setControlsSize());
        },
        hideControls: function(doAnimation) {
            var t = this;
            doAnimation = "undefined" == typeof doAnimation || doAnimation, t.controlsAreVisible && !t.options.alwaysShowControls && (doAnimation ? (t.controls.stop(!0, !0).fadeOut(200, function() {
                $(this).css("visibility", "hidden").css("display", "block"), t.controlsAreVisible = !1, 
                t.container.trigger("controlshidden");
            }), t.container.find(".mejs-control").stop(!0, !0).fadeOut(200, function() {
                $(this).css("visibility", "hidden").css("display", "block");
            })) : (t.controls.css("visibility", "hidden").css("display", "block"), t.container.find(".mejs-control").css("visibility", "hidden").css("display", "block"), 
            t.controlsAreVisible = !1, t.container.trigger("controlshidden")));
        },
        controlsTimer: null,
        startControlsTimer: function(timeout) {
            var t = this;
            timeout = "undefined" != typeof timeout ? timeout : 1500, t.killControlsTimer("start"), 
            t.controlsTimer = setTimeout(function() {
                t.hideControls(), t.killControlsTimer("hide");
            }, timeout);
        },
        killControlsTimer: function() {
            var t = this;
            null !== t.controlsTimer && (clearTimeout(t.controlsTimer), delete t.controlsTimer, 
            t.controlsTimer = null);
        },
        controlsEnabled: !0,
        disableControls: function() {
            var t = this;
            t.killControlsTimer(), t.hideControls(!1), this.controlsEnabled = !1;
        },
        enableControls: function() {
            var t = this;
            t.showControls(!1), t.controlsEnabled = !0;
        },
        meReady: function(media, domNode) {
            var featureIndex, feature, t = this, mf = mejs.MediaFeatures, autoplayAttr = domNode.getAttribute("autoplay"), autoplay = !("undefined" == typeof autoplayAttr || null === autoplayAttr || "false" === autoplayAttr);
            if (!t.created) {
                if (t.created = !0, t.media = media, t.domNode = domNode, !(mf.isAndroid && t.options.AndroidUseNativeControls || mf.isiPad && t.options.iPadUseNativeControls || mf.isiPhone && t.options.iPhoneUseNativeControls)) {
                    t.buildposter(t, t.controls, t.layers, t.media), t.buildkeyboard(t, t.controls, t.layers, t.media), 
                    t.buildoverlays(t, t.controls, t.layers, t.media), t.findTracks();
                    for (featureIndex in t.options.features) if (feature = t.options.features[featureIndex], 
                    t["build" + feature]) try {
                        t["build" + feature](t, t.controls, t.layers, t.media);
                    } catch (e) {}
                    t.container.trigger("controlsready"), t.setPlayerSize(t.width, t.height), t.setControlsSize(), 
                    t.isVideo && (mejs.MediaFeatures.hasTouch ? t.$media.bind("touchstart", function() {
                        t.controlsAreVisible ? t.hideControls(!1) : t.controlsEnabled && t.showControls(!1);
                    }) : (mejs.MediaElementPlayer.prototype.clickToPlayPauseCallback = function() {
                        t.options.clickToPlayPause && (t.media.paused ? t.play() : t.pause());
                    }, t.media.addEventListener("click", t.clickToPlayPauseCallback, !1), t.container.bind("mouseenter mouseover", function() {
                        t.controlsEnabled && (t.options.alwaysShowControls || (t.killControlsTimer("enter"), 
                        t.showControls(), t.startControlsTimer(2500)));
                    }).bind("mousemove", function() {
                        t.controlsEnabled && (t.controlsAreVisible || t.showControls(), t.options.alwaysShowControls || t.startControlsTimer(2500));
                    }).bind("mouseleave", function() {
                        t.controlsEnabled && (t.media.paused || t.options.alwaysShowControls || t.startControlsTimer(1e3));
                    })), t.options.hideVideoControlsOnLoad && t.hideControls(!1), autoplay && !t.options.alwaysShowControls && t.hideControls(), 
                    t.options.enableAutosize && t.media.addEventListener("loadedmetadata", function(e) {
                        t.options.videoHeight <= 0 && null === t.domNode.getAttribute("height") && !isNaN(e.target.videoHeight) && (t.setPlayerSize(e.target.videoWidth, e.target.videoHeight), 
                        t.setControlsSize(), t.media.setVideoSize(e.target.videoWidth, e.target.videoHeight));
                    }, !1)), media.addEventListener("play", function() {
                        var playerIndex;
                        for (playerIndex in mejs.players) {
                            var p = mejs.players[playerIndex];
                            p.id == t.id || !t.options.pauseOtherPlayers || p.paused || p.ended || p.pause(), 
                            p.hasFocus = !1;
                        }
                        t.hasFocus = !0;
                    }, !1), t.media.addEventListener("ended", function() {
                        if (t.options.autoRewind) try {
                            t.media.setCurrentTime(0);
                        } catch (exp) {}
                        t.media.pause(), t.setProgressRail && t.setProgressRail(), t.setCurrentRail && t.setCurrentRail(), 
                        t.options.loop ? t.play() : !t.options.alwaysShowControls && t.controlsEnabled && t.showControls();
                    }, !1), t.media.addEventListener("loadedmetadata", function() {
                        t.updateDuration && t.updateDuration(), t.updateCurrent && t.updateCurrent(), t.isFullScreen || (t.setPlayerSize(t.width, t.height), 
                        t.setControlsSize());
                    }, !1), setTimeout(function() {
                        t.setPlayerSize(t.width, t.height), t.setControlsSize();
                    }, 50), t.globalBind("resize", function() {
                        t.isFullScreen || mejs.MediaFeatures.hasTrueNativeFullScreen && document.webkitIsFullScreen || t.setPlayerSize(t.width, t.height), 
                        t.setControlsSize();
                    }), "youtube" == t.media.pluginType && t.container.find(".mejs-overlay-play").hide();
                }
                autoplay && "native" == media.pluginType && t.play(), t.options.success && ("string" == typeof t.options.success ? window[t.options.success](t.media, t.domNode, t) : t.options.success(t.media, t.domNode, t));
            }
        },
        handleError: function(e) {
            var t = this;
            t.controls.hide(), t.options.error && t.options.error(e);
        },
        setPlayerSize: function(width, height) {
            var t = this;
            if ("undefined" != typeof width && (t.width = width), "undefined" != typeof height && (t.height = height), 
            t.height.toString().indexOf("%") > 0 || "100%" === t.$node.css("max-width") || parseInt(t.$node.css("max-width").replace(/px/, ""), 10) / t.$node.offsetParent().width() === 1 || t.$node[0].currentStyle && "100%" === t.$node[0].currentStyle.maxWidth) {
                var nativeWidth = t.isVideo ? t.media.videoWidth && t.media.videoWidth > 0 ? t.media.videoWidth : t.options.defaultVideoWidth : t.options.defaultAudioWidth, nativeHeight = t.isVideo ? t.media.videoHeight && t.media.videoHeight > 0 ? t.media.videoHeight : t.options.defaultVideoHeight : t.options.defaultAudioHeight, parentWidth = t.container.parent().closest(":visible").width(), newHeight = t.isVideo || !t.options.autosizeProgress ? parseInt(parentWidth * nativeHeight / nativeWidth, 10) : nativeHeight;
                "body" === t.container.parent()[0].tagName.toLowerCase() && (parentWidth = $(window).width(), 
                newHeight = $(window).height()), 0 != newHeight && 0 != parentWidth && (t.container.width(parentWidth).height(newHeight), 
                t.$media.add(t.container.find(".mejs-shim")).width("100%").height("100%"), t.isVideo && t.media.setVideoSize && t.media.setVideoSize(parentWidth, newHeight), 
                t.layers.children(".mejs-layer").width("100%").height("100%"));
            } else t.container.width(t.width).height(t.height), t.layers.children(".mejs-layer").width(t.width).height(t.height);
            var playLayer = t.layers.find(".mejs-overlay-play"), playButton = playLayer.find(".mejs-overlay-button");
            playLayer.height(t.container.height() - t.controls.height()), playButton.css("margin-top", "-" + (playButton.height() / 2 - t.controls.height() / 2).toString() + "px");
        },
        setControlsSize: function() {
            var t = this, usedWidth = 0, railWidth = 0, rail = t.controls.find(".mejs-time-rail"), total = t.controls.find(".mejs-time-total"), others = (t.controls.find(".mejs-time-current"), 
            t.controls.find(".mejs-time-loaded"), rail.siblings());
            t.options && !t.options.autosizeProgress && (railWidth = parseInt(rail.css("width"))), 
            0 !== railWidth && railWidth || (others.each(function() {
                var $this = $(this);
                "absolute" != $this.css("position") && $this.is(":visible") && (usedWidth += $(this).outerWidth(!0));
            }), railWidth = t.controls.width() - usedWidth - (rail.outerWidth(!0) - rail.width())), 
            rail.width(railWidth), total.width(railWidth - (total.outerWidth(!0) - total.width())), 
            t.setProgressRail && t.setProgressRail(), t.setCurrentRail && t.setCurrentRail();
        },
        buildposter: function(player, controls, layers, media) {
            var t = this, poster = $('<div class="mejs-poster mejs-layer"></div>').appendTo(layers), posterUrl = player.$media.attr("poster");
            "" !== player.options.poster && (posterUrl = player.options.poster), "" !== posterUrl && null != posterUrl ? t.setPoster(posterUrl) : poster.hide(), 
            media.addEventListener("play", function() {
                poster.hide();
            }, !1), player.options.showPosterWhenEnded && player.options.autoRewind && media.addEventListener("ended", function() {
                poster.show();
            }, !1);
        },
        setPoster: function(url) {
            var t = this, posterDiv = t.container.find(".mejs-poster"), posterImg = posterDiv.find("img");
            0 == posterImg.length && (posterImg = $('<img width="100%" height="100%" />').appendTo(posterDiv)), 
            posterImg.attr("src", url), posterDiv.css({
                "background-image": "url(" + url + ")"
            });
        },
        buildoverlays: function(player, controls, layers, media) {
            var t = this;
            if (player.isVideo) {
                var loading = $('<div class="mejs-overlay mejs-layer"><div class="mejs-overlay-loading"><span></span></div></div>').hide().appendTo(layers), error = $('<div class="mejs-overlay mejs-layer"><div class="mejs-overlay-error"></div></div>').hide().appendTo(layers), bigPlay = $('<div class="mejs-overlay mejs-layer mejs-overlay-play"><div class="mejs-overlay-button"></div></div>').appendTo(layers).bind("click touchstart", function() {
                    t.options.clickToPlayPause && media.paused && t.play();
                });
                media.addEventListener("play", function() {
                    bigPlay.hide(), loading.hide(), controls.find(".mejs-time-buffering").hide(), error.hide();
                }, !1), media.addEventListener("playing", function() {
                    bigPlay.hide(), loading.hide(), controls.find(".mejs-time-buffering").hide(), error.hide();
                }, !1), media.addEventListener("seeking", function() {
                    loading.show(), controls.find(".mejs-time-buffering").show();
                }, !1), media.addEventListener("seeked", function() {
                    loading.hide(), controls.find(".mejs-time-buffering").hide();
                }, !1), media.addEventListener("pause", function() {
                    mejs.MediaFeatures.isiPhone || bigPlay.show();
                }, !1), media.addEventListener("waiting", function() {
                    loading.show(), controls.find(".mejs-time-buffering").show();
                }, !1), media.addEventListener("loadeddata", function() {
                    loading.show(), controls.find(".mejs-time-buffering").show();
                }, !1), media.addEventListener("canplay", function() {
                    loading.hide(), controls.find(".mejs-time-buffering").hide();
                }, !1), media.addEventListener("error", function() {
                    loading.hide(), controls.find(".mejs-time-buffering").hide(), error.show(), error.find("mejs-overlay-error").html("Error loading this resource");
                }, !1);
            }
        },
        buildkeyboard: function(player, controls, layers, media) {
            var t = this;
            t.globalBind("keydown", function(e) {
                if (player.hasFocus && player.options.enableKeyboard) for (var i = 0, il = player.options.keyActions.length; il > i; i++) for (var keyAction = player.options.keyActions[i], j = 0, jl = keyAction.keys.length; jl > j; j++) if (e.keyCode == keyAction.keys[j]) return e.preventDefault(), 
                keyAction.action(player, media, e.keyCode), !1;
                return !0;
            }), t.globalBind("click", function(event) {
                0 == $(event.target).closest(".mejs-container").length && (player.hasFocus = !1);
            });
        },
        findTracks: function() {
            var t = this, tracktags = t.$media.find("track");
            t.tracks = [], tracktags.each(function(index, track) {
                track = $(track), t.tracks.push({
                    srclang: track.attr("srclang") ? track.attr("srclang").toLowerCase() : "",
                    src: track.attr("src"),
                    kind: track.attr("kind"),
                    label: track.attr("label") || "",
                    entries: [],
                    isLoaded: !1
                });
            });
        },
        changeSkin: function(className) {
            this.container[0].className = "mejs-container " + className, this.setPlayerSize(this.width, this.height), 
            this.setControlsSize();
        },
        play: function() {
            this.load(), this.media.play();
        },
        pause: function() {
            try {
                this.media.pause();
            } catch (e) {}
        },
        load: function() {
            this.isLoaded || this.media.load(), this.isLoaded = !0;
        },
        setMuted: function(muted) {
            this.media.setMuted(muted);
        },
        setCurrentTime: function(time) {
            this.media.setCurrentTime(time);
        },
        getCurrentTime: function() {
            return this.media.currentTime;
        },
        setVolume: function(volume) {
            this.media.setVolume(volume);
        },
        getVolume: function() {
            return this.media.volume;
        },
        setSrc: function(src) {
            this.media.setSrc(src);
        },
        remove: function() {
            var featureIndex, feature, t = this;
            for (featureIndex in t.options.features) if (feature = t.options.features[featureIndex], 
            t["clean" + feature]) try {
                t["clean" + feature](t);
            } catch (e) {}
            t.isDynamic ? t.$node.insertBefore(t.container) : (t.$media.prop("controls", !0), 
            t.$node.clone().show().insertBefore(t.container), t.$node.remove()), "native" !== t.media.pluginType && t.media.remove(), 
            delete mejs.players[t.id], t.container.remove(), t.globalUnbind(), delete t.node.player;
        }
    }, function() {
        function splitEvents(events, id) {
            var ret = {
                d: [],
                w: []
            };
            return $.each((events || "").split(" "), function(k, v) {
                var eventname = v + "." + id;
                0 === eventname.indexOf(".") ? (ret.d.push(eventname), ret.w.push(eventname)) : ret[rwindow.test(v) ? "w" : "d"].push(eventname);
            }), ret.d = ret.d.join(" "), ret.w = ret.w.join(" "), ret;
        }
        var rwindow = /^((after|before)print|(before)?unload|hashchange|message|o(ff|n)line|page(hide|show)|popstate|resize|storage)\b/;
        mejs.MediaElementPlayer.prototype.globalBind = function(events, data, callback) {
            var t = this;
            events = splitEvents(events, t.id), events.d && $(document).bind(events.d, data, callback), 
            events.w && $(window).bind(events.w, data, callback);
        }, mejs.MediaElementPlayer.prototype.globalUnbind = function(events, callback) {
            var t = this;
            events = splitEvents(events, t.id), events.d && $(document).unbind(events.d, callback), 
            events.w && $(window).unbind(events.w, callback);
        };
    }(), "undefined" != typeof jQuery && (jQuery.fn.mediaelementplayer = function(options) {
        return this.each(options === !1 ? function() {
            var player = jQuery(this).data("mediaelementplayer");
            player && player.remove(), jQuery(this).removeData("mediaelementplayer");
        } : function() {
            jQuery(this).data("mediaelementplayer", new mejs.MediaElementPlayer(this, options));
        }), this;
    }), $(document).ready(function() {
        $(".mejs-player").mediaelementplayer();
    }), window.MediaElementPlayer = mejs.MediaElementPlayer;
}(mejs.$), function($) {
    $.extend(mejs.MepDefaults, {
        playpauseText: mejs.i18n.t("Play/Pause")
    }), $.extend(MediaElementPlayer.prototype, {
        buildplaypause: function(player, controls, layers, media) {
            var t = this, play = $('<div class="mejs-button mejs-playpause-button mejs-play" ><button type="button" aria-controls="' + t.id + '" title="' + t.options.playpauseText + '" aria-label="' + t.options.playpauseText + '"></button></div>').appendTo(controls).click(function(e) {
                return e.preventDefault(), media.paused ? media.play() : media.pause(), !1;
            });
            media.addEventListener("play", function() {
                play.removeClass("mejs-play").addClass("mejs-pause");
            }, !1), media.addEventListener("playing", function() {
                play.removeClass("mejs-play").addClass("mejs-pause");
            }, !1), media.addEventListener("pause", function() {
                play.removeClass("mejs-pause").addClass("mejs-play");
            }, !1), media.addEventListener("paused", function() {
                play.removeClass("mejs-pause").addClass("mejs-play");
            }, !1);
        }
    });
}(mejs.$), function($) {
    $.extend(mejs.MepDefaults, {
        stopText: "Stop"
    }), $.extend(MediaElementPlayer.prototype, {
        buildstop: function(player, controls, layers, media) {
            {
                var t = this;
                $('<div class="mejs-button mejs-stop-button mejs-stop"><button type="button" aria-controls="' + t.id + '" title="' + t.options.stopText + '" aria-label="' + t.options.stopText + '"></button></div>').appendTo(controls).click(function() {
                    media.paused || media.pause(), media.currentTime > 0 && (media.setCurrentTime(0), 
                    media.pause(), controls.find(".mejs-time-current").width("0px"), controls.find(".mejs-time-handle").css("left", "0px"), 
                    controls.find(".mejs-time-float-current").html(mejs.Utility.secondsToTimeCode(0)), 
                    controls.find(".mejs-currenttime").html(mejs.Utility.secondsToTimeCode(0)), layers.find(".mejs-poster").show());
                });
            }
        }
    });
}(mejs.$), function($) {
    $.extend(MediaElementPlayer.prototype, {
        buildprogress: function(player, controls, layers, media) {
            $('<div class="mejs-time-rail"><span class="mejs-time-total"><span class="mejs-time-buffering"></span><span class="mejs-time-loaded"></span><span class="mejs-time-current"></span><span class="mejs-time-handle"></span><span class="mejs-time-float"><span class="mejs-time-float-current">00:00</span><span class="mejs-time-float-corner"></span></span></span></div>').appendTo(controls), 
            controls.find(".mejs-time-buffering").hide();
            var t = this, total = controls.find(".mejs-time-total"), loaded = controls.find(".mejs-time-loaded"), current = controls.find(".mejs-time-current"), handle = controls.find(".mejs-time-handle"), timefloat = controls.find(".mejs-time-float"), timefloatcurrent = controls.find(".mejs-time-float-current"), handleMouseMove = function(e) {
                var x = e.pageX, offset = total.offset(), width = total.outerWidth(!0), percentage = 0, newTime = 0, pos = 0;
                media.duration && (x < offset.left ? x = offset.left : x > width + offset.left && (x = width + offset.left), 
                pos = x - offset.left, percentage = pos / width, newTime = .02 >= percentage ? 0 : percentage * media.duration, 
                mouseIsDown && newTime !== media.currentTime && media.setCurrentTime(newTime), mejs.MediaFeatures.hasTouch || (timefloat.css("left", pos), 
                timefloatcurrent.html(mejs.Utility.secondsToTimeCode(newTime)), timefloat.show()));
            }, mouseIsDown = !1, mouseIsOver = !1;
            total.bind("mousedown", function(e) {
                return 1 === e.which ? (mouseIsDown = !0, handleMouseMove(e), t.globalBind("mousemove.dur", function(e) {
                    handleMouseMove(e);
                }), t.globalBind("mouseup.dur", function() {
                    mouseIsDown = !1, timefloat.hide(), t.globalUnbind(".dur");
                }), !1) : void 0;
            }).bind("mouseenter", function() {
                mouseIsOver = !0, t.globalBind("mousemove.dur", function(e) {
                    handleMouseMove(e);
                }), mejs.MediaFeatures.hasTouch || timefloat.show();
            }).bind("mouseleave", function() {
                mouseIsOver = !1, mouseIsDown || (t.globalUnbind(".dur"), timefloat.hide());
            }), media.addEventListener("progress", function(e) {
                player.setProgressRail(e), player.setCurrentRail(e);
            }, !1), media.addEventListener("timeupdate", function(e) {
                player.setProgressRail(e), player.setCurrentRail(e);
            }, !1), t.loaded = loaded, t.total = total, t.current = current, t.handle = handle;
        },
        setProgressRail: function(e) {
            var t = this, target = void 0 != e ? e.target : t.media, percent = null;
            target && target.buffered && target.buffered.length > 0 && target.buffered.end && target.duration ? percent = target.buffered.end(0) / target.duration : target && void 0 != target.bytesTotal && target.bytesTotal > 0 && void 0 != target.bufferedBytes ? percent = target.bufferedBytes / target.bytesTotal : e && e.lengthComputable && 0 != e.total && (percent = e.loaded / e.total), 
            null !== percent && (percent = Math.min(1, Math.max(0, percent)), t.loaded && t.total && t.loaded.width(t.total.width() * percent));
        },
        setCurrentRail: function() {
            var t = this;
            if (void 0 != t.media.currentTime && t.media.duration && t.total && t.handle) {
                var newWidth = Math.round(t.total.width() * t.media.currentTime / t.media.duration), handlePos = newWidth - Math.round(t.handle.outerWidth(!0) / 2);
                t.current.width(newWidth), t.handle.css("left", handlePos);
            }
        }
    });
}(mejs.$), function($) {
    $.extend(mejs.MepDefaults, {
        duration: -1,
        timeAndDurationSeparator: "<span> | </span>"
    }), $.extend(MediaElementPlayer.prototype, {
        buildcurrent: function(player, controls, layers, media) {
            var t = this;
            $('<div class="mejs-time"><span class="mejs-currenttime">' + (player.options.alwaysShowHours ? "00:" : "") + (player.options.showTimecodeFrameCount ? "00:00:00" : "00:00") + "</span></div>").appendTo(controls), 
            t.currenttime = t.controls.find(".mejs-currenttime"), media.addEventListener("timeupdate", function() {
                player.updateCurrent();
            }, !1);
        },
        buildduration: function(player, controls, layers, media) {
            var t = this;
            controls.children().last().find(".mejs-currenttime").length > 0 ? $(t.options.timeAndDurationSeparator + '<span class="mejs-duration">' + (t.options.duration > 0 ? mejs.Utility.secondsToTimeCode(t.options.duration, t.options.alwaysShowHours || t.media.duration > 3600, t.options.showTimecodeFrameCount, t.options.framesPerSecond || 25) : (player.options.alwaysShowHours ? "00:" : "") + (player.options.showTimecodeFrameCount ? "00:00:00" : "00:00")) + "</span>").appendTo(controls.find(".mejs-time")) : (controls.find(".mejs-currenttime").parent().addClass("mejs-currenttime-container"), 
            $('<div class="mejs-time mejs-duration-container"><span class="mejs-duration">' + (t.options.duration > 0 ? mejs.Utility.secondsToTimeCode(t.options.duration, t.options.alwaysShowHours || t.media.duration > 3600, t.options.showTimecodeFrameCount, t.options.framesPerSecond || 25) : (player.options.alwaysShowHours ? "00:" : "") + (player.options.showTimecodeFrameCount ? "00:00:00" : "00:00")) + "</span></div>").appendTo(controls)), 
            t.durationD = t.controls.find(".mejs-duration"), media.addEventListener("timeupdate", function() {
                player.updateDuration();
            }, !1);
        },
        updateCurrent: function() {
            var t = this;
            t.currenttime && t.currenttime.html(mejs.Utility.secondsToTimeCode(t.media.currentTime, t.options.alwaysShowHours || t.media.duration > 3600, t.options.showTimecodeFrameCount, t.options.framesPerSecond || 25));
        },
        updateDuration: function() {
            var t = this;
            t.container.toggleClass("mejs-long-video", t.media.duration > 3600), t.durationD && (t.options.duration > 0 || t.media.duration) && t.durationD.html(mejs.Utility.secondsToTimeCode(t.options.duration > 0 ? t.options.duration : t.media.duration, t.options.alwaysShowHours, t.options.showTimecodeFrameCount, t.options.framesPerSecond || 25));
        }
    });
}(mejs.$), function($) {
    $.extend(mejs.MepDefaults, {
        muteText: mejs.i18n.t("Mute Toggle"),
        hideVolumeOnTouchDevices: !0,
        audioVolume: "horizontal",
        videoVolume: "vertical"
    }), $.extend(MediaElementPlayer.prototype, {
        buildvolume: function(player, controls, layers, media) {
            if (!mejs.MediaFeatures.hasTouch || !this.options.hideVolumeOnTouchDevices) {
                var t = this, mode = t.isVideo ? t.options.videoVolume : t.options.audioVolume, mute = "horizontal" == mode ? $('<div class="mejs-button mejs-volume-button mejs-mute"><button type="button" aria-controls="' + t.id + '" title="' + t.options.muteText + '" aria-label="' + t.options.muteText + '"></button></div><div class="mejs-horizontal-volume-slider"><div class="mejs-horizontal-volume-total"></div><div class="mejs-horizontal-volume-current"></div><div class="mejs-horizontal-volume-handle"></div></div>').appendTo(controls) : $('<div class="mejs-button mejs-volume-button mejs-mute"><button type="button" aria-controls="' + t.id + '" title="' + t.options.muteText + '" aria-label="' + t.options.muteText + '"></button><div class="mejs-volume-slider"><div class="mejs-volume-total"></div><div class="mejs-volume-current"></div><div class="mejs-volume-handle"></div></div></div>').appendTo(controls), volumeSlider = t.container.find(".mejs-volume-slider, .mejs-horizontal-volume-slider"), volumeTotal = t.container.find(".mejs-volume-total, .mejs-horizontal-volume-total"), volumeCurrent = t.container.find(".mejs-volume-current, .mejs-horizontal-volume-current"), volumeHandle = t.container.find(".mejs-volume-handle, .mejs-horizontal-volume-handle"), positionVolumeHandle = function(volume, secondTry) {
                    if (!volumeSlider.is(":visible") && "undefined" == typeof secondTry) return volumeSlider.show(), 
                    positionVolumeHandle(volume, !0), void volumeSlider.hide();
                    if (volume = Math.max(0, volume), volume = Math.min(volume, 1), 0 == volume ? mute.removeClass("mejs-mute").addClass("mejs-unmute") : mute.removeClass("mejs-unmute").addClass("mejs-mute"), 
                    "vertical" == mode) {
                        var totalHeight = volumeTotal.height(), totalPosition = volumeTotal.position(), newTop = totalHeight - totalHeight * volume;
                        volumeHandle.css("top", Math.round(totalPosition.top + newTop - volumeHandle.height() / 2)), 
                        volumeCurrent.height(totalHeight - newTop), volumeCurrent.css("top", totalPosition.top + newTop);
                    } else {
                        var totalWidth = volumeTotal.width(), totalPosition = volumeTotal.position(), newLeft = totalWidth * volume;
                        volumeHandle.css("left", Math.round(totalPosition.left + newLeft - volumeHandle.width() / 2)), 
                        volumeCurrent.width(Math.round(newLeft));
                    }
                }, handleVolumeMove = function(e) {
                    var volume = null, totalOffset = volumeTotal.offset();
                    if ("vertical" == mode) {
                        var railHeight = volumeTotal.height(), newY = (parseInt(volumeTotal.css("top").replace(/px/, ""), 10), 
                        e.pageY - totalOffset.top);
                        if (volume = (railHeight - newY) / railHeight, 0 == totalOffset.top || 0 == totalOffset.left) return;
                    } else {
                        var railWidth = volumeTotal.width(), newX = e.pageX - totalOffset.left;
                        volume = newX / railWidth;
                    }
                    volume = Math.max(0, volume), volume = Math.min(volume, 1), positionVolumeHandle(volume), 
                    media.setMuted(0 == volume ? !0 : !1), media.setVolume(volume);
                }, mouseIsDown = !1, mouseIsOver = !1;
                mute.hover(function() {
                    volumeSlider.show(), mouseIsOver = !0;
                }, function() {
                    mouseIsOver = !1, mouseIsDown || "vertical" != mode || volumeSlider.hide();
                }), volumeSlider.bind("mouseover", function() {
                    mouseIsOver = !0;
                }).bind("mousedown", function(e) {
                    return handleVolumeMove(e), t.globalBind("mousemove.vol", function(e) {
                        handleVolumeMove(e);
                    }), t.globalBind("mouseup.vol", function() {
                        mouseIsDown = !1, t.globalUnbind(".vol"), mouseIsOver || "vertical" != mode || volumeSlider.hide();
                    }), mouseIsDown = !0, !1;
                }), mute.find("button").click(function() {
                    media.setMuted(!media.muted);
                }), media.addEventListener("volumechange", function() {
                    mouseIsDown || (media.muted ? (positionVolumeHandle(0), mute.removeClass("mejs-mute").addClass("mejs-unmute")) : (positionVolumeHandle(media.volume), 
                    mute.removeClass("mejs-unmute").addClass("mejs-mute")));
                }, !1), t.container.is(":visible") && (positionVolumeHandle(player.options.startVolume), 
                0 === player.options.startVolume && media.setMuted(!0), "native" === media.pluginType && media.setVolume(player.options.startVolume));
            }
        }
    });
}(mejs.$), function($) {
    $.extend(mejs.MepDefaults, {
        usePluginFullScreen: !0,
        newWindowCallback: function() {
            return "";
        },
        fullscreenText: mejs.i18n.t("Fullscreen")
    }), $.extend(MediaElementPlayer.prototype, {
        isFullScreen: !1,
        isNativeFullScreen: !1,
        isInIframe: !1,
        buildfullscreen: function(player, controls, layers, media) {
            if (player.isVideo) {
                if (player.isInIframe = window.location != window.parent.location, mejs.MediaFeatures.hasTrueNativeFullScreen) {
                    var func = function() {
                        player.isFullScreen && (mejs.MediaFeatures.isFullScreen() ? (player.isNativeFullScreen = !0, 
                        player.setControlsSize()) : (player.isNativeFullScreen = !1, player.exitFullScreen()));
                    };
                    mejs.MediaFeatures.hasMozNativeFullScreen ? player.globalBind(mejs.MediaFeatures.fullScreenEventName, func) : player.container.bind(mejs.MediaFeatures.fullScreenEventName, func);
                }
                var t = this, fullscreenBtn = (player.container, $('<div class="mejs-button mejs-fullscreen-button"><button type="button" aria-controls="' + t.id + '" title="' + t.options.fullscreenText + '" aria-label="' + t.options.fullscreenText + '"></button></div>').appendTo(controls));
                if ("native" === t.media.pluginType || !t.options.usePluginFullScreen && !mejs.MediaFeatures.isFirefox) fullscreenBtn.click(function() {
                    var isFullScreen = mejs.MediaFeatures.hasTrueNativeFullScreen && mejs.MediaFeatures.isFullScreen() || player.isFullScreen;
                    isFullScreen ? player.exitFullScreen() : player.enterFullScreen();
                }); else {
                    var hideTimeout = null, supportsPointerEvents = function() {
                        var supports, element = document.createElement("x"), documentElement = document.documentElement, getComputedStyle = window.getComputedStyle;
                        return "pointerEvents" in element.style ? (element.style.pointerEvents = "auto", 
                        element.style.pointerEvents = "x", documentElement.appendChild(element), supports = getComputedStyle && "auto" === getComputedStyle(element, "").pointerEvents, 
                        documentElement.removeChild(element), !!supports) : !1;
                    }();
                    if (supportsPointerEvents && !mejs.MediaFeatures.isOpera) {
                        var i, len, fullscreenIsDisabled = !1, restoreControls = function() {
                            if (fullscreenIsDisabled) {
                                for (var i in hoverDivs) hoverDivs[i].hide();
                                fullscreenBtn.css("pointer-events", ""), t.controls.css("pointer-events", ""), t.media.removeEventListener("click", t.clickToPlayPauseCallback), 
                                fullscreenIsDisabled = !1;
                            }
                        }, hoverDivs = {}, hoverDivNames = [ "top", "left", "right", "bottom" ], positionHoverDivs = function() {
                            var fullScreenBtnOffsetLeft = fullscreenBtn.offset().left - t.container.offset().left, fullScreenBtnOffsetTop = fullscreenBtn.offset().top - t.container.offset().top, fullScreenBtnWidth = fullscreenBtn.outerWidth(!0), fullScreenBtnHeight = fullscreenBtn.outerHeight(!0), containerWidth = t.container.width(), containerHeight = t.container.height();
                            for (i in hoverDivs) hoverDivs[i].css({
                                position: "absolute",
                                top: 0,
                                left: 0
                            });
                            hoverDivs.top.width(containerWidth).height(fullScreenBtnOffsetTop), hoverDivs.left.width(fullScreenBtnOffsetLeft).height(fullScreenBtnHeight).css({
                                top: fullScreenBtnOffsetTop
                            }), hoverDivs.right.width(containerWidth - fullScreenBtnOffsetLeft - fullScreenBtnWidth).height(fullScreenBtnHeight).css({
                                top: fullScreenBtnOffsetTop,
                                left: fullScreenBtnOffsetLeft + fullScreenBtnWidth
                            }), hoverDivs.bottom.width(containerWidth).height(containerHeight - fullScreenBtnHeight - fullScreenBtnOffsetTop).css({
                                top: fullScreenBtnOffsetTop + fullScreenBtnHeight
                            });
                        };
                        for (t.globalBind("resize", function() {
                            positionHoverDivs();
                        }), i = 0, len = hoverDivNames.length; len > i; i++) hoverDivs[hoverDivNames[i]] = $('<div class="mejs-fullscreen-hover" />').appendTo(t.container).mouseover(restoreControls).hide();
                        fullscreenBtn.on("mouseover", function() {
                            if (!t.isFullScreen) {
                                var buttonPos = fullscreenBtn.offset(), containerPos = player.container.offset();
                                media.positionFullscreenButton(buttonPos.left - containerPos.left, buttonPos.top - containerPos.top, !1), 
                                fullscreenBtn.css("pointer-events", "none"), t.controls.css("pointer-events", "none"), 
                                t.media.addEventListener("click", t.clickToPlayPauseCallback);
                                for (i in hoverDivs) hoverDivs[i].show();
                                positionHoverDivs(), fullscreenIsDisabled = !0;
                            }
                        }), media.addEventListener("fullscreenchange", function() {
                            t.isFullScreen = !t.isFullScreen, t.isFullScreen ? t.media.removeEventListener("click", t.clickToPlayPauseCallback) : t.media.addEventListener("click", t.clickToPlayPauseCallback), 
                            restoreControls();
                        }), t.globalBind("mousemove", function(e) {
                            if (fullscreenIsDisabled) {
                                var fullscreenBtnPos = fullscreenBtn.offset();
                                (e.pageY < fullscreenBtnPos.top || e.pageY > fullscreenBtnPos.top + fullscreenBtn.outerHeight(!0) || e.pageX < fullscreenBtnPos.left || e.pageX > fullscreenBtnPos.left + fullscreenBtn.outerWidth(!0)) && (fullscreenBtn.css("pointer-events", ""), 
                                t.controls.css("pointer-events", ""), fullscreenIsDisabled = !1);
                            }
                        });
                    } else fullscreenBtn.on("mouseover", function() {
                        null !== hideTimeout && (clearTimeout(hideTimeout), delete hideTimeout);
                        var buttonPos = fullscreenBtn.offset(), containerPos = player.container.offset();
                        media.positionFullscreenButton(buttonPos.left - containerPos.left, buttonPos.top - containerPos.top, !0);
                    }).on("mouseout", function() {
                        null !== hideTimeout && (clearTimeout(hideTimeout), delete hideTimeout), hideTimeout = setTimeout(function() {
                            media.hideFullscreenButton();
                        }, 1500);
                    });
                }
                player.fullscreenBtn = fullscreenBtn, t.globalBind("keydown", function(e) {
                    (mejs.MediaFeatures.hasTrueNativeFullScreen && mejs.MediaFeatures.isFullScreen() || t.isFullScreen) && 27 == e.keyCode && player.exitFullScreen();
                });
            }
        },
        cleanfullscreen: function(player) {
            player.exitFullScreen();
        },
        containerSizeTimeout: null,
        enterFullScreen: function() {
            var t = this;
            if ("native" === t.media.pluginType || !mejs.MediaFeatures.isFirefox && !t.options.usePluginFullScreen) {
                if ($(document.documentElement).addClass("mejs-fullscreen"), normalHeight = t.container.height(), 
                normalWidth = t.container.width(), "native" === t.media.pluginType) if (mejs.MediaFeatures.hasTrueNativeFullScreen) mejs.MediaFeatures.requestFullScreen(t.container[0]), 
                t.isInIframe && setTimeout(function checkFullscreen() {
                    t.isNativeFullScreen && ($(window).width() !== screen.width ? t.exitFullScreen() : setTimeout(checkFullscreen, 500));
                }, 500); else if (mejs.MediaFeatures.hasSemiNativeFullScreen) return void t.media.webkitEnterFullscreen();
                if (t.isInIframe) {
                    var url = t.options.newWindowCallback(this);
                    if ("" !== url) {
                        if (!mejs.MediaFeatures.hasTrueNativeFullScreen) return t.pause(), void window.open(url, t.id, "top=0,left=0,width=" + screen.availWidth + ",height=" + screen.availHeight + ",resizable=yes,scrollbars=no,status=no,toolbar=no");
                        setTimeout(function() {
                            t.isNativeFullScreen || (t.pause(), window.open(url, t.id, "top=0,left=0,width=" + screen.availWidth + ",height=" + screen.availHeight + ",resizable=yes,scrollbars=no,status=no,toolbar=no"));
                        }, 250);
                    }
                }
                t.container.addClass("mejs-container-fullscreen").width("100%").height("100%"), 
                t.containerSizeTimeout = setTimeout(function() {
                    t.container.css({
                        width: "100%",
                        height: "100%"
                    }), t.setControlsSize();
                }, 500), "native" === t.media.pluginType ? t.$media.width("100%").height("100%") : (t.container.find(".mejs-shim").width("100%").height("100%"), 
                t.media.setVideoSize($(window).width(), $(window).height())), t.layers.children("div").width("100%").height("100%"), 
                t.fullscreenBtn && t.fullscreenBtn.removeClass("mejs-fullscreen").addClass("mejs-unfullscreen"), 
                t.setControlsSize(), t.isFullScreen = !0;
            }
        },
        exitFullScreen: function() {
            var t = this;
            return clearTimeout(t.containerSizeTimeout), "native" !== t.media.pluginType && mejs.MediaFeatures.isFirefox ? void t.media.setFullscreen(!1) : (mejs.MediaFeatures.hasTrueNativeFullScreen && (mejs.MediaFeatures.isFullScreen() || t.isFullScreen) && mejs.MediaFeatures.cancelFullScreen(), 
            $(document.documentElement).removeClass("mejs-fullscreen"), t.container.removeClass("mejs-container-fullscreen").width(normalWidth).height(normalHeight), 
            "native" === t.media.pluginType ? t.$media.width(normalWidth).height(normalHeight) : (t.container.find(".mejs-shim").width(normalWidth).height(normalHeight), 
            t.media.setVideoSize(normalWidth, normalHeight)), t.layers.children("div").width(normalWidth).height(normalHeight), 
            t.fullscreenBtn.removeClass("mejs-unfullscreen").addClass("mejs-fullscreen"), t.setControlsSize(), 
            void (t.isFullScreen = !1));
        }
    });
}(mejs.$), function($) {
    $.extend(mejs.MepDefaults, {
        startLanguage: "",
        tracksText: mejs.i18n.t("Captions/Subtitles"),
        hideCaptionsButtonWhenEmpty: !0,
        toggleCaptionsButtonWhenOnlyOne: !1,
        slidesSelector: ""
    }), $.extend(MediaElementPlayer.prototype, {
        hasChapters: !1,
        buildtracks: function(player, controls, layers, media) {
            if (0 != player.tracks.length) {
                var i, t = this;
                if (t.domNode.textTracks) for (var i = t.domNode.textTracks.length - 1; i >= 0; i--) t.domNode.textTracks[i].mode = "hidden";
                player.chapters = $('<div class="mejs-chapters mejs-layer"></div>').prependTo(layers).hide(), 
                player.captions = $('<div class="mejs-captions-layer mejs-layer"><div class="mejs-captions-position mejs-captions-position-hover"><span class="mejs-captions-text"></span></div></div>').prependTo(layers).hide(), 
                player.captionsText = player.captions.find(".mejs-captions-text"), player.captionsButton = $('<div class="mejs-button mejs-captions-button"><button type="button" aria-controls="' + t.id + '" title="' + t.options.tracksText + '" aria-label="' + t.options.tracksText + '"></button><div class="mejs-captions-selector"><ul><li><input type="radio" name="' + player.id + '_captions" id="' + player.id + '_captions_none" value="none" checked="checked" /><label for="' + player.id + '_captions_none">' + mejs.i18n.t("None") + "</label></li></ul></div></div>").appendTo(controls);
                var subtitleCount = 0;
                for (i = 0; i < player.tracks.length; i++) "subtitles" == player.tracks[i].kind && subtitleCount++;
                for (t.options.toggleCaptionsButtonWhenOnlyOne && 1 == subtitleCount ? player.captionsButton.on("click", function() {
                    if (null == player.selectedTrack) var lang = player.tracks[0].srclang; else var lang = "none";
                    player.setTrack(lang);
                }) : player.captionsButton.hover(function() {
                    $(this).find(".mejs-captions-selector").css("visibility", "visible");
                }, function() {
                    $(this).find(".mejs-captions-selector").css("visibility", "hidden");
                }).on("click", "input[type=radio]", function() {
                    lang = this.value, player.setTrack(lang);
                }), player.options.alwaysShowControls ? player.container.find(".mejs-captions-position").addClass("mejs-captions-position-hover") : player.container.bind("controlsshown", function() {
                    player.container.find(".mejs-captions-position").addClass("mejs-captions-position-hover");
                }).bind("controlshidden", function() {
                    media.paused || player.container.find(".mejs-captions-position").removeClass("mejs-captions-position-hover");
                }), player.trackToLoad = -1, player.selectedTrack = null, player.isLoadingTrack = !1, 
                i = 0; i < player.tracks.length; i++) "subtitles" == player.tracks[i].kind && player.addTrackButton(player.tracks[i].srclang, player.tracks[i].label);
                player.loadNextTrack(), media.addEventListener("timeupdate", function() {
                    player.displayCaptions();
                }, !1), "" != player.options.slidesSelector && (player.slidesContainer = $(player.options.slidesSelector), 
                media.addEventListener("timeupdate", function() {
                    player.displaySlides();
                }, !1)), media.addEventListener("loadedmetadata", function() {
                    player.displayChapters();
                }, !1), player.container.hover(function() {
                    player.hasChapters && (player.chapters.css("visibility", "visible"), player.chapters.fadeIn(200).height(player.chapters.find(".mejs-chapter").outerHeight()));
                }, function() {
                    player.hasChapters && !media.paused && player.chapters.fadeOut(200, function() {
                        $(this).css("visibility", "hidden"), $(this).css("display", "block");
                    });
                }), null !== player.node.getAttribute("autoplay") && player.chapters.css("visibility", "hidden");
            }
        },
        setTrack: function(lang) {
            var i, t = this;
            if ("none" == lang) t.selectedTrack = null, t.captionsButton.removeClass("mejs-captions-enabled"); else for (i = 0; i < t.tracks.length; i++) if (t.tracks[i].srclang == lang) {
                null == t.selectedTrack && t.captionsButton.addClass("mejs-captions-enabled"), t.selectedTrack = t.tracks[i], 
                t.captions.attr("lang", t.selectedTrack.srclang), t.displayCaptions();
                break;
            }
        },
        loadNextTrack: function() {
            var t = this;
            t.trackToLoad++, t.trackToLoad < t.tracks.length ? (t.isLoadingTrack = !0, t.loadTrack(t.trackToLoad)) : (t.isLoadingTrack = !1, 
            t.checkForTracks());
        },
        loadTrack: function(index) {
            var t = this, track = t.tracks[index], after = function() {
                track.isLoaded = !0, t.enableTrackButton(track.srclang, track.label), t.loadNextTrack();
            };
            $.ajax({
                url: track.src,
                dataType: "text",
                success: function(d) {
                    track.entries = "string" == typeof d && /<tt\s+xml/gi.exec(d) ? mejs.TrackFormatParser.dfxp.parse(d) : mejs.TrackFormatParser.webvvt.parse(d), 
                    after(), "chapters" == track.kind && t.media.addEventListener("play", function() {
                        t.media.duration > 0 && t.displayChapters(track);
                    }, !1), "slides" == track.kind && t.setupSlides(track);
                },
                error: function() {
                    t.loadNextTrack();
                }
            });
        },
        enableTrackButton: function(lang, label) {
            var t = this;
            "" === label && (label = mejs.language.codes[lang] || lang), t.captionsButton.find("input[value=" + lang + "]").prop("disabled", !1).siblings("label").html(label), 
            t.options.startLanguage == lang && $("#" + t.id + "_captions_" + lang).click(), 
            t.adjustLanguageBox();
        },
        addTrackButton: function(lang, label) {
            var t = this;
            "" === label && (label = mejs.language.codes[lang] || lang), t.captionsButton.find("ul").append($('<li><input type="radio" name="' + t.id + '_captions" id="' + t.id + "_captions_" + lang + '" value="' + lang + '" disabled="disabled" /><label for="' + t.id + "_captions_" + lang + '">' + label + " (loading)</label></li>")), 
            t.adjustLanguageBox(), t.container.find(".mejs-captions-translations option[value=" + lang + "]").remove();
        },
        adjustLanguageBox: function() {
            var t = this;
            t.captionsButton.find(".mejs-captions-selector").height(t.captionsButton.find(".mejs-captions-selector ul").outerHeight(!0) + t.captionsButton.find(".mejs-captions-translations").outerHeight(!0));
        },
        checkForTracks: function() {
            var t = this, hasSubtitles = !1;
            if (t.options.hideCaptionsButtonWhenEmpty) {
                for (i = 0; i < t.tracks.length; i++) if ("subtitles" == t.tracks[i].kind) {
                    hasSubtitles = !0;
                    break;
                }
                hasSubtitles || (t.captionsButton.hide(), t.setControlsSize());
            }
        },
        displayCaptions: function() {
            if ("undefined" != typeof this.tracks) {
                var i, t = this, track = t.selectedTrack;
                if (null != track && track.isLoaded) {
                    for (i = 0; i < track.entries.times.length; i++) if (t.media.currentTime >= track.entries.times[i].start && t.media.currentTime <= track.entries.times[i].stop) return t.captionsText.html(track.entries.text[i]), 
                    void t.captions.show().height(0);
                    t.captions.hide();
                } else t.captions.hide();
            }
        },
        setupSlides: function(track) {
            var t = this;
            t.slides = track, t.slides.entries.imgs = [ t.slides.entries.text.length ], t.showSlide(0);
        },
        showSlide: function(index) {
            if ("undefined" != typeof this.tracks && "undefined" != typeof this.slidesContainer) {
                var t = this, url = t.slides.entries.text[index], img = t.slides.entries.imgs[index];
                "undefined" == typeof img || "undefined" == typeof img.fadeIn ? t.slides.entries.imgs[index] = img = $('<img src="' + url + '">').on("load", function() {
                    img.appendTo(t.slidesContainer).hide().fadeIn().siblings(":visible").fadeOut();
                }) : img.is(":visible") || img.is(":animated") || img.fadeIn().siblings(":visible").fadeOut();
            }
        },
        displaySlides: function() {
            if ("undefined" != typeof this.slides) {
                var i, t = this, slides = t.slides;
                for (i = 0; i < slides.entries.times.length; i++) if (t.media.currentTime >= slides.entries.times[i].start && t.media.currentTime <= slides.entries.times[i].stop) return void t.showSlide(i);
            }
        },
        displayChapters: function() {
            var i, t = this;
            for (i = 0; i < t.tracks.length; i++) if ("chapters" == t.tracks[i].kind && t.tracks[i].isLoaded) {
                t.drawChapters(t.tracks[i]), t.hasChapters = !0;
                break;
            }
        },
        drawChapters: function(chapters) {
            var i, dur, t = this, percent = 0, usedPercent = 0;
            for (t.chapters.empty(), i = 0; i < chapters.entries.times.length; i++) dur = chapters.entries.times[i].stop - chapters.entries.times[i].start, 
            percent = Math.floor(dur / t.media.duration * 100), (percent + usedPercent > 100 || i == chapters.entries.times.length - 1 && 100 > percent + usedPercent) && (percent = 100 - usedPercent), 
            t.chapters.append($('<div class="mejs-chapter" rel="' + chapters.entries.times[i].start + '" style="left: ' + usedPercent.toString() + "%;width: " + percent.toString() + '%;"><div class="mejs-chapter-block' + (i == chapters.entries.times.length - 1 ? " mejs-chapter-block-last" : "") + '"><span class="ch-title">' + chapters.entries.text[i] + '</span><span class="ch-time">' + mejs.Utility.secondsToTimeCode(chapters.entries.times[i].start) + "&ndash;" + mejs.Utility.secondsToTimeCode(chapters.entries.times[i].stop) + "</span></div></div>")), 
            usedPercent += percent;
            t.chapters.find("div.mejs-chapter").click(function() {
                t.media.setCurrentTime(parseFloat($(this).attr("rel"))), t.media.paused && t.media.play();
            }), t.chapters.show();
        }
    }), mejs.language = {
        codes: {
            af: "Afrikaans",
            sq: "Albanian",
            ar: "Arabic",
            be: "Belarusian",
            bg: "Bulgarian",
            ca: "Catalan",
            zh: "Chinese",
            "zh-cn": "Chinese Simplified",
            "zh-tw": "Chinese Traditional",
            hr: "Croatian",
            cs: "Czech",
            da: "Danish",
            nl: "Dutch",
            en: "English",
            et: "Estonian",
            tl: "Filipino",
            fi: "Finnish",
            fr: "French",
            gl: "Galician",
            de: "German",
            el: "Greek",
            ht: "Haitian Creole",
            iw: "Hebrew",
            hi: "Hindi",
            hu: "Hungarian",
            is: "Icelandic",
            id: "Indonesian",
            ga: "Irish",
            it: "Italian",
            ja: "Japanese",
            ko: "Korean",
            lv: "Latvian",
            lt: "Lithuanian",
            mk: "Macedonian",
            ms: "Malay",
            mt: "Maltese",
            no: "Norwegian",
            fa: "Persian",
            pl: "Polish",
            pt: "Portuguese",
            ro: "Romanian",
            ru: "Russian",
            sr: "Serbian",
            sk: "Slovak",
            sl: "Slovenian",
            es: "Spanish",
            sw: "Swahili",
            sv: "Swedish",
            tl: "Tagalog",
            th: "Thai",
            tr: "Turkish",
            uk: "Ukrainian",
            vi: "Vietnamese",
            cy: "Welsh",
            yi: "Yiddish"
        }
    }, mejs.TrackFormatParser = {
        webvvt: {
            pattern_identifier: /^([a-zA-z]+-)?[0-9]+$/,
            pattern_timecode: /^([0-9]{2}:[0-9]{2}:[0-9]{2}([,.][0-9]{1,3})?) --\> ([0-9]{2}:[0-9]{2}:[0-9]{2}([,.][0-9]{3})?)(.*)$/,
            parse: function(trackText) {
                for (var timecode, text, i = 0, lines = mejs.TrackFormatParser.split2(trackText, /\r?\n/), entries = {
                    text: [],
                    times: []
                }; i < lines.length; i++) if (this.pattern_identifier.exec(lines[i]) && (i++, timecode = this.pattern_timecode.exec(lines[i]), 
                timecode && i < lines.length)) {
                    for (i++, text = lines[i], i++; "" !== lines[i] && i < lines.length; ) text = text + "\n" + lines[i], 
                    i++;
                    text = $.trim(text).replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi, "<a href='$1' target='_blank'>$1</a>"), 
                    entries.text.push(text), entries.times.push({
                        start: 0 == mejs.Utility.convertSMPTEtoSeconds(timecode[1]) ? .2 : mejs.Utility.convertSMPTEtoSeconds(timecode[1]),
                        stop: mejs.Utility.convertSMPTEtoSeconds(timecode[3]),
                        settings: timecode[5]
                    });
                }
                return entries;
            }
        },
        dfxp: {
            parse: function(trackText) {
                trackText = $(trackText).filter("tt");
                var styles, text, i = 0, container = trackText.children("div").eq(0), lines = container.find("p"), styleNode = trackText.find("#" + container.attr("style")), entries = {
                    text: [],
                    times: []
                };
                if (styleNode.length) {
                    var attributes = styleNode.removeAttr("id").get(0).attributes;
                    if (attributes.length) for (styles = {}, i = 0; i < attributes.length; i++) styles[attributes[i].name.split(":")[1]] = attributes[i].value;
                }
                for (i = 0; i < lines.length; i++) {
                    var style, _temp_times = {
                        start: null,
                        stop: null,
                        style: null
                    };
                    if (lines.eq(i).attr("begin") && (_temp_times.start = mejs.Utility.convertSMPTEtoSeconds(lines.eq(i).attr("begin"))), 
                    !_temp_times.start && lines.eq(i - 1).attr("end") && (_temp_times.start = mejs.Utility.convertSMPTEtoSeconds(lines.eq(i - 1).attr("end"))), 
                    lines.eq(i).attr("end") && (_temp_times.stop = mejs.Utility.convertSMPTEtoSeconds(lines.eq(i).attr("end"))), 
                    !_temp_times.stop && lines.eq(i + 1).attr("begin") && (_temp_times.stop = mejs.Utility.convertSMPTEtoSeconds(lines.eq(i + 1).attr("begin"))), 
                    styles) {
                        style = "";
                        for (var _style in styles) style += _style + ":" + styles[_style] + ";";
                    }
                    style && (_temp_times.style = style), 0 == _temp_times.start && (_temp_times.start = .2), 
                    entries.times.push(_temp_times), text = $.trim(lines.eq(i).html()).replace(/(\b(https?|ftp|file):\/\/[-A-Z0-9+&@#\/%?=~_|!:,.;]*[-A-Z0-9+&@#\/%=~_|])/gi, "<a href='$1' target='_blank'>$1</a>"), 
                    entries.text.push(text), 0 == entries.times.start && (entries.times.start = 2);
                }
                return entries;
            }
        },
        split2: function(text, regex) {
            return text.split(regex);
        }
    }, 3 != "x\n\ny".split(/\n/gi).length && (mejs.TrackFormatParser.split2 = function(text, regex) {
        var i, parts = [], chunk = "";
        for (i = 0; i < text.length; i++) chunk += text.substring(i, i + 1), regex.test(chunk) && (parts.push(chunk.replace(regex, "")), 
        chunk = "");
        return parts.push(chunk), parts;
    });
}(mejs.$), function($) {
    $.extend(mejs.MepDefaults, {
        contextMenuItems: [ {
            render: function(player) {
                return "undefined" == typeof player.enterFullScreen ? null : mejs.i18n.t(player.isFullScreen ? "Turn off Fullscreen" : "Go Fullscreen");
            },
            click: function(player) {
                player.isFullScreen ? player.exitFullScreen() : player.enterFullScreen();
            }
        }, {
            render: function(player) {
                return mejs.i18n.t(player.media.muted ? "Unmute" : "Mute");
            },
            click: function(player) {
                player.setMuted(player.media.muted ? !1 : !0);
            }
        }, {
            isSeparator: !0
        }, {
            render: function() {
                return mejs.i18n.t("Download Video");
            },
            click: function(player) {
                window.location.href = player.media.currentSrc;
            }
        } ]
    }), $.extend(MediaElementPlayer.prototype, {
        buildcontextmenu: function(player) {
            player.contextMenu = $('<div class="mejs-contextmenu"></div>').appendTo($("body")).hide(), 
            player.container.bind("contextmenu", function(e) {
                return player.isContextMenuEnabled ? (e.preventDefault(), player.renderContextMenu(e.clientX - 1, e.clientY - 1), 
                !1) : void 0;
            }), player.container.bind("click", function() {
                player.contextMenu.hide();
            }), player.contextMenu.bind("mouseleave", function() {
                player.startContextMenuTimer();
            });
        },
        cleancontextmenu: function(player) {
            player.contextMenu.remove();
        },
        isContextMenuEnabled: !0,
        enableContextMenu: function() {
            this.isContextMenuEnabled = !0;
        },
        disableContextMenu: function() {
            this.isContextMenuEnabled = !1;
        },
        contextMenuTimeout: null,
        startContextMenuTimer: function() {
            var t = this;
            t.killContextMenuTimer(), t.contextMenuTimer = setTimeout(function() {
                t.hideContextMenu(), t.killContextMenuTimer();
            }, 750);
        },
        killContextMenuTimer: function() {
            var timer = this.contextMenuTimer;
            null != timer && (clearTimeout(timer), delete timer, timer = null);
        },
        hideContextMenu: function() {
            this.contextMenu.hide();
        },
        renderContextMenu: function(x, y) {
            for (var t = this, html = "", items = t.options.contextMenuItems, i = 0, il = items.length; il > i; i++) if (items[i].isSeparator) html += '<div class="mejs-contextmenu-separator"></div>'; else {
                var rendered = items[i].render(t);
                null != rendered && (html += '<div class="mejs-contextmenu-item" data-itemindex="' + i + '" id="element-' + 1e6 * Math.random() + '">' + rendered + "</div>");
            }
            t.contextMenu.empty().append($(html)).css({
                top: y,
                left: x
            }).show(), t.contextMenu.find(".mejs-contextmenu-item").each(function() {
                var $dom = $(this), itemIndex = parseInt($dom.data("itemindex"), 10), item = t.options.contextMenuItems[itemIndex];
                "undefined" != typeof item.show && item.show($dom, t), $dom.click(function() {
                    "undefined" != typeof item.click && item.click(t), t.contextMenu.hide();
                });
            }), setTimeout(function() {
                t.killControlsTimer("rev3");
            }, 100);
        }
    });
}(mejs.$), function($) {
    $.extend(mejs.MepDefaults, {
        postrollCloseText: mejs.i18n.t("Close")
    }), $.extend(MediaElementPlayer.prototype, {
        buildpostroll: function(player, controls, layers) {
            var t = this, postrollLink = t.container.find('link[rel="postroll"]').attr("href");
            "undefined" != typeof postrollLink && (player.postroll = $('<div class="mejs-postroll-layer mejs-layer"><a class="mejs-postroll-close" onclick="$(this).parent().hide();return false;">' + t.options.postrollCloseText + '</a><div class="mejs-postroll-layer-content"></div></div>').prependTo(layers).hide(), 
            t.media.addEventListener("ended", function() {
                $.ajax({
                    dataType: "html",
                    url: postrollLink,
                    success: function(data) {
                        layers.find(".mejs-postroll-layer-content").html(data);
                    }
                }), player.postroll.show();
            }, !1));
        }
    });
}(mejs.$), function(window) {
    function init() {
        Modernizr.touch ? window.location.href = "http://www.ef.com" : (YT.animations.welcomeScreen(), 
        YT.app.init(), YT.helpers.init());
    }
    function share() {
        YT.app.init(), YT.helpers.init(), YT.sharePage.init();
    }
    var playlist = [], playlistCount = 0;
    window.YT = {
        init: init,
        share: share,
        playlist: playlist,
        playlistCount: playlistCount
    };
}(window), YT.sharePage = function() {
    function init() {
        getURIdata(), downloadVideos(data);
    }
    function getURIdata() {
        var queryString = YT.helpers.getUrlVars();
        data = jQuery.parseJSON(decodeURIComponent(queryString.data));
    }
    function downloadVideos(data) {
        for (var i = 0; i < data.length; i++) {
            var categoryPromise = $.Deferred();
            videoPromises.push(categoryPromise), $(".subtitles").append("<li>" + data[i].text + "</li>"), 
            YT.playlist.push(data[i].video), YT.app.resolveVideos(data[i].video, i);
        }
    }
    var data = {}, videoPromises = [];
    return {
        init: init
    };
}(window), YT.animations = function() {
    function welcomeScreen() {
        console.log("intro animation"), $(".section-loading").addClass("active"), $("#intromessage li:eq(0)").fadeIn(800), 
        setTimeout(function() {
            $("#intromessage li:eq(1)").fadeIn(function() {
                setTimeout(function() {
                    showFirstScreen();
                }, 2e3);
            });
        }, 3e3);
    }
    function showFirstScreen() {
        $(".article-start__title,.article-start__line").addClass("animated fadeInDown"), 
        $(".article-loading").fadeOut(function() {
            setTimeout(function() {
                $(".article-start__desc,.article-start__btn").addClass("animated fadeIn");
            }, 1e3);
        });
    }
    function playlistIntro(callback) {
        $(".full-screen-section.active .button--play").fadeOut(2500), $("#mainVideo").fadeOut(2500, function() {
            callback();
        });
    }
    function share() {
        $(".article-outromessage").fadeOut();
    }
    function replay(callback) {
        $(".section-last .full-screen-image").fadeOut(1e3), $(".article-sharepage").fadeOut(1e3, function() {
            callback();
        });
    }
    return {
        welcomeScreen: welcomeScreen,
        playlistIntro: playlistIntro,
        share: share,
        replay: replay
    };
}(window), YT.app = function() {
    function init() {
        downloadAmbients(), downloadVideos(6), initVideo(function() {
            playVideo("#start");
        }), initAudio(), $.when.apply(null, videoPromises).done(function() {
            console.log("ALL VIDEOS HAVE DOWNLOADED MOTHERFUCKER"), $(".button--play").css("visibility", "visible");
        }), bindActionButtons();
    }
    function downloadAmbients() {
        return new Promise(resolveAmbients);
    }
    function downloadVideos(nrOfcategories) {
        for (var i = 0; nrOfcategories > i; i++) {
            var categoryPromise = $.Deferred();
            videoPromises.push(categoryPromise);
        }
    }
    function resolveAmbients(resolve) {
        var resource, loader = new PxLoader();
        $fullScreenSection.each(function() {
            var videoUrl = $(this).attr("data-video");
            videoUrl && (ambients.push(videoUrl), resource = new PxLoaderVideo(videoUrl), loader.add(resource));
        }), loader.addProgressListener(function(e) {
            console.log("Ambient " + e.completedCount + " downloaded");
        }), loader.addCompletionListener(function() {
            console.log("All the ambients are downloaded. Resolve promise"), resolve();
        }), loader.start();
    }
    function resolveVideos(url, index) {
        var loader = new PxLoader();
        loader.add(new PxLoaderVideo(url)), loader.addCompletionListener(function() {
            console.log("Video " + index + " downloaded"), videoPromises[index].resolve();
        }), loader.start();
    }
    function initVideo(callback) {
        videojs("mainVideo").ready(function() {
            myPlayer = this, myPlayer.loop(!0);
        }), YT.helpers.adjustVideoPositioning(el_fullScreenVideo), callback();
    }
    function playVideo(target) {
        var videoToPlay = $(target).attr("data-video"), poster = $(target).find(".full-screen-image").attr("src");
        $(el_fullScreenVideo).find("video").attr("poster", poster), myPlayer.src(videoToPlay), 
        myPlayer.play(), Modernizr.video && $(target).find(".full-screen-image").fadeOut();
    }
    function bindActionButtons() {
        $(".article-start__btn").click(function(e) {
            var target = $(this).attr("href");
            Modernizr.touch || moveBGvideo(scrollDirection), goToSection(1, target, !0), e.preventDefault();
        }), $(".link-list a").click(function(e) {
            var target = $(this).attr("href"), videoUrl = $(this).attr("data-video"), text = ($.trim($(this).text()), 
            $(this).attr("data-text")), ulElement = $(this).closest("ul");
            return $(this).hasClass("active") ? !1 : ($(this).addClass("active"), YT.playlist.push(videoUrl), 
            selectedCatogories[YT.helpers.getNumberOfCategory(ulElement)] = YT.helpers.getNumberOfOption($(this), ulElement), 
            resolveVideos(videoUrl, YT.playlist.indexOf(videoUrl)), $(".subtitles").append("<li>" + text + "</li>"), 
            setTimeout(function() {
                Modernizr.touch || moveBGvideo(scrollDirection), goToSection(1, target, !0);
            }, 200), void e.preventDefault());
        }), $(".button--play").click(function(e) {
            var input_name = $(".name-field__inputarea").text();
            YT.animations.playlistIntro(function() {
                myPlayer.loop(!1), myPlayer.src(""), goToSection(1, "#playingPlaylist", !1, function() {
                    playPlaylist();
                });
            }), $(".input-share[type='text']").attr("value", YT.helpers.getShareLink(input_name, selectedCatogories)), 
            e.preventDefault();
        }), $("#replay").on("click", function() {
            YT.animations.replay(function() {
                goToSection(-1, "#playingPlaylist", !1, function() {
                    console.log("replay video"), playPlaylist(), $(".subtitles").show(), $(".article-outromessage").show(), 
                    $(".section-last .full-screen-image").show(), $(".article-sharepage").show();
                });
            });
        });
    }
    function goToSection(steps, target, animate, callback) {
        distanceScrolled -= 100 * steps, animate ? $sectionContainer.transition({
            y: distanceScrolled + "%",
            easing: "custom-ease",
            duration: 800
        }, function() {
            $fullScreenSection.removeClass("active"), $(target).addClass("active"), $(el_fullScreenVideo).css({
                transform: "translate(0, 0)"
            }), Modernizr.touch || playVideo(target), callback && "function" == typeof callback && callback();
        }) : ($fullScreenSection.removeClass("active"), $(target).addClass("active"), $sectionContainer.css({
            transform: "translate(0, " + distanceScrolled + "%)"
        }), callback && "function" == typeof callback && callback());
    }
    function moveBGvideo(direction) {
        var move;
        move = "-1" === direction ? "100%" : "-100%", $(el_fullScreenVideo).transition({
            y: move,
            easing: "custom-ease",
            duration: 800
        });
    }
    function initAudio() {
        $mainAudioCtrl.show(), $mainAudio[0].volume = .5, $("#volumeCtrl").on("change", function() {
            var val = $(this).val();
            console.log($(this).val()), $mainAudio[0].volume = val / 100;
        });
    }
    function playPlaylist() {
        YT.playlistCount = 0, $(el_fullScreenVideo).find("video").attr("poster", ""), $(el_fullScreenVideo).show(), 
        playPlaylistIndex(YT.playlistCount), $mainAudio[0].volume = .5, $mainAudio[0].currentTime = 0, 
        $mainAudio[0].play(), $("#mainVideo video").bind("ended", function() {
            YT.playlistCount < YT.playlist.length ? (console.log(YT.playlistCount), playPlaylistIndex(YT.playlistCount)) : ($mainAudio.animate({
                volume: 0
            }, 5e3, function() {
                $mainAudio[0].pause();
            }), $(".subtitles,#mainVideo").hide(), goToSection(1, "#last", !1, function() {
                setTimeout(function() {
                    YT.animations.share();
                }, 4e3);
            }), $(this).unbind("ended"), console.log("ENDED"));
        });
    }
    function playPlaylistIndex(index) {
        $(".subtitles li").hide(), $(".subtitles li:eq(" + index + ")").show(), setTimeout(function() {
            $(".subtitles li:eq(" + index + ")").hide();
        }, 3e3), myPlayer.src(YT.playlist[index]), myPlayer.play(), YT.playlistCount++;
    }
    var myAudioPlayer, myPlayer, $fullScreenSection = ($(".full-screen-image"), $(".full-screen-section")), $sectionContainer = $(".wrapper"), $mainAudio = $("#mainAudio"), $mainAudioCtrl = $("#volumeCtrl"), el_fullScreenVideo = "#mainVideo", distanceScrolled = 0, scrollDirection = 1, ambients = [], videoPromises = [], selectedCatogories = [];
    return $.cssEase["custom-ease"] = "cubic-bezier(1,0,0,1)", {
        init: init,
        myPlayer: myPlayer,
        myAudioPlayer: myAudioPlayer,
        initAudio: initAudio,
        downloadVideos: downloadVideos,
        resolveVideos: resolveVideos
    };
}(window), YT.helpers = function(window) {
    function init() {
        bindWindowResize($fullScreenImage, el_fullScreenVideo), adjustImagePositioning($fullScreenImage), 
        namePlaceholder(), shareInput();
    }
    function bindWindowResize(imageElements, videoElement) {
        $(window).resize(function() {
            adjustImagePositioning(imageElements), adjustVideoPositioning(videoElement);
        });
    }
    function adjustImagePositioning(element) {
        element.each(function() {
            var $img = $(this), img = new Image();
            img.src = $img.attr("src");
            var new_w, new_h, windowWidth = $window.width(), windowHeight = $window.height(), r_w = windowHeight / windowWidth, i_w = img.width, i_h = img.height, r_i = i_h / i_w;
            r_w > r_i ? (new_h = windowHeight, new_w = windowHeight / r_i) : (new_h = windowWidth * r_i, 
            new_w = windowWidth), $img.css({
                width: new_w,
                height: new_h,
                left: (windowWidth - new_w) / 2,
                top: (windowHeight - new_h) / 2
            });
        });
    }
    function adjustVideoPositioning(element) {
        var windowW = $window.width(), windowH = $window.height(), windowAspect = windowW / windowH;
        mediaAspect > windowAspect ? ($(element).find("video").width(windowH * mediaAspect).height(windowH), 
        $(element).css("top", 0).css("left", -(windowH * mediaAspect - windowW) / 2).css("height", windowH), 
        $(element + "_html5_api").css("width", windowH * mediaAspect), $(element + "_flash_api").css("width", windowH * mediaAspect).css("height", windowH)) : ($(element).find("video").width(windowW).height(windowW / mediaAspect), 
        $(element).css("top", -(windowW / mediaAspect - windowH) / 2).css("left", 0).css("height", windowW / mediaAspect), 
        $(element + "_html5_api").css("width", "100%"), $(element + "_flash_api").css("width", windowW).css("height", windowW / mediaAspect));
    }
    function shareInput() {
        $(".input-share").click(function() {
            $(this).select();
        });
    }
    function namePlaceholder() {
        var isPlaceholder = !0;
        $(".name-field__inputarea").on("keypress", function(event) {
            return isPlaceholder && ($(this).empty(), isPlaceholder = !1), 13 == event.which ? !1 : void 0;
        }).on("focusout", function() {
            var currentName = $(this).html();
            placeholderText = $(this).attr("data-text"), 0 === currentName.length || isPlaceholder ? ($(this).text(placeholderText), 
            isPlaceholder = !0, $(this).removeClass("ready")) : $(this).addClass("ready");
        }).on("focuson", function() {
            $(this).removeClass("ready");
        });
    }
    var mediaAspect = 16 / 9, $window = $(window), $fullScreenImage = $(".full-screen-image"), el_fullScreenVideo = "#mainVideo", getNumberOfCategory = function(ulElement) {
        for (var categories = $("ul.link-list"), i = 0; i < categories.length; i++) if (categories[i] == ulElement[0]) return i;
        return null;
    }, getNumberOfOption = function(anchorElement, ulElement) {
        for (var options = ulElement.find("li a"), i = 0; i < options.length; i++) if (options[i] == anchorElement[0]) return i;
        return null;
    }, getShareLink = function(userName, selectedCatogories) {
        selectedCatogories.sort();
        var serializedString = selectedCatogories.join("_") + "_" + userName;
        return console.log(serializedString), console.log(window.location.host + window.Settings.VideoPageUrl + "?id=" + btoa(escape(serializedString))), 
        window.location.host + window.Settings.VideoPageUrl + "?id=" + btoa(escape(serializedString));
    };
    return {
        init: init,
        bindWindowResize: bindWindowResize,
        adjustVideoPositioning: adjustVideoPositioning,
        adjustImagePositioning: adjustImagePositioning,
        getNumberOfOption: getNumberOfOption,
        getNumberOfCategory: getNumberOfCategory,
        getShareLink: getShareLink
    };
}(window);